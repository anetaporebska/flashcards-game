{"question":"3 kinds of variables","answer":"Fields – member variables in a class, local variables – variables in a method or block of code, parameters – variables in method declarations","date":1642096592172,"level":4,"_id":"09FIrNVXlyRc2jsh"}
{"question":"SortedSet","answer":"A SortedSet is a Set that maintains its elements in ascending order, sorted according to the elements' natural ordering or according to a Comparator provided at SortedSet creation time. In addition to the normal Set operations, the SortedSet interface provides operations for the following: 1. Range view — allows arbitrary range operations on the sorted set 2. Endpoints — returns the first or last element in the sorted set 3. Comparator access — returns the Comparator, if any, used to sort the set","date":1645025080501,"level":5,"_id":"0GdzWtoWUXqSesUF"}
{"question":"What is a JavaBean?","answer":"JavaBean is a reusable software component written in the Java programming language, designed to be manipulated visually by a software development environment, like JBuilder or VisualAge for Java. t. A JavaBean encapsulates many objects into one object so that we can access this object from multiple places. Moreover, it provides the easy maintenance. ","date":1640362076747,"level":5,"_id":"0Pxsp6gRc5K08gfN"}
{"question":" Does Spring Bean provide thread safety?","answer":"The default scope of Spring bean is singleton, so there will be only one instance per context. That means that all the having a class level variable that any thread can update will lead to inconsistent data. Hence in default mode spring beans are not thread-safe.\nHowever, we can change spring bean scope to request, prototype or session to achieve thread-safety at the cost of performance. It’s a design decision and based on the project requirements.","date":1639580414356,"level":4,"_id":"0RpfMgtdgGv0ODuW"}
{"question":"Path ","answer":"A Path instance contains the information used to specify the location of a file or directory. At the time it is defined, a Path is provided with a series of one or more names. A root element or a file name might be included, but neither are required. A Path might consist of just a single directory or file name.","date":1639385911266,"level":4,"_id":"0XSHPEXEbjh0w3EU"}
{"question":"Is ++ operator is thread-safe in Java?","answer":"No, it’s not a thread-safe operator because it involves multiple instructions like reading a value, incriminating it and storing it back into memory which can be overlapped between multiple threads. ","date":1640899099218,"level":5,"_id":"0fbAJefkkChzpljB"}
{"question":"Statement","answer":"Statements are roughly equivalent to sentences in natural languages, but instead of ending with a period, a statement ends with a semicolon. Statements may be grouped into blocks. A block is a group of zero or more statements between balanced braces and can be used anywhere a single statement is allowed.","date":1639498125181,"level":5,"_id":"0jMgvzZRgLfDSXUA"}
{"question":"Is Java “pass-by-reference” or “pass-by-value”?","answer":"Java is always pass-by-value. Unfortunately, when we pass the value of an object, we are passing the reference to it. There is no such thing as \"pass-by-reference\" in Java.","date":1643468278244,"level":5,"_id":"0kl5zhWc5x5u1kbh"}
{"question":"Parallel Garbage Collector","answer":"Parallel garbage collector is also called as throughput collector. It is the default garbage collector of the JVM. Unlike serial garbage collector, this uses multiple threads for garbage collection. Similar to serial garbage collector this also freezes all the application threads while performing garbage collection.","date":1642877940401,"level":5,"_id":"0pa6CkuwjHi8xxGW"}
{"question":" What in the world are Spring beans?\n  ","answer":"Spring beans are just object instances that are managed by the Spring container, namely, they are created and wired by the framework and put into a \"bag of objects\" (the container) from where you can get them later.\n\nThe \"wiring\" part there is what dependency injection is all about, what it means is that you can just say \"I will need this thing\" and the framework will follow some rules to get you the proper instance.","date":1639331661880,"level":1,"_id":"14RG8qakfT6HdHPL"}
{"question":"Does it matter in what order catch statements for FileNotFoundException and IOException are written?","answer":"Yes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first.","date":1639385911311,"level":4,"_id":"15p51POSLEMb41ct"}
{"question":"What is hash-collision in Hashtable and how it is handled in Java?","answer":"Two different keys with the same hash value are known as hash-collision. Two separate entries will be kept in a single hash bucket to avoid the collision. There are two ways to avoid hash-collision.\n\n    Separate Chaining\n    Open Addressing","date":1640637238945,"level":5,"_id":"16fIFNuQFk4yBx63"}
{"question":"Starvation","answer":"Starvation describes a situation where a thread is unable to gain regular access to shared resources and is unable to make progress. This happens when shared resources are made unavailable for long periods by \"greedy\" threads. For example, suppose an object provides a synchronized method that often takes a long time to return. If one thread invokes this method frequently, other threads that also need frequent synchronized access to the same object will often be blocked.","date":1639385911271,"level":4,"_id":"18OGe14WWGzi1hJm"}
{"question":"What is lambda expression in java? ","answer":"A lambda expression (lambda) describes a block of code (an anonymous function) that can be passed to constructors or methods for subsequent execution. The constructor or method receives the lambda as an argument.","date":1642966715363,"level":5,"_id":"1Rs48l1CYxNORO06"}
{"question":"fail-safe Iterator","answer":"Fail-Safe iterators don’t throw any exceptions if a collection is structurally modified while iterating over it. This is because, they operate on the clone of the collection, not on the original collection and that’s why they are called fail-safe iterators. Iterator on CopyOnWriteArrayList, ConcurrentHashMap classes are examples of fail-safe Iterator.","date":1641239331991,"level":0,"_id":"1dc6ZieIcWWzyzQ8"}
{"question":"Thread interference","answer":"Interference happens when two operations, running in different threads, but acting on the same data, interleave. This means that the two operations consist of multiple steps, and the sequences of steps overlap.","date":1643467169627,"level":5,"_id":"1fp6EsBPd2evHpA4"}
{"question":"What do you understand by fail-fast?","answer":"The Iterator in java which immediately throws ConcurrentmodificationException, if any structural modification occurs in, is called as a Fail-fast iterator. Fail-fats iterator does not require any extra space in memory.\n","date":1642604423075,"level":5,"_id":"1iCA3y9U26LhdgLA"}
{"question":"What is the difference between Synchronous programming and Asynchronous programming regarding a thread?","answer":"Synchronous programming: In Synchronous programming model, a thread is assigned to complete a task and hence thread started working on it, and it is only available for other tasks once it will end the assigned task.\n\nAsynchronous Programming: In Asynchronous programming, one job can be completed by multiple threads and hence it provides maximum usability of the various threads.","date":1643033990422,"level":5,"_id":"1oKwoROJv9W0KsbZ"}
{"question":"Can we override the static methods?","answer":"no","date":1641658129780,"level":6,"_id":"1wilVc9wpkKlo5NF"}
{"question":"Separate Chaining","answer":"The idea is to make each cell of hash table point to a linked list of records that have same hash function value. ","date":1643466870283,"level":5,"_id":"1y94NdKolAEvQ0qL"}
{"question":"What are concurrent collection classes?","answer":"    BlockingQueue,     ArrayBlockingQueue,    SynchronousQueue,    PriorityBlockingQueue,    LinkedBlockingQueue,    DelayQueue,    BlockingDeque,    LinkedBlockingDeque,    TransferQueue,    LinkedTransferQueue,    ConcurrentMap,   ConcurrentHashMap,    ConcurrentNavigableMap,    ConcurrentSkipListMap","date":1639677435472,"level":2,"_id":"1ypTdYX2NN1SrDee"}
{"question":"flushing the buffer","answer":"It often makes sense to write out a buffer at critical points, without waiting for it to fill. This is known as flushing the buffer. Some buffered output classes support autoflush, specified by an optional constructor argument. When autoflush is enabled, certain key events cause the buffer to be flushed. For example, an autoflush PrintWriter object flushes the buffer on every invocation of println or format. To flush a stream manually, invoke its flush method. The flush method is valid on any output stream, but has no effect unless the stream is buffered.","date":1642096544532,"level":4,"_id":"20qpt9tnebznzlIh"}
{"question":"What are benefits of using Spring?","answer":"Lightweight, Inversion of control, Aspect oriented, containter, MVC framework, Transaction Managment, Exception Handling","date":1641239321858,"level":1,"_id":"22ckOgTp1922Ykxp"}
{"question":"What is a View and what's the idea behind supporting different types of View?","answer":"A View is an interface in Spring MVC application whose implementations are responsible for rendering context and exposing the model. A single view exposes multiple model attributes. Views in Spring MVC can be beans.\nThey are likely to be instantiated as beans by a ViewResolver. As this interface is stateless, view implementations should be thread-safe. By using ViewResolver, a logical name of view can be resolved into different types of View implementation, e.g. JstlView for displaying JSP or other view implementations for FreeMarker and Velocity.","date":1639332249218,"level":1,"_id":"2L8vKtuPwOxK0Y5O"}
{"question":"The difference between Serializable and Externalizable in Java?","answer":"Serializable interface is used to make Java classes serializable so that they can be transferred over a network or their state can be saved on disk, but it leverages default serialization built-in JVM, which is expensive, fragile and not secure. Externalizable allows you to fully control the Serialization process, specify a custom binary format and add more security measure.","date":1645821308656,"level":6,"_id":"2Pgje2xjY2ppRG0p"}
{"question":"Why is Java Secure?","answer":"Java does not allow pointers. Pointers give access to actual locations of variables in a system. Also, java programs are bytecode executables that can run only in a JVM. Hence java programs do not have access to the host systems on which they are executing, making it more secure. Java has its own memory management system, which adds to the security feature as well. ","date":1645120622447,"level":5,"_id":"2VXFvQb8iwqgXamj"}
{"question":"Advantages of exceptions","answer":"Separating error-handling code from „regular” code, propagating errors up the call stack, grouping and differentiating error types, ","date":1641136996562,"level":4,"_id":"2VzD1XLgS5ZDvODD"}
{"question":"Math.random vs java.util.Random","answer":"Using Math.random works well when you need to generate a single random number. If you need to generate a series of random numbers, you should create an instance of java.util.Random and invoke methods on that object to generate numbers.","date":1641721171654,"level":4,"_id":"2gtiFwcsXmwhKDhU"}
{"question":"What is the nested interface? ","answer":"An Interface that is declared inside the interface or class is known as the nested interface. It is static by default. The nested interfaces are used to group related interfaces so that they can be easy to maintain. The external interface or class must refer to the nested interface. It can't be accessed directly. The nested interface must be public if it is declared inside the interface but it can have any access modifier if declared within the class.","date":1639677599012,"level":2,"_id":"2ogpW8fsHEKkMBNn"}
{"question":"What are the differences between Statement and PreparedStatement interface?","answer":"The Statement interface provides methods to execute queries with the database. The statement interface is a factory of ResultSet; i.e., it provides the factory method to get the object of ResultSet.The PreparedStatement interface is a subinterface of Statement. It is used to execute the parameterized query.In the case of Statement, the query is compiled each time we run the program. In the case of PreparedStatement, the query is compiled only once.The Statement is mainly used in the case when we need to run the static query at runtime.PreparedStatement is used when we need to provide input parameters to the query at runtime.","date":1642096331647,"level":4,"_id":"2v7mtZo2a0Gj5Yon"}
{"question":"What is lock interface in Concurrency API in Java?","answer":"The java.util.concurrent.locks.Lock interface is used as the synchronization mechanism. It works similar to the synchronized block. There are a few differences between the lock and synchronized block: 1) Lock interface provides the guarantee of sequence in which the waiting thread will be given the access, whereas the synchronized block doesn't guarantee it. 2) Lock interface provides the option of timeout if the lock is not granted whereas the synchronized block doesn't provide that. The methods of Lock interface, i.e., Lock() and Unlock() can be called in different methods whereas single synchronized block must be fully contained in a single method.","date":1641239140381,"level":1,"_id":"3Dt07X5bWp83ZYPx"}
{"question":"@Retention","answer":"@Retention annotation specifies how the marked annotation is stored: RetentionPolicy.SOURCE – The marked annotation is retained only in the source level and is ignored by the compiler.  RetentionPolicy.CLASS – The marked annotation is retained by the compiler at compile time, but is ignored by the Java Virtual Machine (JVM).  RetentionPolicy.RUNTIME – The marked annotation is retained by the JVM so it can be used by the runtime environment. ","date":1639561090958,"level":3,"_id":"3Gs0JczSWbKOYhds"}
{"question":"What is the difference between Collection and Stream?","answer":"Collections allow you to work with elements separately, while streams do not allow this, but instead provides the ability to perform functions on data as one.","date":1639580175059,"level":4,"_id":"3Sxcb7rHMIpgsne0"}
{"question":"Why is Java Platform Independent?","answer":"At the time of compilation, the java compiler converts the source code into a JVM interpretable set of intermediate form, which is termed as byte code. This is unlike the compiled code generated by other compilers and is non-executable. The java virtual machine interpreter processes the non-executable code and executes it on any specific machine. Hence the platform dependency is removed. ","date":1640545401226,"level":5,"_id":"3UegX7icYxhwjeE1"}
{"question":"What is a JSP Page?","answer":"A Java Server Page (JSP) is a text document that contains two types of text:\n    static data and  JSP elements. \nStatic data can be expressed in any text-based format, such as HTML or XML. JSP is a technology that mixes static content with dynamically-generated content.","date":1639677326433,"level":2,"_id":"3ZkBVe788KNJF9tf"}
{"question":"8 primitive data types","answer":"byte, short, int, long, float, double, boolean, char","date":1643818933656,"level":6,"_id":"3hfM0rrbJ3Rw6tvP"}
{"question":"[JDBC] SQLException","answer":"This class handles any errors that occur in a database application.","date":1639385911260,"level":4,"_id":"3xkgUd8kF8ivIJgw"}
{"question":"What are the main components of concurrency API?","answer":"Concurrency API can be developed using the class and interfaces of java.util.Concurrent package. There are the following classes and interfaces in java.util.Concurrent package: Executor, FarkJoinPool, ExecutorService, ScheduledExecutorService, Future, TimeUnit(Enum), CountDownLatch, CyclicBarrier     Semaphore     ThreadFactory     BlockingQueue     DelayQueue     Locks     Phaser ","date":1639677277357,"level":2,"_id":"4CvOUemmkqvA6Egq"}
{"question":" What is a JavaBean exactly?","answer":"Basically, a \"Bean\" follows the standard: is a serializable object; has \"properties\" whose getters and setters are just methods with certain names (like, say, getFoo() is the getter for the \"Foo\" property); has a public 0-arg constructor (so it can be created at will and configured by setting its properties). There is no syntactic difference between a JavaBean and another class - a class is a JavaBean if it follows the standards.","date":1639937758934,"level":2,"_id":"4T7X2pSmTdIRh4WU"}
{"question":"Weak References","answer":"Weak Reference Objects are not the default type/class of Reference Object and they should be explicitly specified while using them.","date":1642877703264,"level":5,"_id":"4iNl7gEw8UN6ZpJa"}
{"question":"Constructor","answer":"The constructor can be defined as the special type of method that is used to initialize the state of an object. It is invoked when the class is instantiated, and the memory is allocated for the object. Every time, an object is created using the new keyword, the default constructor of the class is called. The name of the constructor must be similar to the class name. The constructor must not have an explicit return type.","date":1644682984744,"level":6,"_id":"4k2tBhx8ARv96Fxf"}
{"question":"What comes to mind when someone mentions a shallow copy in Java?","answer":"Object cloning. ","date":1644682991305,"level":6,"_id":"4wus53WvALZgrwiB"}
{"question":"The format Method","answer":"The format method formats multiple arguments based on a format string. The format string consists of static text embedded with format specifiers; except for the format specifiers, the format string is output unchanged.","date":1639936496351,"level":2,"_id":"55KdKDgkWcV9wRPj"}
{"question":"Define FutureTask class in Java? ","answer":"Java FutureTask class provides a base implementation of the Future interface. The result can only be obtained if the execution of one task is completed, and if the computation is not achieved then get method will be blocked. If the execution is completed, then it cannot be re-started and can't be canceled.\nSyntax: public class FutureTask<V> extends Object implements RunnableFuture<V>","date":1639331601754,"level":1,"_id":"5HsyhZQMVMaIrE6h"}
{"question":"What is Downcasting?","answer":"It is the casting from a general to a more specific type, i.e. casting down the hierarchy.","date":1639580665596,"level":4,"_id":"5Jp5HNauvS9UEJ6e"}
{"question":"Explain Serialization and Deserialization.\n  ","answer":"Java provides a mechanism, called object serialization where an object can be represented as a sequence of bytes and includes the object’s data, as well as information about the object’s type, and the types of data stored in the object. Thus, serialization can be seen as a way of flattening objects, in order to be stored on disk, and later, read back and reconstituted. Deserialisation is the reverse process of converting an object from its flattened state to a live object.\n","date":1639385911308,"level":4,"_id":"5c0lu5lxQBoFe9mJ"}
{"question":"What is the static block?","answer":"Static block is used to initialize the static data member. It is executed before the main method, at the time of classloading.","date":1640803181848,"level":5,"_id":"5jJ5gaanqql8J1TJ"}
{"question":"JVM","answer":"Java Virtual Machine is a virtual machine that enables the computer to run the Java program. JVM acts like a run-time engine which calls the main method present in the Java code. JVM is the specification which must be implemented in the computer system. The Java code is compiled by JVM to be a Bytecode which is machine independent and close to the native code.","date":1639561163682,"level":3,"_id":"5oEGrhAccY1Nvvzd"}
{"question":"Strong References","answer":"This is the default type/class of Reference Object. Any object which has an active strong reference are not eligible for garbage collection. The object is garbage collected only when the variable which was strongly referenced points to null.","date":1640546504983,"level":5,"_id":"5ssfVNNzJEkcH4q3"}
{"question":"Does Java allow Default Arguments?","answer":"No, Java does not allow Default Arguments.","date":1639385911312,"level":4,"_id":"5xe2HLZCn8khxEBP"}
{"question":"What is covariant return type?","answer":"It is possible to have different return type for a overriding method in child class, but child’s return type should be sub-type of parent’s return type. Overriding method becomes variant with respect to return type. The covariant return type specifies that the return type may vary in the same direction as the subclass.","date":1640637602335,"level":5,"_id":"5ypJKyMqp6kzo1YG"}
{"question":"Which interface is responsible for transaction management in JDBC?","answer":"The Connection interface provides methods for transaction management such as commit(), rollback() etc.","date":1640961752919,"level":5,"_id":"62F6e1oe6hMMwefV"}
{"question":"Can we change the scope of the overridden method in the subclass?","answer":"Yes, we can change the scope of the overridden method in the subclass. However, we must notice that we cannot decrease the accessibility of the method. (for example: The protected can be changed to public or default.)","date":1641239759919,"level":4,"_id":"6BBZJ95hK5Yrn0LN"}
{"question":"State Two Differences Between an Inner Class and a Subclass","answer":"While Inner classes are in the same file, subclasses can be in another file. With that in mind, while subclasses have the methods of their parent class, inner classes get the methods they want.","date":1640546594805,"level":5,"_id":"6MdEHBHFNS7Vtxpv"}
{"question":" How are the JSP requests handled?","answer":"On the arrival of a JSP request, the browser first requests a page with a .jsp extension. Then, the Web server reads the request and using the JSP compiler, the Web server converts the JSP page into a servlet class. Notice that the JSP file is compiled only on the first request of the page, or if the JSP file has changed.The generated servlet class is invoked, in order to handle the browser’s request. Once the execution of the request is over, the servlet sends a response back to the client. See how to get Request parameters in a JSP.","date":1640542494383,"level":3,"_id":"6PxxNmvXe79jv66L"}
{"question":"What is the difference between Java Callable interface and Runnable interface?","answer":"The Callable interface and Runnable interface both are used by the classes which wanted to execute with multiple threads. However, there are two main differences between the both :      A Callable <V> interface can return a result, whereas the Runnable interface cannot return any result.     A Callable <V> interface can throw a checked exception, whereas the Runnable interface cannot throw checked exception.     A Callable <V> interface cannot be used before the Java 5 whereas the Runnable interface can be used. ","date":1641239347032,"level":3,"_id":"6TPj1FHl6FQZtHZn"}
{"question":"Since Java has a garbage collection feature, does this mean your program can never run out of memory?","answer":"Not necessarily. Although Java does have an automatic garbage collection feature, this won’t do you any good if you’re creating objects faster than your garbage collector can work. So while garbage collection does mean it’s harder for your program to run out of memory, don’t push your luck – it can still happen.","date":1643273911273,"level":5,"_id":"6WwYuLBrXkmJZHMQ"}
{"question":"What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?","answer":"The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented. The ByteStream classes are used to perform input-output of 8-bit bytes whereas the CharacterStream classes are used to perform the input/output for the 16-bit Unicode system. ","date":1642519439991,"level":5,"_id":"6kZbgFgNL1LPZYcP"}
{"question":"Java Collections Interfaces","answer":"    Collection Interface,    Iterator Interface,    Set Interface,    List Interface,    Queue Interface,    Dequeue Interface,    Map Interface,    ListIterator Interface,    SortedSet Interface,    SortedMap Interface","date":1641239290205,"level":1,"_id":"6uxmU3I8R2iC80K5"}
{"question":"Is JVM platform independent?","answer":"no, JVM is a platform; Java is platform independent; JVM depends on OS kernel","date":1640545401230,"level":5,"_id":"71HCNJcuKKLm4X35"}
{"question":"Can we declare an interface as final?","answer":"No, we cannot declare an interface as final because the interface must be implemented by some class to provide its definition. Therefore, there is no sense to make an interface final. However, if you try to do so, the compiler will show an error.","date":1643819119079,"level":6,"_id":"75KOaSRypRKsHoN7"}
{"question":"What are FilterStreams? ","answer":"FilterStream classes are used to add additional functionalities to the other stream classes. FilterStream classes act like an interface which read the data from a stream, filters it, and pass the filtered data to the caller. The FilterStream classes provide extra functionalities like adding line numbers to the destination file, etc.","date":1640637638918,"level":5,"_id":"7LeiLCG7sMFNYzIO"}
{"question":"What is EnumSet?","answer":"Java EnumSet class is the specialized Set implementation for use with enum types. It inherits AbstractSet class and implements the Set interface.     It can contain only enum values and all the values have to belong to the same enum.\n    It doesn't allow to add null values, throwing a NullPointerException in an attempt to do so.     It's not thread-safe, so we need to synchronize it externally if required.     The elements are stored following the order in which they are declared in the enum.     It uses a fail-safe iterator that works on a copy, so it won't throw a ConcurrentModificationException if the collection is modified when iterating over it.","date":1641239100768,"level":3,"_id":"7MPzeYKxuDUTx2Pn"}
{"question":"Class variable","answer":"static field","date":1643819141837,"level":6,"_id":"7Qf39haRSBhv4I41"}
{"question":"Java platform ","answer":"The Java platform differs from most other platforms in that it's a software-only platform that runs on top of other hardware-based platforms. The Java platform has two components: JVM, The Java Application Programming Interface (API) ","date":1640940111214,"level":4,"_id":"7QrQgjFmvO1UPRtq"}
{"question":"What is JDBC Driver?","answer":"JDBC Driver is a software component that enables Java application to interact with the database. ","date":1641655828694,"level":5,"_id":"7l6Y1JDPEQv5euKs"}
{"question":"How to make an ArrayList read only in Java?","answer":"An ArrayList can be made read-only easily with the help of Collections.unmodifiableList() method. This method takes the modifiable ArrayList as a parameter and returns the read-only unmodifiable view of this ArrayList.","date":1639814761947,"level":2,"_id":"7ucYRhnYMbkfxGHo"}
{"question":"@Target","answer":"@Target annotation marks another annotation to restrict what kind of Java elements the annotation can be applied to. A target annotation specifies one of the following element types as its value: ElementType.ANNOTATION_TYPE can be applied to an annotation type. ElementType.CONSTRUCTOR can be applied to a constructor. ElementType.FIELD can be applied to a field or property. ElementType.LOCAL_VARIABLE can be applied to a local variable. ElementType.METHOD can be applied to a method-level annotation. ElementType.PACKAGE can be applied to a package declaration. ElementType.PARAMETER can be applied to the parameters of a method. ElementType.TYPE can be applied to any element of a class. ","date":1639846703893,"level":4,"_id":"881VDMu7BCgZn71w"}
{"question":"What is Application Context?","answer":"On the surface, an application context is the same as a bean factory. Both load bean definitions, wire beans together, and dispense beans upon request. But it also provides:\n    A means for resolving text messages, including support for internationalization\n    A generic way to load file resources\n    Events to beans that are registered as listeners","date":1639333047520,"level":1,"_id":"8JxUwGkD5cOFOKmU"}
{"question":"What is the Executor interface in Concurrency API in Java?","answer":"The Executor Interface provided by the package java.util.concurrent is the simple interface used to execute the new task. The execute() method of Executor interface is used to execute some given command. The syntax of the execute() method is given below.  void execute(Runnable command)","date":1640714391769,"level":5,"_id":"8ZFpzaoCC064YRyk"}
{"question":"Can an Interface have a class? ","answer":"Yes, they are static implicitly. ","date":1645121364515,"level":5,"_id":"94TDtSR4vG1rornw"}
{"question":"What is enumeration in Java?","answer":"Enumeration means a list of named constant. In Java, enumeration defines a class type. An Enumeration can have constructors, methods and instance variables. It is created using enum keyword. Each enumeration constant is public, static and final by default. Even though enumeration defines a class type and have constructors, you do not instantiate an enum using new. Enumeration variables are used and declared in much a same way as you do a primitive variable. ","date":1641233197589,"level":4,"_id":"9J7MDnnaYZdU0V0w"}
{"question":"How to make a read-only class in Java? ","answer":"A class can be made read-only by making all of the fields private. The read-only class will have only getter methods which return the private property of the class to the main method. We cannot modify this property because there is no setter method available in the class.","date":1641239445506,"level":4,"_id":"9TpWXXRkJwN5gSXy"}
{"question":"What is context switching?","answer":"In Context switching the state of the process (or thread) is stored so that it can be restored and execution can be resumed from the same point later. Context switching enables the multiple processes to share the same CPU.","date":1645821699845,"level":6,"_id":"9WWYV7vyQPlvDqjD"}
{"question":"Can we call the run() method instead of start()?","answer":"Yes, calling run() method directly is valid, but it will not work as a thread instead it will work as a normal object. There will not be context-switching between the threads. When we call the start() method, it internally calls the run() method, which creates a new stack for a thread while directly calling the run() will not create a new stack. ","date":1640104082377,"level":5,"_id":"9m6pwRGeUcW2Tqb9"}
{"question":"How is garbage collection controlled?","answer":"Garbage collection is managed by JVM. It is performed when there is not enough space in the memory and memory is running low. We can externally call the System.gc() for the garbage collection. However, it depends upon the JVM whether to perform it or not.","date":1639499295888,"level":5,"_id":"9yHDQ76zSfugwzlr"}
{"question":"What are the different types of JDBC Driver?","answer":"JDBC-ODBC bridge driver, Native-API driver, Network Protocol driver, Thin driver","date":1642879681423,"level":5,"_id":"AB4TOIrCMqeky8HG"}
{"question":"local classes – what can access?","answer":"starting in Java SE 8, a local class can access local variables and parameters of the enclosing block that are final or effectively final. A variable or parameter whose value is never changed after it is initialized is effectively final. Starting in Java SE 8, if you declare the local class in a method, it can access the method's parameters. Local classes are similar to inner classes because they cannot define or declare any static members. \nLocal classes are non-static because they have access to instance members of the enclosing block. Consequently, they cannot contain most kinds of static declarations.","date":1643474731980,"level":5,"_id":"ACsDoI99ARvYXIKk"}
{"question":"JRE","answer":"JRE stands for Java Runtime Environment. It is the implementation of JVM. The Java Runtime Environment is a set of software tools which are used for developing Java applications. It is used to provide the runtime environment. It is the implementation of JVM. It physically exists. It contains a set of libraries + other files that JVM uses at runtime. ","date":1641233856171,"level":4,"_id":"ADjMrMht5nCfRKUe"}
{"question":"Differentiate between process and thread? ","answer":"     A Program in the execution is called the process whereas; A thread is a subset of the process     Processes are independent whereas threads are the subset of process.     Process have different address space in memory, while threads contain a shared address space.     Context switching is faster between the threads as compared to processes.     Inter-process communication is slower and expensive than inter-thread communication.     Any change in Parent process doesn't affect the child process whereas changes in parent thread can affect the child thread. ","date":1640073867804,"level":3,"_id":"ADzb5RBJctncPJZO"}
{"question":" Can I store a double value in a long variable without casting?","answer":"No, you cannot store a double value into a long variable without casting because the range of double is more than long and we need to type cast. It’s not difficult to answer this question but many developer get it wrong due to confusion on which one is bigger between double and long in Java. ","date":1639328969564,"level":4,"_id":"AZsyT7zbYVzYdRAT"}
{"question":"What are anonymous inner classes?","answer":"Anonymous inner classes are the classes that are automatically declared and instantiated within an expression. We cannot apply different access modifiers to them. Anonymous class cannot be static, and cannot define any static fields, method, or class. In other words, we can say that it a class without the name and can have only one object that is created by its definition. ","date":1639586143591,"level":4,"_id":"Az8Mqb5WypxQxQFD"}
{"question":"What is the deadlock?","answer":"Deadlock is a situation in which every thread is waiting for a resource which is held by some other waiting thread. In this situation, Neither of the thread executes nor it gets the chance to be executed. Instead, there exists a universal waiting state among all the threads. Deadlock is a very complicated situation which can break our code at runtime.","date":1639499427858,"level":5,"_id":"B4et7TqCc1n96cv9"}
{"question":"The instanceof operator","answer":"compares an object to a specified type. You can use it to test if an object is an instance of a class, an instance of a subclass, or an instance of a class that implements a particular interface. When using the instanceof operator, keep in mind that null is not an instance of anything.","date":1643819448716,"level":6,"_id":"BLoylZiDDlUpIGOg"}
{"question":"In a stack, peek() is O(1). How would you achieve O(1) lookup for peek() in a linked list?","answer":"Linked lists typically keep a reference to the head node. In peek()just return head.value.","date":1639385911309,"level":4,"_id":"BUKA8rOe4h2oT9f8"}
{"question":"Can you make a constructor final?","answer":"no","date":1641239315621,"level":3,"_id":"Bc34ofukGNLhkC2e"}
{"question":"What is JAR file?","answer":"JAR files is Java Archive fles and it aggregates many files into one. It holds Java classes in a library. JAR files are built on ZIP file format and have .jar file extension.","date":1643474124213,"level":5,"_id":"BqyBFXmc3HOwU08d"}
{"question":" What is the purpose of filter() method in streams?","answer":"The method filter() is an intermediate operation receiving a predicate that filters all elements, returning only those that match the condition.","date":1639385911250,"level":4,"_id":"C2pCumxYQrTQJqow"}
{"question":"Can you use abstract and final both with a method?","answer":"No","date":1643819465392,"level":6,"_id":"C5rrD1fwsfx3lCFg"}
{"question":"Java Heap Space","answer":"Java Heap space is used by java runtime to allocate memory to Objects and JRE classes. Whenever we create any object, it’s always created in the Heap space.\nGarbage Collection runs on the heap memory to free the memory used by objects that doesn’t have any reference. Any object created in the heap space has global access and can be referenced from anywhere of the application.","date":1639327309841,"level":4,"_id":"CBwrYpyGr6IELrjg"}
{"question":"What is an extension of compiled java source code?","answer":".class","date":1643819468318,"level":6,"_id":"CHoLD3W4zNLytk4E"}
{"question":"What is the purpose of the finalize() method?","answer":"The finalize() method is invoked just before the object is garbage collected. It is used to perform cleanup processing. The Garbage collector of JVM collects only those objects that are created by new keyword. So if you have created an object without new, you can use the finalize method to perform cleanup processing (destroying remaining objects).  we must note that neither finalization nor garbage collection is guaranteed.","date":1641233963358,"level":4,"_id":"CKBVLywuN806m2OI"}
{"question":"Does each thread have its stack in multithreaded programming?  ","answer":"Yes, in multithreaded programming every thread maintains its own or separate stack area in memory due to which every thread is independent of each other.","date":1644683528355,"level":6,"_id":"CRzDnlBqYggZyzx0"}
{"question":" buffered I/O streams","answer":"Buffered input streams read data from a memory area known as a buffer; the native input API is called only when the buffer is empty. Similarly, buffered output streams write data to a buffer, and the native output API is called only when the buffer is full.","date":1639385911265,"level":4,"_id":"CeAP47c1Q2wo31qY"}
{"question":"[JDBC] Connection","answer":"This interface with all methods for contacting a database. The connection object represents communication context, i.e., all communication with database is through connection object only.","date":1641239311909,"level":3,"_id":"CiGroemUlveFDHFD"}
{"question":"How to detect a deadlock condition? ","answer":"We can detect the deadlock condition by running the code on cmd and collecting the Thread Dump, and if any deadlock is present in the code, then a message will appear on cmd.  ","date":1642261108499,"level":5,"_id":"Cpuxzm72rYaMlNKq"}
{"question":"bounded type parameters (generic)","answer":" There may be times when you want to restrict the types that can be used as type arguments in a parameterized type. For example, a method that operates on numbers might only want to accept instances of Number or its subclasses. This is what bounded type parameters are for. To declare a bounded type parameter, list the type parameter's name, followed by the extends keyword, followed by its upper bound, which in this example is Number. Note that, in this context, extends is used in a general sense to mean either \"extends\" (as in classes) or \"implements\" (as in interfaces).","date":1639586537131,"level":4,"_id":"CvfxOFARPNbSpIf3"}
{"question":"interfaces used in Collection framework?","answer":"1. Collection interface, 2. List interface, 3. Set interface, 4. Queue interface, 5. Dequeue interface, 6. Map interface","date":1639938366195,"level":3,"_id":"CvkZcO9cmwLONyob"}
{"question":"Why Vector class is used?","answer":"The Vector class provides the capability to implement a growable array of objects. Vector proves to be very useful if you don't know the size of the array in advance, or you just need one that can change sizes over the lifetime of a program.","date":1643293984861,"level":5,"_id":"Cvrp6GUCsHYBkYT1"}
{"question":"What is a Functional Interface?","answer":"A functional interface is an interface that defines only one abstract method. To accurately determine the interface as functional, an annotation has been added @FunctionalInterface that works on the principle of @Override. It will designate a plan and will not allow to define the second abstract method in the interface. An interface can include as many default methods as you like while remaining functional, because default methods are not abstract.","date":1643273911246,"level":5,"_id":"D4aHdf8Fzddw6q7R"}
{"question":"What is the difference between HashSet and TreeSet?","answer":"The HashSet and TreeSet, both classes, implement Set interface. HashSet maintains no order whereas TreeSet maintains ascending order.    HashSet implemented by hash table whereas TreeSet implemented by a Tree structure.    HashSet performs faster than TreeSet.    HashSet is backed by HashMap whereas TreeSet is backed by TreeMap.","date":1645730956562,"level":6,"_id":"D4gDiKe6Q0anthoM"}
{"question":"How is event handling done in Spring?","answer":"Event handling in the ApplicationContext is provided through the ApplicationEvent class and ApplicationListener interface. So if a bean implements the ApplicationListener, then every time an ApplicationEvent gets published to the ApplicationContext, that bean is notified.","date":1641239354312,"level":3,"_id":"D963ilbZ6p85D10I"}
{"question":"Collection Interface – methods","answer":"A Collection represents a group of objects known as its elements. The Collection interface is used to pass around collections of objects where maximum generality is desired. For example, by convention all general-purpose collection implementations have a constructor that takes a Collection argument. This constructor, known as a conversion constructor, initializes the new collection to contain all of the elements in the specified collection, whatever the given collection's subinterface or implementation type. In other words, it allows you to convert the collection's type.","date":1643970011269,"level":5,"_id":"DIFnOIHxJEZnznQ9"}
{"question":"What are the main differences between array and collection?","answer":"    Arrays are always of fixed size, i.e., a user can not increase or decrease the length of the array according to their requirement or at runtime, but In Collection, size can be changed dynamically as per need.\n    Arrays can only store homogeneous or similar type objects, but in Collection, heterogeneous objects can be stored.\n    Arrays cannot provide the ?ready-made? methods for user requirements as sorting, searching, etc. but Collection includes readymade methods to use.","date":1642260987331,"level":5,"_id":"DcsTYG2m14471pfB"}
{"question":"How do WeakHashMap works?","answer":"WeakHashMap is a Hash table-based implementation of the Map interface with weak keys. An entry in a WeakHashMap will automatically be removed when its key is no longer in ordinary use. Both null values and the null key are supported. This class has performance characteristics similar to those of the HashMap class and has the same efficiency parameters of initial capacity and load factor.","date":1642097595519,"level":4,"_id":"Dg2szilnvLy13y1z"}
{"question":"What is the final blank variable?","answer":"A final variable, not initialized at the time of declaration, is known as the final blank variable. We can't initialize the final blank variable directly. Instead, we have to initialize it by using the class constructor.","date":1641239113312,"level":4,"_id":"Dh1diizXmlyHMmbs"}
{"question":"What is Optional?","answer":"An optional value Optionalis a container for an object that may or may not contain a value null. Such a wrapper is a convenient means of prevention NullPointerException, as has some higher-order functions, eliminating the need for repeating if null/notNullchecks","date":1639678027853,"level":2,"_id":"DijEIBblhvxRd8xU"}
{"question":"4 buffered stream classes","answer":"There are four buffered stream classes used to wrap unbuffered streams: BufferedInputStream and BufferedOutputStream create buffered byte streams, while BufferedReader and BufferedWriter create buffered character streams.","date":1639937007197,"level":3,"_id":"DoL28UFCfm8GWtDN"}
{"question":"Pattern object","answer":"A Pattern object is a compiled representation of a regular expression. The Pattern class provides no public constructors. To create a pattern, you must first invoke one of its public static compile methods, which will then return a Pattern object. These methods accept a regular expression as the first argument;","date":1639493589240,"level":1,"_id":"E0D478MfSlabBSn5"}
{"question":"Can we access the non-final local variable, inside the local inner class? ","answer":"No, the local variable must be constant if you want to access it in the local inner class.","date":1644683609854,"level":6,"_id":"EIxmnjQaZfThMo2S"}
{"question":"Types of inheritance in Java","answer":"Single-level inheritance; Multi-level inheritance; Multiple Inheritance; Hierarchical Inheritance; Hybrid Inheritance","date":1641656442420,"level":5,"_id":"ElKUdqv0jway8aq7"}
{"question":"Is it possible to instantiate the abstract class?","answer":"No","date":1643819623725,"level":6,"_id":"ElhnSfrrPpnwKACR"}
{"question":"Can you access non static variable in static context?","answer":"No, non-static variable cannot be referenced in a static context directly one needs to use object.","date":1642261260567,"level":5,"_id":"En0m9JUgZrweMN1j"}
{"question":"What is the difference between Collection and Collections?","answer":"    The Collection is an interface whereas Collections is a class.\n    The Collection interface provides the standard functionality of data structure to List, Set, and Queue. However, Collections class is to sort and synchronize the collection elements.\n    The Collection interface provides the methods that can be used for data structure whereas Collections class provides the static methods which can be used for various operation on a collection.","date":1642261162880,"level":5,"_id":"Enc9JMavtdxvqFGi"}
{"question":"Can we have multiple public classes in a java source file?","answer":"A Java source file can have only one class declared as public, we cannot put two or more public classes together in a .java file. This is because of the restriction that the file name should be same as the name of the public class with .java extension.","date":1640545401233,"level":5,"_id":"EvK8XaXIigAwb5Ps"}
{"question":"Array and ArrayList – what can contain?","answer":"Array can contain both primitive data types as well as objects. But ArrayList can not contain primitive data types. It contains only objects.","date":1643475114297,"level":5,"_id":"F6MmGqoDfLoNT8Bl"}
{"question":"What do you understand by an IO stream?","answer":"The stream is a sequence of data that flows from source to destination. It is composed of bytes. In Java, three streams are created for us automatically.      System.out: standard output stream     System.in: standard input stream     System.err: standard error stream ","date":1640455896570,"level":5,"_id":"F8bL0qvyWcEFueK3"}
{"question":"What is Spring IoC container?","answer":"The Spring IoC creates the objects, wire them together, configure them, and manage their complete lifecycle from creation till destruction. The Spring container uses dependency injection (DI) to manage the components that make up an application. There are two types of IoC containers in Spring: 1. Bean Factory container − This is the simplest container providing basic support for DI. The BeanFactory is usually preferred where the resources are limited like mobile devices or applet based applications. 2.Spring ApplicationContext Container − This container adds more enterprise-specific functionality such as the ability to resolve textual messages from a properties file and the ability to publish application events to interested event listeners.","date":1639304135983,"level":0,"_id":"FB37WEoXWnOHLj1F"}
{"question":"Why CharArray() is preferred over String to store the password?","answer":"String stays in the string pool until the garbage is collected. If we store the password into a string, it stays in the memory for a longer period, and anyone having the memory-dump can extract the password as clear text. On the other hand, Using CharArray allows us to set it to blank whenever we are done with the password. It avoids the security threat with the string by enabling us to control the memory. ","date":1639499659313,"level":5,"_id":"FCg9JKa3ts3iAgil"}
{"question":"JDK","answer":"JDK is an acronym for Java Development Kit. It is a software development environment which is used to develop Java applications and applets. It physically exists. It contains JRE + development tools.","date":1641239615990,"level":2,"_id":"FTyv3OkWN4I0mxLu"}
{"question":"remove() in List","answer":"The remove operation always removes the first occurrence of the specified element from the list. ","date":1639586711022,"level":4,"_id":"FUq86DnPHymIvsZq"}
{"question":"String ","answer":"immutable class; the String is slow and consumes more memory when you concat too many strings because every time it creates a new instance; it overrides the equals method of Object class","date":1639499688744,"level":5,"_id":"FZvovoxq0Fp8S9xe"}
{"question":"What is the difference between compile-time polymorphism and runtime polymorphism?","answer":"Static Polymorphism (compile-time polymorphism) → method overloading; Dynamic Polymorphism (runtime) – method overriding","date":1640547122163,"level":5,"_id":"FgZ04dgT1bkcYbN7"}
{"question":"What is the difference between Iterator and ListIterator?","answer":"Iterator traverses the elements in the forward direction only whereas ListIterator traverses the elements into forward and backward direction. The Iterator can be used in List, Set, and Queue. ListIterator can be used in List only. The Iterator can only perform remove operation while traversing the collection. ListIterator can perform add, remove, and set operation while traversing the collection.","date":1642885331245,"level":5,"_id":"Fk5GJIfAJFKHf9iw"}
{"question":"Please explain the difference between String, String Builder, and String Buffer.","answer":"String variables are stored in a constant string pool. With the change in the string reference, it becomes impossible to delete the old value. For example, if a string has stored a value \"Old,\" then adding the new value \"New\" will not delete the old value. It will still be there, however, in a dormant state. In a String Buffer, values are stored in a stack. With the change in the string reference, the new value replaces the older value. The String Buffer is synchronized (and therefore, thread-safe) and offers slower performance than the String Builder, which is also a String Buffer but is not synchronized. Hence, performance is fast in String Builder than the String Buffer.","date":1640081018796,"level":3,"_id":"Fkcj2BWQeZobyRJH"}
{"question":" How Garbage collector algorithm works?","answer":"Garbage collection works on Mark and Sweep algorithm. In Mark phase it detects all the unreachable objects and Sweep phase it reclaim the heap space used by the garbage objects and make the space available again to the program.","date":1640547150435,"level":5,"_id":"Fp5mNVNEAVPE3ydu"}
{"question":"What’s the difference between unit, integration and functional testing?","answer":"A unit test works on an isolated piece of code, usually a method. An integration test tests how your code integrates with other systems, for example, a database or a third-party application. A functional test tests the actual functionality of an application and uses automated tools to carry out and simulate user interactions.","date":1639476375264,"level":1,"_id":"FqDTYEEKsuyhY2at"}
{"question":"How many ways can we create the string object?","answer":"1) String Literal – using double quotes (String s = ”welcome”) – stored in string constant pool; 2) By new keyword (String s = new String(”welcome”)) – JVM will create a new string object in normal (non-pool) heap memory and the literal „welcome” will be placed in the constant string pool, the variable s will refer to the object in heap (non-pool).","date":1639499716402,"level":5,"_id":"G2V6TjXehRzlFqmr"}
{"question":"How can you make a class serializable in Java?","answer":"A class can become serializable by implementing the Serializable interface.","date":1639499822092,"level":5,"_id":"GCWOEG36a13ni0Bn"}
{"question":"What’s the difference between deep copy and shallow copy?","answer":"Shallow copy in java copies all values and attributes of an object to another object and both objects reference the same memory locations.\n\nDeep copy is the creation of an object with the same values and attributes of the object being copied but both objects reference different memory locations. ","date":1640547161868,"level":5,"_id":"GKu6rzJ1hrJHSZ0Q"}
{"question":"expressions","answer":"compute values, expressions are core components of statements.","date":1643819826343,"level":6,"_id":"GO3h7lTB9VAaX2jj"}
{"question":"What is Java String Pool?","answer":"String Pool in java is a pool of Strings stored in Java Heap Memory. String pool helps in saving a lot of space for Java Runtime although it takes more time to create the String. When we use double quotes to create a String, it first looks for String with the same value in the String pool, if found it just returns the reference else it creates a new String in the pool and then returns the reference. However using new operator, we force String class to create a new String object in heap space.","date":1640547201014,"level":5,"_id":"GgSAzHXatZuLRpK6"}
{"question":"What is a singleton class? ","answer":"Singleton class is the class which can not be instantiated more than once. To make a class singleton, we either make its constructor private or use the static getInstance method. ","date":1641656944931,"level":5,"_id":"Gp1w4XmeyYqM2mvA"}
{"question":"What is Proxy pattern?","answer":"In proxy pattern, a class represents functionality of another class. This type of design pattern comes under structural pattern.\nIn proxy pattern, we create object having original object to interface its functionality to outer world.","date":1639469125673,"level":1,"_id":"GrnpLqDwqz7ebbaN"}
{"question":"What is the use of sorted() method in streams?","answer":"The method sorted()is an intermediate operation, which allows you to sort the values ​​either in natural order or by setting Comparator. The order of the elements in the original collection remains untouched - sorted()it just creates its sorted representation.","date":1639385911250,"level":4,"_id":"GvWpdPvZvTRkQ1wU"}
{"question":"Why do streams use forEach()and forEachOrdered() methods?","answer":"    forEach() applies a function to each stream object; ordering in parallel execution is not guaranteed;\n    forEachOrdered() applies a function to each stream object while maintaining the order of the elements.","date":1639385911249,"level":4,"_id":"H48ova1TduR5XnPO"}
{"question":"@Inherited","answer":"@Inherited annotation indicates that the annotation type can be inherited from the super class. (This is not true by default.) When the user queries the annotation type and the class has no annotation for this type, the class' superclass is queried for the annotation type. This annotation applies only to class declarations.","date":1640195901185,"level":4,"_id":"H8LHFjZziWqzUxfW"}
{"question":"What is Strategy pattern?","answer":"In Strategy pattern, a class behavior or its algorithm can be changed at run time. This type of design pattern comes under behavior pattern.\nIn Strategy pattern, we create objects which represent various strategies and a context object whose behavior varies as per its strategy object. The strategy object changes the executing algorithm of the context object.","date":1639646936813,"level":4,"_id":"HDVCzoW5x9BD9BOh"}
{"question":"What is a native method? ","answer":"A native method is a method that is implemented in a language other than Java. Natives methods are sometimes also referred to as foreign methods.","date":1639499847610,"level":5,"_id":"HEhP109iGW7OtEc9"}
{"question":"What are the advantages of multithreading?","answer":"Multithreading programming has the following advantages:      Multithreading allows an application/program to be always reactive for input, even already running with some background tasks     Multithreading allows the faster execution of tasks, as threads execute independently.     Multithreading provides better utilization of cache memory as threads share the common memory resources.     Multithreading reduces the number of the required server as one server can execute multiple threads at a time. ","date":1640080879045,"level":3,"_id":"HFMAbGyg5fmzTOkb"}
{"question":"Threads","answer":"Threads are sometimes called lightweight processes. Both processes and threads provide an execution environment, but creating a new thread requires fewer resources than creating a new process. Threads exist within a process — every process has at least one. Threads share the process's resources, including memory and open files. This makes for efficient, but potentially problematic, communication.","date":1639340425942,"level":1,"_id":"HOfh2AEtaPiOpy0L"}
{"question":"What Are the Functions of JVM and JRE?","answer":"JVM provides a runtime environment for Java Byte Codes to be executed. JRE includes sets of files required by JVM during runtime.","date":1640073786706,"level":3,"_id":"HZawe1Iuieg06VtJ"}
{"question":"in Java, how fast is direct lookup in a hash map theoretically, and why is it often slower in reality?","answer":"Lookup in hash maps is supposed to be constant time, O(1), as each element is mapped to a key, which is computed using the key object’s hash code. However, if the hash function returns the same result for two or more inputs, collisions occur. In this case, each key is essentially mapped to a linked list of N objects belonging to it, reducing lookup speed to O(N).","date":1639385911309,"level":4,"_id":"HZhgO5qdLeJJOG9n"}
{"question":"What does JDBC setMaxRows method do?","answer":"The setMaxRows(int i) method limits the number of rows the database can return by using the query. This can also be done within the query as we can use the limit cause in MySQL.\n","date":1642272274267,"level":5,"_id":"HaxTLG4fQvRyl8yP"}
{"question":" What is Materialized View pattern and when will you use it?","answer":"Materialized View pattern is the solution for aggregating data from multiple microservices and used when we need to implement queries that retrieve data from several microservices. In this approach, we generate, in advance (prepare denormalized data before the actual queries happen), a read-only table with the data that's owned by multiple microservices. The table has a format suited to the client app's needs or API Gateway. A key point is that a materialized view and the data it contains is completely disposable because it can be entirely rebuilt from the source data stores.","date":1639476060467,"level":1,"_id":"HgNpZw4yYMfsfqoU"}
{"question":"What is Controller in Spring MVC framework?","answer":"Controllers provide access to the application behavior that you typically define through a service interface. Controllers interpret user input and transform it into a model that is represented to the user by the view. Spring implements a controller in a very abstract way, which enables you to create a wide variety of controllers.","date":1639040124348,"level":3,"_id":"Hv4FZOUf1ybvfvgR"}
{"question":"Can you have virtual functions in Java?","answer":"In Java, all non-static methods are by default virtual functions. Only methods marked with the keyword final, which cannot be overridden, along with private methods, which are not inherited, are non-virtual.","date":1639472077614,"level":4,"_id":"I1gGVjzBcXh8LNMY"}
{"question":"What is JDBC?","answer":"JDBC is a Java API that is used to connect and execute the query to the database. JDBC API uses JDBC drivers to connect to the database. JDBC API can be used to access tabular data stored into any relational database.","date":1640547271746,"level":5,"_id":"IV0ilGK6dgkVSJcP"}
{"question":"What is the difference between yielding and sleeping?","answer":"When a task invokes its yield() method, it returns to the ready state. When a task invokes its sleep() method, it returns to the waiting state.","date":1639333720869,"level":1,"_id":"IpgxXGHrjsFv5aTy"}
{"question":"What are the differences between ResultSet and RowSet?","answer":"A ResultSet maintains a connection to a database and because of that it can’t be serialized and also we cant pass the Resultset object from one class to other class across the network. RowSet is a disconnected, serializable version of a JDBC ResultSet and also the RowSet extends the ResultSet interface so it has all the methods of ResultSet. The RowSet can be serialized because it doesn’t have a connection to any database and also it can be sent from one class to another across the network.","date":1639333461587,"level":1,"_id":"IrCSdULslLaW1y9M"}
{"question":"When should we interrupt a thread?","answer":"We should interrupt a thread when we want to break out the sleep or wait state of a thread. We can interrupt a thread by calling the interrupt() throwing the InterruptedException.","date":1640104746460,"level":5,"_id":"J3UT5sQZs0qERm1n"}
{"question":"What will be the initial value of an object reference which is defined as an instance variable? ","answer":"null","date":1643819964110,"level":6,"_id":"JET9Iz5bH0wJ34n6"}
{"question":"What’s the difference between path and classpath variables in Java?","answer":" Both path and classpath are environment variables. However, the operating system uses path to find the executables (which is why you always need to add the directory location in the path variable any time you install Java or want the OS to be able to find the executable). Classpath, on the other hand, is used by Java executables to locate class files.","date":1639234497888,"level":1,"_id":"JEb5cWnbbJqft6iA"}
{"question":"the interrupt status flag","answer":"The interrupt mechanism is implemented using an internal flag known as the interrupt status. Invoking Thread.interrupt sets this flag. When a thread checks for an interrupt by invoking the static method Thread.interrupted, interrupt status is cleared. The non-static isInterrupted method, which is used by one thread to query the interrupt status of another, does not change the interrupt status flag.","date":1639579264192,"level":4,"_id":"JH0wMh47PYEQnz6D"}
{"question":"Intrinsic Locks and Synchronization","answer":"Synchronization is built around an internal entity known as the intrinsic lock or monitor lock. (The API specification often refers to this entity simply as a \"monitor.\") Intrinsic locks play a role in both aspects of synchronization: enforcing exclusive access to an object's state and establishing happens-before relationships that are essential to visibility. Every object has an intrinsic lock associated with it. ","date":1639333414759,"level":1,"_id":"JJDDirS61JcOR9F4"}
{"question":"[JDBC] DriverManager","answer":"This class manages a list of database drivers. Matches connection requests from the java application with the proper database driver using communication sub protocol. The first driver that recognizes a certain subprotocol under JDBC will be used to establish a database Connection.","date":1640099761655,"level":3,"_id":"JUldyvLHq6BfkWMF"}
{"question":"What is Spring MVC framework?\n  ","answer":"The Spring web MVC framework provides model-view-controller architecture and ready components that can be used to develop flexible and loosely coupled web applications. The MVC pattern results in separating the different aspects of the application (input logic, business logic, and UI logic), while providing a loose coupling between these elements.","date":1639822050154,"level":2,"_id":"JY544WsISFJUOF2Q"}
{"question":"What is the function of CI (Continuous Integration) server?","answer":"CI server function is to continuously integrate all changes being made and committed to repository by different developers and check for compile errors. It needs to build code several times a day, preferably after every commit so it can detect which commit made the breakage if the breakage happens.","date":1640099334458,"level":3,"_id":"JjK9spqIcS1fwZaC"}
{"question":" What is the benefit of Generics in Collections Framework?","answer":"Generics allow us to provide the type of Object that a collection can contain, so if we try to add any element of other type it throws compile time error. This avoids ClassCastException at Runtime because we will get the error at compilation. Also Generics make code clean since we don’t need to use casting and instanceof operator.","date":1639303429575,"level":2,"_id":"Jt5mBcv6ulsBsncB"}
{"question":"What is Thread Scheduler in java?","answer":"In Java, when we create the threads, they are supervised with the help of a Thread Scheduler, which is the part of JVM. Thread scheduler is only responsible for deciding which thread should be executed. Thread scheduler uses two mechanisms for scheduling the threads: Preemptive and Time Slicing. Java thread scheduler also works for deciding the following for a thread:      It selects the priority of the thread.     It determines the waiting time for a thread     It checks the Nature of thread ","date":1641369803309,"level":4,"_id":"Jx0PfRooZI8roRVk"}
{"question":"What is the right data type to represent a price in Java?","answer":"BigDecimal if memory is not a concern and performance is not critical, otherwise double with a predefined precision.","date":1639494994026,"level":1,"_id":"K4KopS9a0uX824O2"}
{"question":"What is a nested class? ","answer":"The nested class can be defined as the class which is defined inside another class or interface.  There are two types of nested classes, static nested class, and non-static nested class. The non-static nested class can also be called as inner-class","date":1641394618027,"level":4,"_id":"K5PKvu89wvAs5sOo"}
{"question":"What is the difference between static binding and dynamic binding?","answer":"In case of the static binding, the type of the object is determined at compile-time whereas, in the dynamic binding, the type of the object is determined at runtime.","date":1643820003059,"level":6,"_id":"KAJl2lpOLpWdZcyG"}
{"question":"Java Collections Classes","answer":"    HashSet Class,     TreeSet Class,    ArrayList Class,    LinkedList Class,    HashMap Class,    TreeMap Class,    PriorityQueue Class","date":1639235831279,"level":0,"_id":"KG91DApz3nM29bAa"}
{"question":"What is the difference between abstraction and encapsulation?","answer":"Abstraction hides the implementation details whereas encapsulation wraps code and data into a single unit.","date":1639235671478,"level":3,"_id":"KLnIMkMConUaSMjZ"}
{"question":"What is the Collection framework in Java?","answer":"Collection Framework is a combination of classes and interface, which is used to store and manipulate the data in the form of objects. It provides various classes such as ArrayList, Vector, Stack, and HashSet, etc. and interfaces such as List, Queue, Set, etc. for this purpose.","date":1640639158783,"level":5,"_id":"KRVtCRuEOkA3oE5v"}
{"question":"How will you invoke any external process in Java?","answer":"We can invoke the external process in Java using exec() method of Runtime Class.","date":1642877270622,"level":5,"_id":"KRyv3W2ePYozPaJ8"}
{"question":"Meta-annotations","answer":"Annotations that apply to other annotations are called meta-annotations. There are several meta-annotation types defined in java.lang.annotatio:\n @Retention, @Documented, @Target, @Inherited, @Repeatable","date":1637504432445,"level":2,"_id":"KT4jMIAxNkccrgQi"}
{"question":"Why do we use the yield() method?","answer":"The yield() method belongs to the thread class. It transfers the currently running thread to a runnable state and also allows the other threads to execute. In other words, it gives equal priority threads a chance to run. Because yield() is a static method, it does not release any lock.","date":1636555050030,"level":2,"_id":"KX7Pr6DMBt64Md6c"}
{"question":"How deadlock condition can be avoided?","answer":"Ways to avoid the deadlock condition in Java:      Avoid Nested lock: Nested lock is the common reason for deadlock as deadlock occurs when we provide locks to various threads so we should give one lock to only one thread at some particular time.     Avoid unnecessary locks: we must avoid the locks which are not required.     Using thread join: Thread join helps to wait for a thread until another thread doesn't finish its execution so we can avoid deadlock by maximum use of join method. ","date":1639476436527,"level":1,"_id":"KeF5Sai9Oh2GPPXY"}
{"question":"Scanning and Formatting","answer":"Programming I/O often involves translating to and from the neatly formatted data humans like to work with. To assist you with these chores, the Java platform provides two APIs. The scanner API breaks input into individual tokens associated with bits of data. The formatting API assembles data into nicely formatted, human-readable form.","date":1639494749485,"level":1,"_id":"KhI8vgqkwQPH02ML"}
{"question":"What is the transient keyword?","answer":"If you define any data member as transient, it will not be serialized. By determining transient keyword, the value of variable need not persist when it is restored. ","date":1642688393245,"level":5,"_id":"KkNAbkvwIW4wNkj3"}
{"question":"What is the purpose of using BufferedInputStream and BufferedOutputStream classes?","answer":"Java BufferedOutputStream class is used for buffering an output stream. It internally uses a buffer to store data. It adds more efficiency than to write data directly into a stream. So, it makes the performance fast. Whereas, Java BufferedInputStream class is used to read information from the stream. It internally uses the buffer mechanism to make the performance fast.","date":1640364053994,"level":5,"_id":"LEtbF9SsYjopFsZZ"}
{"question":"What is Exception Handling?","answer":"Exception Handling is a mechanism that is used to handle runtime errors. It is used primarily to handle checked exceptions. Exception handling maintains the normal flow of the program. ","date":1641667468742,"level":5,"_id":"LNrEG4AVkRmE8ox7"}
{"question":" How to synchronize ArrayList?","answer":"We can synchronize ArrayList in two ways.\n    Using Collections.synchronizedList() method\n    Using CopyOnWriteArrayList<T>\n","date":1642884662211,"level":5,"_id":"LOQYLtJy6z8HzkaF"}
{"question":"What is the difference between preemptive scheduling and time slicing? ","answer":"Under preemptive scheduling, the highest priority task executes until it enters the waiting or dead states or a higher priority task comes into existence. Under time slicing, a task executes for a predefined slice of time and then reenters the pool of ready tasks. The scheduler then determines which task should execute next, based on priority and other factors.","date":1639908718293,"level":2,"_id":"LSXhKrtaxm7ifXkL"}
{"question":"What are the steps to connect to the database in java?","answer":"Registering the driver class;  Creating connection; Creating the statement;  Executing the queries; Closing connection","date":1639493854915,"level":1,"_id":"LhIRgpPGmceizEKK"}
{"question":"What is the Model?\n  ","answer":"Model is a reference to encapsulate the data or output for rendering. Model is always created and passed to the view in Spring MVC. If a mapped controller method has Model as a method parameter, then a model instance is automatically injected by Spring framework to that method.","date":1639493578434,"level":1,"_id":"LjwWeeG2oHF9ZDkT"}
{"question":"What is the difference between aggregation and composition? ","answer":"Aggregation represents the weak relationship whereas composition represents the strong relationship. For example, the bike has an indicator (aggregation), but the bike has an engine (composition).","date":1639304441925,"level":3,"_id":"Lof7xZfUIaz52nT7"}
{"question":"What is Stream?","answer":"An interface java.util.Stream is a sequence of elements on which various operations can be performed. Operations on streams can be either intermediate (intermediate) or final (terminal) . Final operations return a result of a certain type, and intermediate operations return the same stream. Thus, you can build chains of several operations on the same stream. A stream can have any number of calls to intermediate operations and the last call to the final operation. At the same time, all intermediate operations are performed lazily and until the final operation is called, no actions actually happen (similar to creating an object Threador Runnable, without a call start()).","date":1639235782506,"level":0,"_id":"Lrypo24MOpUwUdYJ"}
{"question":"which kind of relationship inheritance represents?","answer":"Inheritance represents the IS-A relationship which is also known as a parent-child relationship. ","date":1640803816252,"level":5,"_id":"LwIryl8LkjQNLlmf"}
{"question":"Why Collection doesn’t extend Cloneable and Serializable interfaces?","answer":"Collection is an interface that specifies a group of objects known as elements. The details of how the group of elements is maintained is left up to the concrete implementations of Collection. For example, some Collection implementations like List allow duplicate elements whereas other implementations like Set don't. Collection is the root interface for all the collection classes ( like ArrayList, LinkedList ). If collection interface extends Cloneable/Serializable interfaces, then it is mandating all the concrete implementations of this interface to implement cloneable and serializable interfaces. To give freedom to concrete implementation classes, Collection interface don’t extended Cloneable or Serializable interfaces.","date":1639495057762,"level":1,"_id":"LzwCI2WG6Qnu7qXJ"}
{"question":"Can an unreferenced object be referenced again?","answer":"yes","date":1639500183277,"level":5,"_id":"MBHHwsr7SbtJwm3P"}
{"question":"What is api in java? ","answer":"Java application programming interface (API) is a list of all classes that are part of the Java development kit (JDK). It includes all Java packages, classes, and interfaces, along with their methods, fields, and constructors. These pre-written classes provide a tremendous amount of functionality to a programmer. ","date":1640964634923,"level":5,"_id":"MF01NJ6tb6HpgVsR"}
{"question":"What is the base class for Error and Exception? ","answer":"The Throwable class","date":1639500186561,"level":5,"_id":"MGQXKT36QSPQvLG7"}
{"question":" What is the default size of load factor in hashing based collection?","answer":"The default size of load factor is 0.75. The default capacity is computed as initial capacity * load factor. ","date":1640545401219,"level":5,"_id":"MPTlpZVEzKPUX2uq"}
{"question":"Set interface","answer":"The Set interface contains only methods inherited from Collection and adds the restriction that duplicate elements are prohibited. Set also adds a stronger contract on the behavior of the equals and hashCode operations, allowing Set instances to be compared meaningfully even if their implementation types differ. Two Set instances are equal if they contain the same elements. The Java platform contains three general-purpose Set implementations: HashSet, TreeSet, and LinkedHashSet","date":1639333170791,"level":1,"_id":"MgejFJOxblhjBOUH"}
{"question":"What are wrapper classes? ","answer":"Wrapper classes are classes that allow primitive types to be accessed as objects. In other words, we can say that wrapper classes are built-in java classes which allow the conversion of objects to primitives and primitives to objects. The process of converting primitives to objects is called autoboxing, and the process of converting objects to primitives is called unboxing. ","date":1640105012220,"level":5,"_id":"Mn6q3xKaMDTP0t29"}
{"question":"What is the major difference between java.util.Date and java.sql.Date data type?","answer":"The major difference between java.util.Date and java.sql.Date is that, java.sql.Date represents date without time information whereas, java.util.Date represents both date and time information.","date":1640639252270,"level":5,"_id":"Mq4l9ut3O46voWUY"}
{"question":"Instance Variables ","answer":"Non-Static Fields","date":1643820214540,"level":6,"_id":"N11LlW8pRO87RzQc"}
{"question":"Which HTTP method is not immutable?","answer":"An HTTP method is called immutable if it always returns the same result on the same request. HTTP methods GET, PUT, DELETE, HEAD and OPTIONS are immutable, so it is necessary to implement an application so that these methods return the same results consistently. Variable methods include a method POST that is used to implement something that changes with each request. For example, to access a static HTML page, a method is used GET, because it always returns the same result. If you need to save any information, for example in a database, you need to use the POST method.","date":1639332944682,"level":0,"_id":"NKsltDvCpWctjaB0"}
{"question":"What does a bean definition contain?\n  ","answer":"The bean definition contains the information called configuration metadata which is needed for the container to know the followings −\n    How to create a bean\n    Bean's lifecycle details\n    Bean's dependencies","date":1639332916074,"level":0,"_id":"NNI4XOoDMXmp8cKK"}
{"question":"Why Java is considered dynamic?","answer":"It is designed to adapt to an evolving environment. Java programs can carry extensive amount of run-time information that can be used to verify and resolve accesses to objects on run-time.","date":1635757111310,"level":1,"_id":"NSIR3d5wSxlAeMCp"}
{"question":"Can == be used on enum?","answer":"Yes: enums have tight instance controls that allows you to use == to compare instances. Here's the guarantee provided by the language specification.","date":1639385911275,"level":4,"_id":"NkEs5Ac2jgdWW4f0"}
{"question":"How do static blocks get executed if there are multiple static blocks?","answer":"Multiple static blocks are executed in the sequence in which they are written in a top-down manner. The top block gets executed first, then the subsequent blocks are executed. ","date":1640545401228,"level":5,"_id":"NkkdIbkKFEjflbGg"}
{"question":"What is servlet in java?","answer":"A servlet is a Java programming language class that is used to extend the capabilities of servers that host applications accessed by means of a request-response programming model. Although servlets can respond to any type of request, they are commonly used to extend the applications hosted by web servers. For such applications, Java Servlet technology defines HTTP-specific servlet classes.","date":1636918829046,"level":3,"_id":"NnZJKP6okphNI0IN"}
{"question":"Aggregation","answer":"Aggregation can be defined as the relationship between two classes where the aggregate class contains a reference to the class it owns. Aggregation is best described as a has-a relationship. For example, The aggregate class Employee having various fields such as age, name, and salary also contains an object of Address class having various fields such as Address-Line 1, City, State, and pin-code. In other words, we can say that Employee (class) has an object of Address class.","date":1640105024629,"level":5,"_id":"NzlPyHdnhj0x9MiB"}
{"question":"What is difference between Heap and Stack Memory in java?","answer":"Stack is used in parts, one at a time during execution of a thread while the entire application uses Heap space during runtime; Stack stores only primitive variables and refenreces to objects that are created in Heap Space; all the newly created objects are stored in the Heap Space","date":1639304399174,"level":0,"_id":"ODD1Ikk4esrNgspL"}
{"question":"PatternSyntaxException","answer":"A PatternSyntaxException object is an unchecked exception that indicates a syntax error in a regular expression pattern.","date":1636829302033,"level":0,"_id":"OPxjoXLVLSa6IfEV"}
{"question":" What is Design Patterns and why anyone should use them?","answer":"Design patterns are a well-described solution to the most commonly encountered problems which occur during software development.\nDesign pattern represents the best practices evolved over a period of time by experienced software developers. They promote reusability which leads to a more robust and maintainable code.","date":1635776214837,"level":1,"_id":"OSzlxu2ackG92PGM"}
{"question":"Scanner ","answer":"Objects of type Scanner are useful for breaking down formatted input into tokens and translating individual tokens according to their data type.","date":1640167757075,"level":3,"_id":"OT43e6tRyUEgZXm2"}
{"question":"Can a class have an interface? ","answer":"Yes, an interface can be defined within the class. It is called a nested interface.","date":1639500243433,"level":5,"_id":"OTVwhSfh2DNEYXwv"}
{"question":"What are Spring beans?","answer":"The objects that form the backbone of your application and that are managed by the Spring IoC container are called beans. A bean is an object that is instantiated, assembled, and otherwise managed by a Spring IoC container. These beans are created with the configuration metadata that you supply to the container, for example, in the form of XML <bean/> definitions.","date":1636555836409,"level":2,"_id":"OwXL7FT0oJ179gLB"}
{"question":" What is State pattern?\n  ","answer":"In State pattern a class behavior changes based on its state. This type of design pattern comes under behavior pattern. In State pattern, we create objects which represent various states and a context object whose behavior varies as its state object changes.","date":1635494311291,"level":0,"_id":"PWh001Fml9eft8mR"}
{"question":"How does the scope Prototype work?","answer":"Scope prototype means that every time you call for an instance of the Bean, Spring will create a new instance and return it. This differs from the default singleton scope, where a single object instance is instantiated once per Spring IoC container.","date":1639303272201,"level":0,"_id":"PXOLOLkrSN0MtYRK"}
{"question":"What are different scenarios causing \"Exception in thread main\"?","answer":"java.lang.UnsupportedClassVersionError, java.lang.NoClassDefFoundError, java.lang.NoSuchMethodError, java.lang.ArithmeticException","date":1635754230442,"level":2,"_id":"PhW9uKgk2KUyJ8Lz"}
{"question":"Why we override equals() method?","answer":"The equals method is used to check whether two objects are the same or not. It needs to be overridden if we want to check the objects based on the property.","date":1640964570732,"level":5,"_id":"PwFoMbsnOxUyCJ8U"}
{"question":"What kind of thread is the Garbage collector thread? ","answer":"Daemon thread.","date":1639500252375,"level":5,"_id":"QFoTKrMsRfV6nNq6"}
{"question":"What is the difference between ScheduledExecutorService and ExecutorService interface?","answer":"ExecutorServcie and ScheduledExecutorService both are the interfaces of java.util.Concurrent package but scheduledExecutorService provides some additional methods to execute the Runnable and Callable tasks with the delay or every fixed time period.","date":1636618599319,"level":3,"_id":"QI3STkUbGoK9svzI"}
{"question":" What is structure of Java Heap?","answer":"The JVM has a heap that is the runtime data area from which memory for all class instances and arrays is allocated. It is created at the JVM start-up. Heap memory for objects is reclaimed by an automatic memory management system which is known as a garbage collector. Heap memory consists of live and dead objects. Live objects are accessible by the application and will not be a subject of garbage collection. Dead objects are those which will never be accessible by the application, but have not been collected by the garbage collector yet. Such objects occupy the heap memory space until they are eventually collected by the garbage collector.","date":1639395524318,"level":0,"_id":"Qd077DZJEgkrAeYK"}
{"question":"Can we modify the throws clause of the superclass method while overriding it in the subclass?","answer":"Yes, we can modify the throws clause of the superclass method while overriding it in the subclass. However, there are some rules which are to be followed while overriding in case of exception handling. 1. If the superclass method does not declare an exception, subclass overridden method cannot declare the checked exception, but it can declare the unchecked exception. 2. If the superclass method declares an exception, subclass overridden method can declare same, subclass exception or no exception but cannot declare parent exception.","date":1639304482498,"level":2,"_id":"ROSyCY4Vm6Pr8IN4"}
{"question":" Explain the @Controller annotation.\n ","answer":"The @Controller annotation indicates that a particular class serves the role of a controller. Spring does not require you to extend any controller base class or reference the Servlet API.","date":1636361911291,"level":2,"_id":"RQZaTy31EdBYoIuk"}
{"question":"multiple bounds (generic) – impl","answer":" The preceding example illustrates the use of a type parameter with a single bound, but a type parameter can have multiple bounds:\n<T extends B1 & B2 & B3>\nA type variable with multiple bounds is a subtype of all the types listed in the bound. If one of the bounds is a class, it must be specified first.","date":1639495247869,"level":1,"_id":"RcCQm2505M9DEKnd"}
{"question":"Matcher object","answer":"A Matcher object is the engine that interprets the pattern and performs match operations against an input string. Like the Pattern class, Matcher defines no public constructors. You obtain a Matcher object by invoking the matcher method on a Pattern object.","date":1639304458886,"level":0,"_id":"RzC9VsZIYCYoK91O"}
{"question":" What is spring in java? ","answer":"The Spring Framework is an application framework and inversion of control container for the Java platform. The framework’s core features can be used by any Java application, but there are extensions for building web applications on top of the Java EE (Enterprise Edition) platform.","date":1637076617663,"level":4,"_id":"S7hBQPpE3jy6gMh3"}
{"question":"What is exception propagation?","answer":"An exception is first thrown from the top of the stack and if it is not caught, it drops down the call stack to the previous method, If not caught there, the exception again drops down to the previous method, and so on until they are caught or until they reach the very bottom of the call stack. This procedure is called exception propagation. By default, checked exceptions are not propagated.","date":1641668631137,"level":5,"_id":"SIEdqaW7aOuIdPOF"}
{"question":"What is multithreading?","answer":" Multithreading is a process of executing multiple threads simultaneously. Multithreading is used to obtain the multitasking. It consumes less memory and gives the fast and efficient performance. Its main advantages are:      Threads share the same address space.     The thread is lightweight.     The cost of communication between the processes is low. ","date":1640105114120,"level":5,"_id":"SJftPMfTEsKiXxlN"}
{"question":"How can we execute stored procedures using CallableStatement?","answer":"CallableStatement interface in java is used to call stored procedure from java program. Stored Procedures are group of statements that we compile in the database for some task. Stored procedures are beneficial when we are dealing with multiple tables with complex scenario and rather than sending multiple queries to the database, we can send required data to the stored procedure and have the logic executed in the database server itself.","date":1635691333517,"level":0,"_id":"SSSQC9LaZ1aL5Nxo"}
{"question":"What is stream in java?","answer":"A Stream in Java can be defined as a sequence of elements from a source. Streams supports aggregate operations on the elements. The source of elements here refers to a Collection or Array that provides data to the Stream. Stream keeps the ordering of the elements the same as the ordering in the source. The aggregate operations are operations that allow us to express common manipulations on stream elements quickly and clearly. ","date":1640964841695,"level":5,"_id":"Sdi65gqtthEiwl1X"}
{"question":"Semaphore","answer":"We can use semaphores to limit the number of concurrent threads accessing a specific resource.","date":1635494311243,"level":0,"_id":"SrnkHwsEojuPGdDX"}
{"question":"What are the states in the lifecycle of a Thread?","answer":"A thread can have one of the following states during its lifetime:      New: In this state, a Thread class object is created using a new operator, but the thread is not alive. Thread doesn't start until we call the start() method.     Runnable: In this state, the thread is ready to run after calling the start() method. However, the thread is not yet selected by the thread scheduler.     Running: In this state, the thread scheduler picks the thread from the ready state, and the thread is running.     Waiting/Blocked: In this state, a thread is not running but still alive, or it is waiting for the other thread to finish.     Dead/Terminated: A thread is in terminated or dead state when the run() method exits. ","date":1639395437347,"level":3,"_id":"Swi2deEfTHI9yr2u"}
{"question":"Is it possible to start a thread twice?","answer":"No, we cannot restart the thread, as once a thread started and executed, it goes to the Dead state. Therefore, if we try to start a thread twice, it will give a runtimeException \"java.lang.IllegalThreadStateException\"","date":1635608750741,"level":4,"_id":"T0byhHLygoyfW0Qu"}
{"question":"What is the Atomic action in Concurrency in Java?","answer":"     The Atomic action is the operation which can be performed in a single unit of a task without any interference of the other operations.     The Atomic action cannot be stopped in between the task. Once started it fill stop after the completion of the task only.     An increment operation such as a++ does not allow an atomic action.     All reads and writes operation for the primitive variable (except long and double) are the atomic operation.     All reads and writes operation for the volatile variable (including long and double) are the atomic operation.     The Atomic methods are available in java.util.Concurrent package.","date":1640713991945,"level":5,"_id":"T2bpSnIkFmeZzZTj"}
{"question":"What is the purpose of the Runtime class and System class?","answer":"Runtime Class: The purpose of the Runtime class is to provide access to the Java runtime system. The runtime information like memory availability, invoking the garbage collector, etc. System Class: The purpose of the System class is to provide access to system resources. It contains accessibility to standard input, standart output, error output streams, current time in millis, terminating the application, etc.","date":1639395462017,"level":0,"_id":"TIwObolPwlhyrpvI"}
{"question":"upeer bounded wildcards – example","answer":" public static void process(List<? extends Foo> list) { /* ... */ } // matches Foo and any subtype of Foo","date":1637490691961,"level":2,"_id":"TL1cefWJuKhTpR22"}
{"question":"Why is Java Robust? ","answer":"– Lack of pointers: Java does not have pointers which make it secure\n– Garbage Collection: Java automatically clears out unused objects from memory which are unused\n– Java has strong memory management.\n– Java supports dynamic linking.","date":1638644801056,"level":4,"_id":"TN91xRPiDmWCVVJj"}
{"question":"What is the difference between HashMap and Hashtable?","answer":"HashMap is not synchronized. Hashtable is synchronized. HashMap can contain one null key and multiple null values. Hashtable cannot contain any null key or null value. HashMap is not thread-safe, so it is useful for non-threaded applications. Hashtable is thread-safe, and it can be shared between various threads.","date":1635576886472,"level":1,"_id":"TXMbUR01eQl5A7wF"}
{"question":"Can you use this() and super() both in a constructor?","answer":"No, because this() and super() must be the first statement in the class constructor.","date":1638636385337,"level":5,"_id":"TfCvSsX2PkL792jr"}
{"question":"@Documented","answer":"@Documented annotation indicates that whenever the specified annotation is used those elements should be documented using the Javadoc tool. (By default, annotations are not included in Javadoc.) ","date":1639563898676,"level":1,"_id":"TgSmPh6xYuGEIjVX"}
{"question":"LinkedHashSet","answer":"LinkedHashSet, which is implemented as a hash table with a linked list running through it, orders its elements based on the order in which they were inserted into the set (insertion-order). LinkedHashSet spares its clients from the unspecified, generally chaotic ordering provided by HashSet at a cost that is only slightly higher.","date":1635951086277,"level":1,"_id":"Tw1uzDg9B87vIdI5"}
{"question":"What is a Memory Leak? How can a memory leak appear in garbage collected language?","answer":"The standard definition of a memory leak is a scenario that occurs when objects are no longer being used by the application, but the Garbage Collector is unable to remove them from working memory – because they’re still being referenced. As a result, the application consumes more and more resources – which eventually leads to a fatal OutOfMemoryError.","date":1640964701130,"level":5,"_id":"U1uyJoFncTS1sRVr"}
{"question":"What are the functional interfaces Predicate<T>, DoublePredicate, IntPredicateand LongPredicate?","answer":"Predicate<T>(predicate) - the interface with which a function is implemented that receives an instance of the class as input Tand returns the type value at the output boolean. The interface contains a variety of methods by default, allow to build complex conditions ( and, or, negate).      DoublePredicate- predicate receiving input Double;     IntPredicate- predicate receiving input Integer;     LongPredicate- predicate receiving input Long.","date":1639304754682,"level":0,"_id":"U2ob5uQoGSGzO524"}
{"question":"What are the benefits of PreparedStatement over Statement?","answer":"The PreparedStatement performs faster as compare to Statement because the Statement needs to be compiled everytime we run the code whereas the PreparedStatement compiled once and then execute only on runtime.   PreparedStatement can execute Parameterized query whereas Statement can only run static queries.  The query used in PreparedStatement is appeared to be similar every time. Therefore, the database can reuse the previous access plan whereas, Statement inline the parameters into the String, therefore, the query doesn't appear to be same everytime which prevents cache reusage.","date":1636831738132,"level":3,"_id":"UTnrmYMXcREFX3tK"}
{"question":"Open Addressing","answer":"open addressing is a method for handling collisions. In Open Addressing, all elements are stored in the hash table itself. So at any point, the size of the table must be greater than or equal to the total number of keys (Note that we can increase table size by copying old data if needed). ","date":1635757111244,"level":1,"_id":"UVoO24Tqphv9l6TY"}
{"question":"How do you provide configuration metadata to the Spring Container?\n  ","answer":"There are following three important methods to provide configuration metadata to the Spring Container −\n    XML based configuration file.\n    Annotation-based configuration\n    Java-based configuration","date":1639562775243,"level":1,"_id":"UZe1tMZQO9RSB5vX"}
{"question":"How many types of memory areas are allocated by JVM?","answer":"6; Classloader, Class (Method) Area; Heap, Stack, Program Counter Register, Native Method Stack","date":1639908115031,"level":2,"_id":"Ue0ytWgKbt6zrb6k"}
{"question":"Bulk operations","answer":"Bulk operations perform an operation on an entire Collection. ContainsAll(), addAll(), removeAll(), retainAll(), clear()","date":1639303952298,"level":0,"_id":"Upybpd0cWREGnRgU"}
{"question":"What is the use of limit() method in streams?","answer":"The method limit()is an intermediate operation, which allows you to limit the selection to a certain number of first elements.","date":1637225911250,"level":3,"_id":"V3ev2iWWIfoN4C4o"}
{"question":"What will happen to the Exception object after exception handling?\n ","answer":"The Exception object will be garbage collected in the next garbage collection.","date":1636361911307,"level":2,"_id":"V7d1scgx08GsKnkh"}
{"question":"What is functional interface in java?","answer":"A functional interface in Java is an interface that contains only a single abstract (unimplemented) method. A functional interface can contain default and static methods which do have an implementation, in addition to the single unimplemented method.","date":1636619170950,"level":3,"_id":"V7z6HHbnxR51SQ5p"}
{"question":"Composition – 2","answer":"We use the term composition to refer to relationships whose objects don’t have an independent lifecycle, and if the parent object is deleted, all child objects will also be deleted.\nExample: Since Engine is-part-of Car, the relationship between them is Composition. ","date":1637076647578,"level":4,"_id":"VSoT4m7H2tuFUI5a"}
{"question":" What is the DispatcherServlet and what is it used for?\n  ","answer":"The DispatcherServlet is an implementation of the Front Controller design pattern that handles all incoming web request to a Spring MVC application. A Front Controller pattern (see Enterprise application design pattern) is a common pattern in web applications whose job is to receive all request and route it to different components of the application for actual processing.\n\nIn Spring MVC, DispatcherServlet is used for finding the correct Controller to process a request, which it does with the help of handler mapping, e.g. the @RequestMapping annotation.","date":1639304351224,"level":0,"_id":"VWYyIgfbIwcKP4C7"}
{"question":"What is Spring Boot?\n  ","answer":"Spring Boot is a project that provides a pre-configured set of frameworks to reduce boilerplate configuration so that you can have a Spring application up and running with the smallest amount of code.","date":1636885879961,"level":1,"_id":"VYiWc3UcS6gSlz4a"}
{"question":"What is object cloning?","answer":"The object cloning is used to create the exact copy of an object. The clone() method of the Object class is used to clone an object. The java.lang.Cloneable interface must be implemented by the class whose object clone we want to create. If we don't implement Cloneable interface, clone() method generates CloneNotSupportedException.","date":1639500432210,"level":5,"_id":"VZBorLFfJ8KtcLta"}
{"question":"How many types of exception can occur in a Java program?","answer":"3; Checked Exception: Checked exceptions are the one which are checked at compile-time. For example, SQLException, ClassNotFoundException, etc.;  Unchecked Exception: Unchecked exceptions are the one which are handled at runtime because they can not be checked at compile-time. For example, ArithmaticException, NullPointerException, ArrayIndexOutOfBoundsException, etc.,  Error: Error cause the program to exit since they are not recoverable. For Example, OutOfMemoryError, AssertionError, etc.","date":1640105244197,"level":5,"_id":"VkduhGInqHw9LuSm"}
{"question":"How does HashMap handle collisions in java?","answer":"Prior to Java 8, HashMap and all other hash table based Map implementation classes in Java handle collision by chaining, i.e. they use linked list to store map entries which ended in the same bucket due to a collision. If a key end up in same bucket location where an entry is already stored then this entry is just added at the head of the linked list there. In the worst case this degrades the performance of the get() method of HashMap to O(n) from O(1). In order to address this issue in the case of frequent HashMap collisions, Java 8 has started using a balanced tree instead of linked list for storing collided entries. This also means that in the worst case you will get a performance boost from O(n) to O(log n).","date":1635511294402,"level":0,"_id":"VtbFSmPqgaZ7Md5k"}
{"question":"What are map(), mapToInt(), mapToDouble() and mapToLong() methods in Stream?","answer":"The method map()is an intermediate operation, which transforms each element of the stream in a specified way.\nmapToInt(), mapToDouble(), mapToLong()- analogues map(), returns the corresponding numerical stream (ie the stream of numerical primitives):","date":1637225911249,"level":3,"_id":"W2DcX6EwiTjdbN9e"}
{"question":"Is there any case when finally will not be executed?","answer":"Finally block will not be executed if program exits(either by calling System.exit() or by causing a fatal error that causes the process to abort). ","date":1635754206875,"level":3,"_id":"WAs9Ah0BaCAGX183"}
{"question":"What is gc()?","answer":"The gc() method is used to invoke the garbage collector for cleanup processing. This method is found in System and Runtime classes. This function explicitly makes the Java Virtual Machine free up the space occupied by the unused objects so that it can be utilized or reused. ","date":1639500459997,"level":5,"_id":"WKtBcpEC7PLPnfb2"}
{"question":"Why String is popular HashMap key in Java?","answer":"Since String is immutable, its hashcode is cached at the time of creation and it doesn’t need to be calculated again. This makes it a great candidate for key in a Map and its processing is fast than other HashMap key objects. This is why String is mostly used Object as HashMap keys.","date":1635754303117,"level":2,"_id":"WSxTe35sNxMKcSRp"}
{"question":"What is difference between fail-fast and fail-safe? ","answer":"The Iterator's fail-safe property works with the clone of the underlying collection and thus, it is not affected by any modification in the collection. All the collection classes in java.util package are fail-fast, while the collection classes in java.util.concurrent are fail-safe. Fail-fast iterators throw a ConcurrentModificationException, while fail-safe iterator never throws such an exception.","date":1637419504186,"level":3,"_id":"Wuxuk58GY2oUFPUI"}
{"question":"What if the static modifier is removed from the signature of the main method?","answer":"Program compiles. However, at runtime, It throws an error \"NoSuchMethodError.\"","date":1639303947066,"level":0,"_id":"X8G6st7Vk0312NHN"}
{"question":"In Java, How many ways you can take input from the console?","answer":"Using BufferedReader class; Using Scanner class; Using Console class","date":1635754542754,"level":2,"_id":"XN7HJnJdG5o5XfzL"}
{"question":"Aggregation – 2","answer":"We call aggregation those relationships whose objects have an independent lifecycle, but there is ownership, and child objects cannot belong to another parent object. \nExample: Since Organization has Person as employees, the relationship between them is Aggregation.","date":1640545401229,"level":5,"_id":"XP8OoUnYe4SMIVpv"}
{"question":"What is race-condition?","answer":"A Race condition is a problem which occurs in the multithreaded programming when various threads execute simultaneously accessing a shared resource at the same time. The proper use of synchronization can avoid the Race condition.","date":1636826054765,"level":4,"_id":"XPmp0onn7xyJhgM6"}
{"question":"Data encapsulation","answer":"Hiding internal data from the outside world, and accessing it only through publicly exposed methods","date":1636217290947,"level":4,"_id":"Y2wx7njaLnGoxlvs"}
{"question":"Is there anything like static class in java?","answer":"Java has no way of making a top-level class static but you can simulate a static class like this:\n    Declare your class final - Prevents extension of the class since extending a static class makes no sense\n    Make the constructor private - Prevents instantiation by client code as it makes no sense to instantiate a static class\n    Make all the members and functions of the class static - Since the class cannot be instantiated no instance methods can be called or instance fields accessed\n    Note that the compiler will not prevent you from declaring an instance (non-static) member. The issue will only show up if you attempt to call the instance member","date":1635691231669,"level":0,"_id":"Y52FBk4GLSC4nK0K"}
{"question":"Iterator.remove","answer":"Iterator.remove is the only safe way to modify a collection during iteration; the behavior is unspecified if the underlying collection is modified in any other way while the iteration is in progress. Use Iterator instead of the for-each construct when you need to: 1. Remove the current element. The for-each construct hides the iterator, so you cannot call remove. Therefore, the for-each construct is not usable for filtering. 2.Iterate over multiple collections in parallel.","date":1639303902027,"level":0,"_id":"YP2tjMcAYUMVc0Cl"}
{"question":"Serial Garbage Collector","answer":"Serial garbage collector works by holding all the application threads. It is designed for the single-threaded environments. It uses just a single thread for garbage collection. The way it works by freezing all the application threads while doing garbage collection may not be suitable for a server environment. It is best suited for simple command-line programs.  Turn on the -XX:+UseSerialGC JVM argument to use the serial garbage collector.","date":1639304333215,"level":2,"_id":"YPwL5dRBo8kqde0e"}
{"question":"What is a compile time constant in Java? What is the risk of using it?","answer":"If a primitive type or a string is defined as a constant and the value is known at compile time, the compiler replaces the constant name everywhere in the code with its value. This is called a compile-time constant. They are replaced with actual values at compile time because compiler know their value up-front and also knows that it cannot be changed during run-time.","date":1639303477467,"level":1,"_id":"YpPwtxW3DEinFm4O"}
{"question":"What is Spring Security?\n  ","answer":"Spring Security is a separate module of the Spring framework that focuses on providing authentication and authorization methods in Java applications. It also takes care of most of the common security vulnerabilities such as CSRF attacks.\nTo use Spring Security in web applications, you can get started with a simple annotation: @EnableWebSecurity.","date":1635757111279,"level":1,"_id":"Z0cCKMOsSchsPfPk"}
{"question":"How can we achieve synchronization?","answer":"     by the synchronized method     by synchronized block     by static synchronization ","date":1639562895473,"level":1,"_id":"ZIaTr2tk0d2Pgmya"}
{"question":"Classloader","answer":"Classloader is a subsystem of JVM which is used to load class files. Whenever we run the java program, it is loaded first by the classloader. There are three built-in classloaders in Java: Bootstrap ClassLoader, Extension ClassLoader, System/Application ClassLoader","date":1640364503400,"level":5,"_id":"ZLCAYJ9DxHkciGuB"}
{"question":"Can we define private and protected modifiers for the members in interfaces?","answer":"No, they are implicitly public.","date":1639500505380,"level":5,"_id":"ZMFFBYck9M7wlFzZ"}
{"question":"Mention the differences between JPA and Hibernate?","answer":"JPA is a specification for accessing, persisting and managing the data between Java objects and the relational database. Whereas, Hibernate is the actual implementation of JPA guidelines. When hibernate implements the JPA specification, this will be certified by the JPA group upon following all the standards mentioned in the specification. For example, JPA guidelines would provide information of mandatory and optional features to be implemented as part of the JPA implementation.","date":1635758835927,"level":0,"_id":"ZeT3Tr6hf3LE1gAP"}
{"question":"Composition","answer":"Holding the reference of a class within some other class is known as composition. When an object contains the other object, if the contained object cannot exist without the existence of container object, then it is called composition. In other words, we can say that composition is the particular case of aggregation which represents a stronger relationship between two objects. Example: A class contains students. A student cannot exist without a class. There exists composition between class and students. ","date":1638291893992,"level":4,"_id":"ZickbJCYIsIuuaF5"}
{"question":"What is Coupling in OOP?","answer":"OOP Modules are dependent on each other. Coupling refers to level of dependency between two software modules. Two modules are highly dependent on each other if you have changed in one module and for supporting that change every time you have to change in dependent module. Loose Coupling is always preferred. Inversion of Control and dependency injections are some techniques for getting loose coupling in modules.","date":1636917841417,"level":1,"_id":"ZuYQAe89hJc80wJ5"}
{"question":"How are passed primitive arguments in Java?","answer":"by value","date":1636361911260,"level":2,"_id":"a3iSF6F5DAcRFKv8"}
{"question":"When is the Runnable interface preferred over thread class and vice-versa?","answer":"In Java, it is possible to extend only one class. Hence, the thread class is only extended when no other class needs to be extended. If it is required for a class to extend some other class than the thread class, then we need to use the Runnable interface.","date":1635757111310,"level":1,"_id":"aAsd9WExYlqraU5f"}
{"question":"What is serialization?","answer":"Serialization in Java is a mechanism of writing the state of an object into a byte stream. It is used primarily in Hibernate, RMI, JPA, EJB and JMS technologies. It is mainly used to travel object's state on the network (which is known as marshaling). Serializable interface is used to perform serialization. It is helpful when you require to save the state of a program to storage such as the file. At a later point of time, the content of this file can be restored using deserialization. It is also required to implement RMI(Remote Method Invocation). With the help of RMI, it is possible to invoke the method of a Java object on one machine to another machine.","date":1639664156407,"level":4,"_id":"aLZHKwxnjrCTGZI6"}
{"question":"What is the difference between Exception and Error in java?","answer":"An Error \"indicates serious problems that a reasonable application should not try to catch.\"\nAn Exception \"indicates conditions that a reasonable application might want to catch.\"","date":1635757111307,"level":1,"_id":"aV4vO58Tplk22WAo"}
{"question":"What is the design pattern that Java uses for all Swing components?\n ","answer":"The design pattern used by Java for all Swing components is the Model View Controller (MVC) pattern.","date":1639332969686,"level":0,"_id":"aVxZehffY8ggmyF1"}
{"question":"Cyclic Barier","answer":"A CyclicBarrier is a synchronizer that allows a set of threads to wait for each other to reach a common execution point, also called a barrier.     CyclicBarriers are used in programs in which we have a fixed number of threads that must wait for each other to reach a common point before continuing execution. The barrier is called cyclic because it can be re-used after the waiting threads are released.","date":1635691281851,"level":0,"_id":"aXhSfm0Uqsbpwj64"}
{"question":"StringBuilder","answer":"StringBuilder is non-synchronized – two threads can call the methods of StringBuilder simultaneously; StringBuilder is more efficient than StringBuffer","date":1639304308823,"level":2,"_id":"aalkYbCZYdWysgGx"}
{"question":"Final keyword for variable, method and class","answer":"Stops value change, stops method overridding, stops inheritance","date":1639500508007,"level":5,"_id":"au9fhgUWkzrbdOxm"}
{"question":"Java Callable interface","answer":"In Java5 callable interface was provided by the package java.util.concurrent. It is similar to the Runnable interface but it can return a result, and it can throw an Exception. It also provides a run() method for execution of a thread. Java Callable can return any object as it uses Generic.","date":1639333256711,"level":3,"_id":"ay3Na8kFtOrtvYa0"}
{"question":"Differentiate between the Thread class and Runnable interface for creating a Thread?","answer":"The Thread can be created by using two ways.      By extending the Thread class     By implementing the Runnable interface  However, the primary differences between both the ways are given below:      By extending the Thread class, we cannot extend any other class, as Java does not allow multiple inheritances while implementing the Runnable interface; we can also extend other base class(if required).     By extending the Thread class, each of thread creates the unique object and associates with it while implementing the Runnable interface; multiple threads share the same object     Thread class provides various inbuilt methods such as getPriority(), isAlive and many more while the Runnable interface provides a single method, i.e., run(). ","date":1636569121206,"level":1,"_id":"b30AYbu7Qy3SlAJm"}
{"question":"What is BlockingQueue?","answer":"The java.util.concurrent.BlockingQueue is the subinterface of Queue that supports the operations such as waiting for the space availability before inserting a new value or waiting for the queue to become non-empty before retrieving an element from it.","date":1639333286080,"level":2,"_id":"bZKcuHsCpURIv8ns"}
{"question":"What is default scope of bean in Spring framework?\n  ","answer":"The default scope of bean is Singleton for Spring framework.","date":1636361911278,"level":2,"_id":"bxYato9E2gvBMBj2"}
{"question":"Can you access the private method from outside the class?","answer":"Yes, by changing the runtime behavior of a class if the class is not secured.","date":1636360179610,"level":3,"_id":"c37ow4NO8PNeH2Xo"}
{"question":"Process","answer":"A process has a self-contained execution environment. A process generally has a complete, private set of basic run-time resources; in particular, each process has its own memory space. Processes are often seen as synonymous with programs or applications. However, what the user sees as a single application may in fact be a set of cooperating processes. To facilitate communication between processes, most operating systems support Inter Process Communication (IPC) resources, such as pipes and sockets. IPC is used not just for communication between processes on the same system, but processes on different systems.","date":1635758686869,"level":0,"_id":"cFTR0K4fcDL0WlGO"}
{"question":"What will be the problem if you do not override hashcode() method?","answer":"Some collections, like HashSet, HashMap or HashTable use the hashcode value of an object to find out how the object would be stored in the collection, and subsequently hashcode is used to help locate the object in the collection. Hashing retrieval involves:     First, find out the right bucket using hashCode().     Secondly, search the bucket for the right element using equals()\nIf hashcode() in not overridden then the default implementation in Object class will be used by collections. This implementation gives different values for different objects, even if they are equal according to the equals() method.","date":1636917892134,"level":1,"_id":"cLKPDEiAb8f3Z5N8"}
{"question":"What is the purpose of using javap?","answer":"The javap command disassembles a class file. The javap command displays information about the fields, constructors and methods present in a class file.","date":1640364508959,"level":5,"_id":"cZEXwtrnj9c3IW3c"}
{"question":"join()","answer":"The join method allows one thread to wait for the completion of another. If t is a Thread object whose thread is currently executing, t.join(); causes the current thread to pause execution until t's thread terminates. Overloads of join allow the programmer to specify a waiting period. However, as with sleep, join is dependent on the OS for timing, so you should not assume that join will wait exactly as long as you specify.","date":1635757111270,"level":1,"_id":"cwl4u2fbqptMYbCm"}
{"question":"Can there be an abstract method without an abstract class?","answer":"Yes. because methods in an interface are also abstract. so the interface can be use to declare abstract method.","date":1635755304546,"level":2,"_id":"d5Ylj8oqp4fm237k"}
{"question":"What is Object-Oriented Programming? ","answer":" OOPs is a programming paradigm centred around objects rather than functions. It is not a tool or a programming language it is a paradigm that was designed to overcome the flaws of procedural programming. There are many languages that follow OOPs concepts, some popular ones are Java, Python, Ruby and more. Some frameworks also follow OOPs concepts, Angular is one such framework.","date":1639333043970,"level":1,"_id":"d6FQ6AOJR6UikcA1"}
{"question":"What are the differences between continuous integration, continuous delivery, and continuous deployment?","answer":"    Developers practicing continuous integration merge their changes back to the main branch as often as possible. By doing so, you avoid the integration hell that usually happens when people wait for release day to merge their changes into the release branch.     Continuous delivery is an extension of continuous integration to make sure that you can release new changes to your customers quickly in a sustainable way. This means that on top of having automated your testing, you also have automated your release process and you can deploy your application at any point of time by clicking on a button.     Continuous deployment goes one step further than continuous delivery. With this practice, every change that passes all stages of your production pipeline is released to your customers. There's no human intervention, and only a failed test will prevent a new change to be deployed to production.","date":1636899280275,"level":1,"_id":"dAVy59PsSFTRls2C"}
{"question":"What is the purpose of the System class? ","answer":"The purpose of the System class is to provide access to system resources such as standard input and output. It cannot be instantiated. Facilities provided by System class are given below.      Standard input     Error output streams     Standard output     utility method to copy the portion of an array     utilities to load files and libraries  There are the three fields of Java System class, i.e., static printstream err, static inputstream in, and standard output stream.","date":1636523484099,"level":4,"_id":"dOtY5GDigr4nQSGT"}
{"question":"The difference between checked and unchecked exception in Java?","answer":"A checked exception is checked by the compiler at compile time. It’s mandatory for a method to either handle the checked exception or declare them in their throws clause. These are the ones which are a subclass of Exception but doesn’t descend from RuntimeException. The unchecked exception is the descendant of RuntimeException and not checked by the compiler at compile time. ","date":1636918576635,"level":3,"_id":"dZK6zDVzzrmFTBae"}
{"question":"List equals()","answer":"Like the Set interface, List strengthens the requirements on the equals and hashCode methods so that two List objects can be compared for logical equality without regard to their implementation classes. Two List objects are equal if they contain the same elements in the same order.","date":1635757111268,"level":1,"_id":"dkeQetbZhITnOI5m"}
{"question":"What is Externalizable?","answer":"The Externalizable interface is used to write the state of an object into a byte stream in a compressed format. It is not a marker interface.","date":1638521587579,"level":4,"_id":"dmpQOi1ZtE40BzBJ"}
{"question":"Explain the difference between stream() and parallelStream().","answer":"A regular stream is always synchronized, whereas a parallel stream can execute operations asynchronously across CPU cores. Unless running a heavy operation on a lot of objects, one should use regular streams, as parallel streams have a high overhead for setting up multithreading.","date":1635494311308,"level":0,"_id":"dr8BWSoZGxqfafti"}
{"question":"[JDBC] ResultSet","answer":"These objects hold data retrieved from a database after you execute an SQL query using Statement objects. It acts as an iterator to allow you to move through its data.","date":1636640006967,"level":0,"_id":"e67444CQnoFn8avi"}
{"question":"What is LinkedHashMap in Java?","answer":"LinkedHashMap is just like HashMap with an additional feature of maintaining an order of elements inserted into it. Java LinkedHashMap class is Hashtable and Linked list implementation of the Map interface, with predictable iteration order. It inherits HashMap class and implements the Map interface. Features: contains values based on the key, contains unique elements, may have one null key and multiple null values, is non synchronized, maintains insertion order,   The initial default capacity of Java HashMap class is 16 with a load factor of 0.75.","date":1635757111255,"level":1,"_id":"eFU6nZkhTKAm6S9V"}
{"question":"What do you understand by inter-thread communication?","answer":"     The process of communication between synchronized threads is termed as inter-thread communication.     Inter-thread communication is used to avoid thread polling in Java.     The thread is paused running in its critical section, and another thread is allowed to enter (or lock) in the same critical section to be executed.     It can be obtained by wait(), notify(), and notifyAll() methods. ","date":1638391590788,"level":4,"_id":"eRoNwY9FN8LiVWjH"}
{"question":"What is the purpose of the Core Container module?\n  ","answer":"The core container provides the essential functionality of the Spring framework. A primary component of the core container is the BeanFactory, an implementation of the Factory pattern. The BeanFactory applies the Inversion of Control (IOC) pattern to separate an application's configuration and dependency specification from the actual application code.","date":1636658401634,"level":0,"_id":"eTdv6Iryjs9PDsNQ"}
{"question":"What does join() method?","answer":"the join() method waits for a thread to die. In other words, it causes the currently running threads to stop executing until the thread it joins with completes its task. Join method is overloaded in Thread class in the following ways.      public void join()throws InterruptedException     public void join(long milliseconds)throws InterruptedException ","date":1636476509631,"level":4,"_id":"eeVHjOmjOCK3oVkb"}
{"question":"Try-with-resources","answer":"The try-with-resources statement is a try statement that declares one or more resources. A resource is an object that must be closed after the program is finished with it. The try-with-resources statement ensures that each resource is closed at the end of the statement. Any object that implements java.lang.AutoCloseable, which includes all objects which implement java.io.Closeable, can be used as a resource.","date":1635494311265,"level":0,"_id":"ejvjtkQi8Tx7Qwc7"}
{"question":"What do you understand by thread pool?","answer":"     Java Thread pool represents a group of worker threads, which are waiting for the task to be allocated.     Threads in the thread pool are supervised by the service provider which pulls one thread from the pool and assign a job to it.     After completion of the given task, thread again came to the thread pool.     The size of the thread pool depends on the total number of threads kept at reserve for execution.  The advantages of the thread pool are :      Using a thread pool, performance can be enhanced.     Using a thread pool, better system stability can occur. ","date":1635524235964,"level":1,"_id":"ephZrQ77ULtiTN0a"}
{"question":"[JDBC] Driver","answer":"This interface handles the communications with the database server. You will interact directly with Driver objects very rarely. Instead, you use DriverManager objects, which manages objects of this type. It also abstracts the details associated with working with Driver objects.","date":1635757111259,"level":1,"_id":"fD7kyG7olOGAJzdq"}
{"question":"Where GC is working?","answer":"Heap Space","date":1636657401230,"level":4,"_id":"fJNtrR1aUiYjkvvf"}
{"question":"What is marker interface in java?","answer":"An empty interface in Java is known as a marker interface i.e. it does not contain any methods or fields by implementing these interfaces a class will exhibit a special behaviour with respect to the interface implemented. ","date":1636657401229,"level":4,"_id":"fJVkp2EFQife2D43"}
{"question":"What is JDBC?","answer":"JDBC is an abstraction layer that allows users to choose between databases. JDBC enables developers to write database applications in Java, without having to concern themselves with the underlying details of a particular database.","date":1635494311274,"level":0,"_id":"fdZHxLHlhbhCDuzT"}
{"question":"What streamers designed methods flatMap(), flatMapToInt(), flatMapToDouble(), flatMapToLong()?","answer":"The method flatMap() is similar to map, but can create several from one element. Thus, each object will be converted to zero, one or more other objects supported by the stream. The most obvious way to use this operation is to convert container elements using functions that return containers. flatMapToInt(), flatMapToDouble(), flatMapToLong()- are analogues flatMap(), returns the corresponding numerical stream.","date":1635494311250,"level":0,"_id":"fgyYTFoprKt5p0wq"}
{"question":"Could you explain the Oops concepts?","answer":"Abstraction, Aggregation, Association, Class, Composition, Encapsulation, Inheritance, Object, Polymorphism","date":1636569271477,"level":0,"_id":"fiHJarx3V2SkvOn7"}
{"question":"What is Socket? ","answer":"A socket is simply an endpoint for communications between the machines. It provides the connection mechanism to connect the two computers using TCP. The Socket class can be used to create a socket.","date":1636620840433,"level":3,"_id":"frmYW3UOWSQxzEnz"}
{"question":"Where is stored Java Compiler?","answer":"JDK","date":1635623243632,"level":1,"_id":"fwJUfSX7uZ3zKlcX"}
{"question":"What is difference between the Inner Class and Sub Class?","answer":"Nested Inner class can access any private instance variable of outer class. Like any other instance variable, we can have access modifier private, protected, public and default modifier. A subclass is class which inherits a method or methods from a superclass.","date":1636829831196,"level":3,"_id":"fxHn2NW6ksiYfX6e"}
{"question":"Methods overloading","answer":"ava can distinguish between methods with different method signatures. This means that methods within a class can have the same name if they have different parameter lists.","date":1635608910154,"level":4,"_id":"gASJINWkkbD4zG8o"}
{"question":"Stub","answer":"The stub is an object, acts as a gateway for the client side. All the outgoing requests are routed through it. It resides at the client side and represents the remote object. When the caller invokes the method on the stub object, it does the following tasks:      It initiates a connection with remote Virtual Machine (JVM).     It writes and transmits (marshals) the parameters to the remote Virtual Machine (JVM).     It waits for the result.     It reads (unmarshals) the return value or exception.     It finally, returns the value to the caller. ","date":1636885849880,"level":1,"_id":"gGcNwsAQbRK98VPe"}
{"question":"Can you specify both upper bound and lower bound wildcard?","answer":"no","date":1635757111264,"level":1,"_id":"gGmB730deC2guKvf"}
{"question":"What do you mean by Bean wiring ?\n  ","answer":"The act of creating associations between application components (beans) within the Spring container is referred to as Bean wiring.","date":1637225911279,"level":3,"_id":"gIpthX15bgmpX1yJ"}
{"question":"What are the important features of Java 8 release?","answer":"interface methods by default, lambda expressions, functional interfaces, annotations on data types, reflection for method parameters, stream API for working with collections, …","date":1635494311244,"level":0,"_id":"gLIIoCdksrjBiosM"}
{"question":"equals() method","answer":"The equals() method provided in the Object class uses the identity operator (==) to determine whether two objects are equal. For primitive data types, this gives the correct result. For objects, however, it does not. The equals() method provided by Object tests whether the object references are equal—that is, if the objects compared are the exact same object.","date":1635757111262,"level":1,"_id":"gOQkQyJktG8PWK97"}
{"question":"Variables used in a switch statement can be used with which datatypes?","answer":"Variables used in a switch statement can only be a string, enum, byte, short, int, or char.","date":1635511593655,"level":0,"_id":"giIsj9NFCEr4hr0w"}
{"question":"Why are the objects immutable in java?","answer":"Because Java uses the concept of the string literal. Suppose there are five reference variables, all refer to one object \"sachin\". If one reference variable changes the value of the object, it will be affected by all the reference variables.","date":1635872989114,"level":2,"_id":"giQx2KVdB7ZPKVEI"}
{"question":"Catch or Specify Requirement","answer":" This means that code that might throw certain exceptions must be enclosed by either of the following:     A try statement that catches the exception. The try must provide a handler for the exception.    A method that specifies that it can throw the exception. The method must provide a throws clause that lists the exception.","date":1635950064451,"level":1,"_id":"gpVNQTicHokiOx2e"}
{"question":"6 bitwise operators","answer":"&, ^, |, ~, <<, >>","date":1636476510897,"level":4,"_id":"gz7ff7vROj440sQh"}
{"question":"Atomic access","answer":"there are actions you can specify that are atomic:\n    Reads and writes are atomic for reference variables and for most primitive variables (all types except long and double).\n    Reads and writes are atomic for all variables declared volatile (including long and double variables).","date":1636658575719,"level":0,"_id":"gzmX3U5k1n3LGzV9"}
{"question":"Annotation Types in Java","answer":"@Deprecated, @Override, @SuppressWarnings, @SafeVarargs, @FunctionalInterface","date":1635494311261,"level":0,"_id":"h476N7RS0bAnQnjs"}
{"question":"How can you avoid serialization in child class if the base class is implementing the Serializable interface?","answer":"If superClass has implemented Serializable that means subclass is also Serializable (as subclass always inherits all features from its parent class), for avoiding Serialization in sub-class we can define writeObject() method and throw NotSerializableException() from there as done below.","date":1637049965627,"level":3,"_id":"h5n2ej0keVPeBf6x"}
{"question":"Can we import same package/class two times? Will the JVM load the package twice at runtime?","answer":"We can import the same package or same class multiple times. The JVM will internally load the class only once no matter how many times import the same class.","date":1636657401231,"level":4,"_id":"hG8zU4OUCFDqzi9P"}
{"question":"lower bounded wildcard ","answer":"a lower bounded wildcard restricts the unknown type to be a specific type or a super type of that type; To write the method that works on lists of Integer and the supertypes of Integer, such as Integer, Number, and Object, you would specify List<? super Integer>. The term List<Integer> is more restrictive than List<? super Integer> because the former matches a list of type Integer only, whereas the latter matches a list of any type that is a supertype of Integer.","date":1635494311264,"level":0,"_id":"hj8oV7m6e07susIc"}
{"question":"What is difference between Comparable and Comparator interface?","answer":"Comparable: A comparable object is capable of comparing itself with another object. The class itself must implements the java.lang.Comparable interface in order to be able to compare its instances. Comparator: A comparator object is capable of comparing two different objects. The class is not comparing its instances, but some other class’s instances. This comparator class must implement the java.util.Comparator interface. Comparable and Comparator both are interfaces and can be used to sort collection elements.","date":1635494311254,"level":0,"_id":"hmcIfLjOGq0d9ymB"}
{"question":" Do you need spring-mvc.jar in your classpath or is it part of spring-core?\n ","answer":"The spring-mvc.jar is not part of spring-core, which means that if you want to use Spring MVC framework in your Java project, you must include spring-mvc.jar in your application's classpath. In a Java web application, spring-mvc.jar is usually placed inside the /WEB-INF/lib folder.","date":1635513678311,"level":0,"_id":"hqtDIMGJ4zYAtfTH"}
{"question":"What is database connection pooling? What are the advantages of using a connection pool?","answer":"Connection pooling means that connections are reused rather than created each time a connection is requested. To facilitate connection reuse, a memory cache of database connections, called a connection pool, is maintained by a connection pooling module as a layer on top of any standard JDBC driver product. Connection pooling is performed in the background and does not affect how an application is coded; however, the application must use a DataSource object (an object implementing the DataSource interface) to obtain a connection instead of using the DriverManager class.","date":1636569196944,"level":0,"_id":"i2PfdbIwBec3pPoC"}
{"question":"Phantom References","answer":"The objects which are being referenced by phantom references are eligible for garbage collection. But, before removing them from the memory, JVM puts them in a queue called ‘reference queue’ . They are put in a reference queue after calling finalize() method on them.To create such references java.lang.ref.PhantomReference class is used.\n\n","date":1635189842436,"level":0,"_id":"iIeghHwInjiRmRzj"}
{"question":"Tell us about parallel processing in Java 8?","answer":"Streams can be sequential and parallel. Operations on sequential streams are performed in one processor thread, on parallel streams - using several processor threads. Parallel streams use the shared stream ForkJoinPoolthrough the static ForkJoinPool.commonPool()method. In this case, if the environment is not multi-core, then the stream will be executed as sequential. In fact, the use of parallel streams is reduced to the fact that the data in the streams will be divided into parts, each part is processed on a separate processor core, and in the end these parts are connected, and final operations are performed on them. You can also use the parallelStream()interface method to create a parallel stream from the collection Collection. To make a regular sequential stream parallel, you must call the Streammethod on the object parallel(). The method isParallel()allows you to find out if the stream is parallel.","date":1636829156855,"level":0,"_id":"iLllSpdGcR1eLs74"}
{"question":"anonymous classes","answer":"You can also declare an inner class within the body of a method without naming the class.","date":1636361911260,"level":2,"_id":"iZnteJnoIJe3WbqY"}
{"question":"Future Task","answer":"A cancellable asynchronous computation. This class provides a base implementation of Future, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the get methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using runAndReset()). A FutureTask can be used to wrap a Callable or Runnable object. Because FutureTask implements Runnable, a FutureTask can be submitted to an Executor for execution. ","date":1635511181121,"level":0,"_id":"ihfSUBoPUHBz5Thx"}
{"question":"Can there be two main methods in a class?","answer":"Yes, there can be two main methods. This also means that the main method is overloaded. But at the time of execution, JVM only calls the original main method and not the overloaded main method. ","date":1635873489970,"level":2,"_id":"imn4eNcarayo1KIQ"}
{"question":"The difference between Inheritance and Composition?","answer":"Though both Inheritance and Composition provides code reusablility, main difference between Composition and Inheritance in Java is that Composition allows reuse of code without extending it but for Inheritance you must extend the class for any reuse of code or functionality. Inheritance is an \"is-a\" relationship. Composition is a \"has-a\".","date":1638345784184,"level":4,"_id":"ineDAtAhuTYfsBdh"}
{"question":"What intermediate methods of working with streams do you know?","answer":"    filter(); skip(); distinct(); map();  peek();  limit();  sorted(); \n    mapToInt(), mapToDouble(), mapToLong()\n    flatMap(), flatMapToInt(), flatMapToDouble(), flatMapToLong()","date":1635494311251,"level":0,"_id":"iwIhTiEtFLkybApj"}
{"question":"What are JSP actions?\n  ","answer":"JSP actions use constructs in XML syntax to control the behavior of the servlet engine. JSP actions are executed when a JSP page is requested. They can be dynamically inserted into a file, re-use JavaBeans components, forward the user to another page, or generate HTML for the Java plugin.Some of the available actions are listed below: jsp:include – includes a file, when the JSP page is requested.; jsp:useBean – finds or instantiates a JavaBean. ; jsp:setProperty – sets the property of a JavaBean. ;    jsp:getProperty – gets the property of a JavaBean. ; jsp:forward – forwards the requester to a new page.;  jsp:plugin – generates browser-specific code.","date":1636625916321,"level":0,"_id":"j0tX1Mo2mPHp3voz"}
{"question":"Which two methods do you have to override for an object to be usable as a key in a hash map?","answer":"To be usable as a key in a hash map, an object needs to be comparable and define a hash function. You have to overwrite equals() and hashCode().","date":1637225911308,"level":3,"_id":"j9TD46T560bYkrWa"}
{"question":"Soft References:","answer":"In Soft reference, even if the object is free for garbage collection then also its not garbage collected, until JVM is in need of memory badly.The objects gets cleared from the memory when JVM runs out of memory.To create such references java.lang.ref.SoftReference class is used.","date":1635576823673,"level":1,"_id":"jCpPSY7O6J5jyv48"}
{"question":"How many objects will be created in the following code?                       String s = new String(\"Welcome\");  ","answer":"Two objects, one in string constant pool and other in non-pool(heap). ","date":1636217311067,"level":4,"_id":"jEX8Z1IISQtbNvRC"}
{"question":"What is awt in java?","answer":"The Abstract Window Toolkit (AWT) is Java’s original platform-dependent windowing, graphics, and user-interface widget toolkit, preceding Swing. The AWT is part of the Java Foundation Classes (JFC) — the standard API for providing a graphical user interface (GUI) for a Java program. AWT is also the GUI toolkit for a number of Java ME profiles. For example, Connected Device Configuration profiles require Java runtimes on mobile telephones to support the Abstract Window Toolkit.","date":1635967444322,"level":2,"_id":"jFh3jidM4SZeOqjQ"}
{"question":"What is Template pattern?\n  ","answer":"In Template pattern, an abstract class exposes defined way(s)/template(s) to execute its methods. Its subclasses can override the method implementation as per need but the invocation is to be in the same way as defined by an abstract class. This pattern comes under behavior pattern category.","date":1636626658332,"level":0,"_id":"jOLOMwk2Zqg19mOf"}
{"question":"What is dao in java?","answer":"Dao is a simple java class which contains JDBC logic. The Java Data Access Object (Java DAO) is an important component in business applications. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data. ","date":1636658480984,"level":0,"_id":"jQr14DYhq6oFLuRM"}
{"question":"Is method overloading possible by changing only the return type?","answer":"No","date":1639500511249,"level":5,"_id":"jWgq7C0qiH63sjNE"}
{"question":" Can a Dead Thread Be Started Again?","answer":"No, a thread that is in the dead state can't be started again.","date":1636657401224,"level":4,"_id":"jdVfkD0FiUnWo8gb"}
{"question":"Explain different types of typecasting?\n\n","answer":"\n    Implicit: Storing values from a smaller data type to the larger data type. It is automatically done by the compiler.\n    Explicit: Storing the value of a larger data type into a smaller data type. This results in information loss: truncation and out of range.\n","date":1635758731928,"level":0,"_id":"jodrp1V9Uesb5AZT"}
{"question":" What are the final methods of working with streams you know?","answer":"    findFirst(); findAny(); collect(); count();  anyMatch(); noneMatch(); allMatch(); min(); max(); forEach(); forEachOrdered(); toArray(); reduce(); sum(); average() ","date":1635758796696,"level":0,"_id":"jqpPEAj1opaTr4jf"}
{"question":" Explain @RequestMapping annotation.\n  ","answer":"@RequestMapping annotation is used to map a URL to either an entire class or a particular handler method.","date":1635514549384,"level":0,"_id":"jrcjZ09VGOVYSLxo"}
{"question":"What is the reflection?","answer":"Reflection is the process of examining or modifying the runtime behavior of a class at runtime. The java.lang.Class class provides various methods that can be used to get metadata, examine and change the runtime behavior of a class. The java.lang and java.lang.reflect packages provide classes for java reflection. ","date":1640364511427,"level":5,"_id":"juSj9CDrtrWPUydT"}
{"question":"local classes","answer":"class within the body of a method.","date":1636361911260,"level":2,"_id":"k0KNLGB5mW2fkMOI"}
{"question":"What is the purpose of the Runtime class? ","answer":"Java Runtime class is used to interact with a java runtime environment. Java Runtime class provides methods to execute a process, invoke GC, get total and free memory, etc. There is only one instance of java.lang.Runtime class is available for one java application. The Runtime.getRuntime() method returns the singleton instance of Runtime class. ","date":1635967140027,"level":2,"_id":"k5W8e52d1UIDlgYv"}
{"question":"Reentrant Synchronization","answer":"Recall that a thread cannot acquire a lock owned by another thread. But a thread can acquire a lock that it already owns. Allowing a thread to acquire the same lock more than once enables reentrant synchronization. This describes a situation where synchronized code, directly or indirectly, invokes a method that also contains synchronized code, and both sets of code use the same lock. Without reentrant synchronization, synchronized code would have to take many additional precautions to avoid having a thread cause itself to block.","date":1635494311271,"level":0,"_id":"kAoUfwu5SjFWTzmC"}
{"question":"pipeline","answer":"a sequence of aggregate operations","date":1635494311272,"level":0,"_id":"kCKNgrBYixKsCr4E"}
{"question":"What is the volatile keyword in java?","answer":"Volatile keyword is used in multithreaded programming to achieve the thread safety, as a change in one volatile variable is visible to all other threads so one variable can be used by one thread at a time. ","date":1636523816214,"level":4,"_id":"kRPxhu5chagGxmey"}
{"question":"How does multi-threading take place on a computer with a single CPU?","answer":"The operating system's task scheduler allocates execution time to multiple tasks. By quickly switching between executing tasks, it creates the impression that tasks execute sequentially.","date":1635513738913,"level":0,"_id":"kg1SjBCI84FSTRu7"}
{"question":"What is the default value of the local variables?","answer":"There is no default value for local variables, so local variables should be declared and an initial value should be assigned before the first use.","date":1640545401233,"level":5,"_id":"klm54ydoNoF8r3LU"}
{"question":" What is Dependency Injection?\n  ","answer":"Dependency injection makes it easy to create loosely coupled components, which typically means that components consume functionality defined by interfaces without having any first-hand knowledge of which implementation classes are being used. Dependency injection makes it easier to change the behavior of an application by changing the components that implement the interfaces that define application features. It also results in components that are easier to isolate for unit testing.","date":1635691313260,"level":0,"_id":"kysSbrHPnNlPNLz7"}
{"question":"What is classpath in java?","answer":"The CLASSPATH variable is one way to tell applications, including the JDK tools, where to look for user classes. (Classes that are part of the JRE, JDK platform, and extensions should be defined through other means, such as the bootstrap class path or the extensions directory.) ","date":1635691183265,"level":0,"_id":"l0xbcMULQknWF7MI"}
{"question":"What is the difference between notify() and notifyAll()? ","answer":"The notify() is used to unblock one waiting thread whereas notifyAll() method is used to unblock all the threads in waiting state. ","date":1640105311977,"level":5,"_id":"l1Uvmxh2aBzqjwam"}
{"question":"What is batch processing and how to perform batch processing in JDBC?","answer":"Batch Processing allows to group related SQL statements into a batch and submit them with one call to the database. The java.sql.Statement and java.sql.PreparedStatement interfaces provide methods for batch processing.     addBatch(): The addBatch() method of Statement, PreparedStatement, and CallableStatement is used to add individual statements to the batch.     executeBatch(): The executeBatch() is used to start the execution of all the statements grouped together. The executeBatch() returns an array of integers, and each element of the array represents the update count for the respective update statement.     ClearBatch(): This method removes all the statements added with the addBatch() method.","date":1636181717817,"level":1,"_id":"lGYzyqyyGaJ0GcIU"}
{"question":"Can you declare an interface method static?","answer":"Java 8 interface changes include static methods and default methods in interfaces. Prior to Java 8, we could have only method declarations in the interfaces. But from Java 8, we can have default methods and static methods in the interfaces.","date":1636640035541,"level":0,"_id":"lHw0sspE6XO34aDR"}
{"question":"Can Java object be locked down for exclusive use by a given thread?  ","answer":"Yes. You can lock an object by putting it in a \"synchronized\" block. The locked object is inaccessible to any thread other than the one that explicitly claimed it.","date":1637080405332,"level":4,"_id":"laFguTtvznPO6mYt"}
{"question":" When parseInt() method can be used?","answer":"This method is used to get the primitive data type of a certain String.","date":1635757111310,"level":1,"_id":"lbo5nfOuQMkr3cTe"}
{"question":"Are Arrays of Primitive Data Types?","answer":"No. In Java, Arrays are objects.","date":1637085962321,"level":4,"_id":"loNxKE82VXerR0au"}
{"question":"What are the ways in which a thread can enter the waiting state?","answer":"A thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.\n","date":1635494311311,"level":0,"_id":"lqt1V0mPqci7T9Zd"}
{"question":"What is the static import?","answer":"By static import, we can access the static members of a class directly, and there is no to qualify it with the class name.","date":1636217312337,"level":4,"_id":"lwIvemWyHKvkC989"}
{"question":"What are the functional interfaces Supplier<T>, BooleanSupplier, DoubleSupplier, IntSupplierand LongSupplier?","answer":"Supplier<T>(provider) - the interface through which a function is implemented that takes nothing to the input, but returns the result of the class to the output T;      DoubleSupplier- the supplier is returning Double;     IntSupplier- the supplier is returning Integer;     LongSupplier- the supplier is returning Long.","date":1635882132527,"level":0,"_id":"lwQe0FkmvZsGc2aQ"}
{"question":"What is the difference between factory and abstract factory pattern?","answer":"The Factory Method is usually categorised by a switch statement where each case returns a different class, using the same root interface so that the calling code never needs to make decisions about the implementation.  Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object. In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.","date":1637085869495,"level":4,"_id":"lydexf9xK1K5yfS4"}
{"question":"What are CLOB and BLOB data types in JDBC?","answer":"BLOB: Blob can be defined as the variable-length, binary large object which is used to hold the group of Binary data such as voice, images, and mixed media. It can hold up to 2GB data on MySQL database and 128 GB on Oracle database. BLOB is supported by many databases such as MySQL, Oracle, and DB2 to store the binary data (images, video, audio, and mixed media). CLOB: Clob can be defined as the variable-length, character-large object which is used to hold the character-based data such as files in many databases. It can hold up to 2 GB on MySQL database, and 128 GB on Oracle Database. A CLOB is considered as a character string.","date":1635524304456,"level":1,"_id":"m3EB8GICN5qWYOpc"}
{"question":"What do you understand by BlockingQueue?\n\n","answer":"BlockingQueue is an interface which extends the Queue interface. It provides concurrency in the operations like retrieval, insertion, deletion. While retrieval of any element, it waits for the queue to be non-empty. While storing the elements, it waits for the available space. BlockingQueue cannot contain null elements, and implementation of BlockingQueue is thread-safe.","date":1636657401219,"level":4,"_id":"mNivI4VnXD1Yaw6N"}
{"question":"java.util.regex package","answer":"The java.util.regex package primarily consists of three classes: Pattern, Matcher, and PatternSyntaxException.","date":1636640014669,"level":0,"_id":"mYKOL4uhEB64RdMG"}
{"question":"What is JIT compiler in Java?","answer":"The Just-In-Time (JIT) compiler is a component of the runtime environment that improves the performance of Java applications by compiling bytecodes to native machine code at run time.","date":1640545401231,"level":5,"_id":"mZJpBsAfMfoZAvkT"}
{"question":"Why must wait() method be called from the synchronized block?","answer":"We must call the wait method otherwise it will throw java.lang.IllegalMonitorStateException exception. Moreover, we need wait() method for inter-thread communication with notify() and notifyAll(). Therefore It must be present in the synchronized block for the proper and correct communication. ","date":1637085829055,"level":4,"_id":"mdMX2t3iceXjOTLx"}
{"question":"[JDBC] Statement","answer":"You use objects created from this interface to submit the SQL statements to the database. Some derived interfaces accept parameters in addition to executing stored procedures.","date":1635494311259,"level":0,"_id":"mfFqYHnwtT7oWdtN"}
{"question":"What contains .class file?","answer":"Bytecode – the machine language of the JVM; the .class file does not contain code that is native to processor","date":1639500512685,"level":5,"_id":"mk7rAnhgZLHLVKia"}
{"question":"What is an I/O filter? ","answer":"An I/O filter is an object that reads from one stream and writes to another, usually altering the data in some way as it is passed from one stream to another. Many Filter classes that allow a user to make a chain using multiple input streams. It generates a combined effect on several filters.","date":1635514781910,"level":1,"_id":"mpPbwn68jV94NS9z"}
{"question":"Skeleton","answer":"The skeleton is an object, acts as a gateway for the server side object. All the incoming requests are routed through it. When the skeleton receives the incoming request, it does the following tasks:      It reads the parameter for the remote method.     It invokes the method on the actual remote object.     It writes and transmits (marshals) the result to the caller. ","date":1636790045821,"level":3,"_id":"mtMI3qExCao47Unm"}
{"question":"Can there be an abstract method without an abstract class?","answer":"No","date":1639500513295,"level":5,"_id":"mvoNJU8F7MFpADcL"}
{"question":"Types of Association","answer":"Aggregation (weak association);  Composition (strong association)","date":1636361758490,"level":3,"_id":"n1ng6RHr0ULzorgB"}
{"question":"What is shutdown hook?","answer":"The shutdown hook is a thread that is invoked implicitly before JVM shuts down. So we can use it to perform clean up the resource or save the state when JVM shuts down normally or abruptly. ","date":1635523602794,"level":1,"_id":"nGQYlKB1eG7eu9VA"}
{"question":"Define Packages in Java?","answer":"A Package can be defined as a grouping of related types(classes, interfaces, enumerations and annotations ) providing access protection and name space management.","date":1635757111310,"level":1,"_id":"nHpKQEXiGKvAsL1U"}
{"question":"Distinguish between static loading and dynamic class loading?","answer":"Static Class Loading: Creating objects and instance using new keyword is known as static class loading. The retrieval of class definition and instantiation of the object is done at compile time. Dynamic Class Loading: Loading classes use Class.forName() method. Dynamic class loading is done when the name of the class is not known at compile time.","date":1637165460077,"level":4,"_id":"nLVr3hlaYemV5D30"}
{"question":"Can we make the user thread as daemon thread if the thread is started?","answer":"No, if you do so, it will throw IllegalThreadStateException. Therefore, we can only create a daemon thread before starting the thread.","date":1640364513678,"level":5,"_id":"nXpFJizJYbLoi2pu"}
{"question":"Why java uses the concept of the string literal?","answer":"To make Java more memory efficient (because no new objects are created if it exists already in the string constant pool). ","date":1636232537437,"level":3,"_id":"nY6bzKnmOyGifPff"}
{"question":"StringBuffer","answer":"mutable class; The StringBuffer is fast and consumes less memory when you concat strings; doesn’t override the equals() method of Object class, StringBuffer is synchronized (=thread safe); StringBuffer is less efficient than StringBuilder.","date":1636132130691,"level":3,"_id":"ncL74O9dj8hU5cKQ"}
{"question":"How can we maintain the integrity of a database by using JDBC?","answer":"To maintain the integrity of a database, we need to ensure the ACID properties. ACID properties mean Atomicity, Consistency, Isolation, and durability. In JDBC, Connection interface provides methods like setAutoCommit(), commit(), and rollback() which can be used to manage transaction. ","date":1636658734035,"level":0,"_id":"ndcbfT4M3Prw8zQ3"}
{"question":"Compare the sleep() and wait() methods in Java","answer":"    sleep() is a blocking operation that keeps a hold on the monitor / lock of the shared object for the specified number of milliseconds.     wait(), on the other hand, simply pauses the thread until either (a) the specified number of milliseconds have elapsed or (b) it receives a desired notification from another thread (whichever is first), without keeping a hold on the monitor/lock of the shared object. Sleep() is most commonly used for polling, or to check for certain results, at a regular interval. wait() is generally used in multithreaded applications, in conjunction with notify() / notifyAll(), to achieve synchronization and avoid race conditions.","date":1635494311275,"level":0,"_id":"ohDs7bFKM5TO6oXV"}
{"question":"What is the purpose of wait() method in Java?","answer":"The wait() method is provided by the Object class in Java. This method is used for inter-thread communication in Java. The java.lang.Object.wait() is used to pause the current thread, and wait until another thread does not call the notify() or notifyAll() method. Its syntax is given below.  public final void wait()","date":1636476514243,"level":4,"_id":"ooT7GrGxNV3SekMw"}
{"question":" What are cookies?","answer":"Cookies (“cookies”) - a small piece of data sent by a web server and stored on the user's device. Each time you try to open a site page, the web client sends cookies corresponding to this site to the web server as part of the HTTP request. It is used to save data on the user side and in practice it is usually used to:     user authentication;     storage of personal preferences and user settings;     tracking the status of the user's access session;     maintaining a variety of statistics.","date":1636829754382,"level":0,"_id":"p14JaGlKZM3rCilJ"}
{"question":"What variables do lambda expressions have access to?","answer":"Access to external scope variables from a lambda expression is very similar to access from anonymous objects. immutable ( effectively final - not necessarily marked as final) local variables; class fields; static variables.\n The default methods of the implemented functional interface are not allowed to be accessed inside the lambda expression.","date":1636547830548,"level":0,"_id":"p5PiyHRgQ1fjOkti"}
{"question":"Java Stack Memory","answer":"Stack in java is a section of memory which contains methods, local variables and reference variables. Local variables are created in the stack. Stack memory is always referenced in LIFO (Last-In-First-Out) order. Whenever a method is invoked, a new block is created in the stack memory for the method to hold local primitive values and reference to other objects in the method. As soon as method ends, the block becomes unused and become available for next method. Stack memory size is very less compared to Heap memory.","date":1635756882749,"level":2,"_id":"p6AtQwyrMil6AuaP"}
{"question":"  What is Builder pattern?\n  ","answer":"Builder pattern builds a complex object using simple objects and using a step by step approach. This builder is independent of other objects.\nThe Director class is optional and is used to make sure that the building steps are executed in the right order with the right data by the right builder. It's about validation and delegation.\nBuilder/Director pattern's steps invocations could be semantically presented by method chaining or so called Fluent Interface syntax. ","date":1635691091673,"level":0,"_id":"p6Dpgn5w6Lb31Fc0"}
{"question":" What is a WAR file?","answer":"This is Web Archive File and used to store XML, java classes, and JavaServer pages. which is used to distribute a collection of JavaServer Pages, Java Servlets, Java classes, XML files, static Web pages etc.","date":1635758520472,"level":0,"_id":"pCmWATQMArDO9MSb"}
{"question":"When you compile a program written in the Java programming language, the compiler converts the human-readable source file into platform-independent code that a Java Virtual Machine can understand. What is this platform-independent code called?","answer":"bytecode","date":1640105314445,"level":5,"_id":"pE4RO4PerUfxWZYe"}
{"question":"What is Null Object pattern?","answer":"In Null Object pattern, a null object replaces check of NULL object instance. Instead of putting if check for a null value, Null Object reflects a do nothing relationship. Such Null object can also be used to provide default behaviour in case data is not available.\n\nIn Null Object pattern, we create an abstract class specifying various operations to be done, concrete classes extending this class and a null object class providing do nothing implementation of this class and will be used seamlessly where we need to check null value.","date":1636569226157,"level":0,"_id":"pQyaPQpDw245xL9I"}
{"question":"Memory consistency errors","answer":"Memory consistency errors occur when different threads have inconsistent views of what should be the same data. The causes of memory consistency errors are complex. Fortunately, the programmer does not need a detailed understanding of these causes. All that is needed is a strategy for avoiding them. The key to avoiding memory consistency errors is understanding the happens-before relationship. This relationship is simply a guarantee that memory writes by one specific statement are visible to another specific statement.","date":1635494311270,"level":0,"_id":"ptHmmw6pcoSngd2S"}
{"question":"What is an exception?","answer":"An exception is an event, which occurs during the execution of a program, that disrupts the normal flow of the program's instructions. ","date":1635494311265,"level":0,"_id":"qNBo14oOtQZMJTFq"}
{"question":"What is the difference between object oriented programming language and object based programming language?","answer":"Object based programming languages follow all the features of OOPs except Inheritance. JavaScript is an example of object based programming languages.\n","date":1635494311311,"level":0,"_id":"qaUoY40arGaZebEL"}
{"question":"What is the method collect()for streams for?","answer":"A method collect()is the final operation that is used to represent the result as a collection or some other data structure.","date":1635776220887,"level":1,"_id":"qbmKxUnWZ3MDRh8w"}
{"question":"What is the synchronization?","answer":"Synchronization is the capability to control the access of multiple threads to any shared resource. It is used:      To prevent thread interference.     To prevent consistency problem.  When the multiple threads try to do the same task, there is a possibility of an erroneous result, hence to remove this issue, Java uses the process of synchronization which allows only one thread to be executed at a time. ","date":1640364514635,"level":5,"_id":"r58jemNXAaVAgfLQ"}
{"question":"What is Garbage Collection?","answer":"Garbage collection is a process of reclaiming the unused runtime objects. It is performed for memory management. In other words, we can say that It is the process of removing unused objects from the memory to free up space and make this space available for Java Virtual Machine. ","date":1638345182657,"level":4,"_id":"r9QHxJpV7zVCAOwP"}
{"question":"Producer-Consumer","answer":"This kind of application shares data between two threads: the producer, that creates the data, and the consumer, that does something with it. The two threads communicate using a shared object. Coordination is essential: the consumer thread must not attempt to retrieve the data before the producer thread has delivered it, and the producer thread must not attempt to deliver new data if the consumer hasn't retrieved the old data.","date":1635494311272,"level":0,"_id":"rFWCCV3HWEvAR9rO"}
{"question":" What are the pros and cons of Microservice Architecture?","answer":"Pros:\n    Freedom to use different technologies;     Each microservices focuses on single capability;     Supports individual deployable units;     Allow frequent software releases;     Ensures security of each service;     Mulitple services are parallelly developed and deployed\n\nCons:\n\n    Increases troubleshooting challenges;     Increases delay due to remote calls;     Increased efforts for configuration and other operations;     Difficult to maintain transaction safety;     Tough to track data across various boundaries;     Difficult to code between services","date":1636640256881,"level":0,"_id":"rO4VHDcgABazaJj2"}
{"question":" What is a lightweight component?","answer":"Lightweight components are the one which does not go with the native call to obtain the graphical units. They share their parent component graphical units to render them. For example, Swing components, and JavaFX Components. ","date":1637086026847,"level":4,"_id":"rgucleK5cpJotImc"}
{"question":"dynamic linking","answer":"The term dynamically linked means that the program and the particular library it references are not combined together by the linker at link time.","date":1635494311253,"level":0,"_id":"rtTgQtlsLA9Lb4HX"}
{"question":" What is microservices java?","answer":"Microservices are a form of service-oriented architecture style (one of the most important skills for Java developers) wherein applications are built as a collection of different smaller services rather than one whole app.","date":1635756986107,"level":2,"_id":"rvPnOXzRc2LD8yGd"}
{"question":"How can an object be unreferenced?","answer":"by nulling the reference, by assigning a reference to another, by anonymous object etc.","date":1637165930321,"level":4,"_id":"rxnTv4j5ZwriJgGi"}
{"question":"Explain the ExecutorService Interface.","answer":"The ExecutorService Interface is the subinterface of Executor interface and adds the features to manage the lifecycle.","date":1635577652583,"level":1,"_id":"rxyslSZQPxLZDaOs"}
{"question":"Java Future interface","answer":"Java Future interface gives the result of a concurrent process. The Callable interface returns the object of java.util.concurrent.Future. Java Future provides following methods for implementation. cancel(boolean mayInterruptIfRunning): It is used to cancel the execution of the assigned task.   get(): It waits for the time if execution not completed and then retrieved the result. isCancelled(): It returns the Boolean value as it returns true if the task was canceled before the completion. isDone(): It returns true if the job is completed successfully else returns false.","date":1636829715650,"level":0,"_id":"s3ys2CTwYVdYI8LM"}
{"question":"What are the main categories of Design Patterns?\n  ","answer":"The Design patterns can be classified into three main categories:\n    Creational Patterns\n    Behavioral Patterns\n    Functional Patterns","date":1635494311291,"level":0,"_id":"sBw2IHQunKs86TvV"}
{"question":"How to make Java ArrayList Read-Only?","answer":"We can obtain java ArrayList Read-only by calling the Collections.unmodifiableCollection() method. When we define an ArrayList as Read-only then we cannot perform any modification in the collection through  add(), remove() or set() method.","date":1635524204999,"level":1,"_id":"sDJj0W2PBBnIWWcF"}
{"question":"Can a Serialized object be transferred via network?","answer":"Yes, we can transfer a serialized object via network because the serialized object is stored in the memory in the form of bytes and can be transmitted over the network. We can also write the serialized object to the disk or the database.","date":1636476515419,"level":4,"_id":"sFXrIpHOo7IVKiWb"}
{"question":"Can you have virtual functions in Java? ","answer":"Yes, all functions in Java are virtual by default. ","date":1636217315619,"level":4,"_id":"sHla1otth7mtPiNK"}
{"question":"What Is the Difference Between Static and Dynamic Loading?","answer":"Static class loading involves the creation of objects and instances using new keywords, and dynamic class loading is done when the name of the class is not known at compile time.","date":1635756814966,"level":2,"_id":"sPrYHewpEYqC18g2"}
{"question":" Can we create a clone of a singleton object?\n  ","answer":"Yesl, we can but the purpose of Singleton Object creation is to have single instance serving all requests. ","date":1635494311292,"level":0,"_id":"sQKDK7w6LPBJQgg5"}
{"question":"What is StringJoiner?","answer":"The class is StringJoinerused to create a sequence of strings separated by a separator with the ability to append a prefix and suffix to the resulting string.","date":1635514568420,"level":0,"_id":"sWDrs9259cuzzbs3"}
{"question":"What is generics in java?","answer":"Generics enable types (classes and interfaces) to be parameters when defining classes, interfaces and methods. Much like the more familiar formal parameters used in method declarations, type parameters provide a way for you to re-use the same code with different inputs. The difference is that the inputs to formal parameters are values, while the inputs to type parameters are types. ","date":1635967399473,"level":2,"_id":"sXBcifweUnBuoWqG"}
{"question":"Livelock","answer":"A thread often acts in response to the action of another thread. If the other thread's action is also a response to the action of another thread, then livelock may result. As with deadlock, livelocked threads are unable to make further progress. However, the threads are not blocked — they are simply too busy responding to each other to resume work. This is comparable to two people attempting to pass each other in a corridor: Alphonse moves to his left to let Gaston pass, while Gaston moves to his right to let Alphonse pass. Seeing that they are still blocking each other, Alphone moves to his right, while Gaston moves to his left. They're still blocking each other, so…","date":1635758429249,"level":0,"_id":"spskibOqpwTisnMO"}
{"question":" Can we make an array volatile in Java?","answer":"Yes, you can make an array volatile in Java but only the reference which is pointing to an array, not the whole array. What I mean, if one thread changes the reference variable to points to another array, that will provide a volatile guarantee, but if multiple threads are changing individual array elements they won’t be having happens before guarantee provided by the volatile modifier.","date":1637165715842,"level":4,"_id":"suDaffvHo1TXvFs7"}
{"question":"What is difference between ClassNotFoundException and NoClassDefFoundError?","answer":"ClassNotFoundException and NoClassDefFoundError occur when a particular class is not found at runtime. However, they occur at different scenarios. ClassNotFoundException is an exception that occurs when you try to load a class at run time using Class.forName() or loadClass() methods and mentioned classes are not found in the classpath. NoClassDefFoundError is an error that occurs when a particular class is present at compile time, but was missing at run time.","date":1635493660545,"level":0,"_id":"sxDOk4tuEhHAg5zN"}
{"question":"What is framework in java?","answer":"Frameworks are large bodies (usually many classes) of prewritten code to which you add your own code to solve a problem in a specific domain. Perhaps you could say that the framework uses your code because it is usually the framework that is in control. You make use of a framework by calling its methods, inheritance, and supplying “callbacks”, listeners, or other implementations of the Observer pattern.","date":1637165582368,"level":4,"_id":"tJeaon3FQxtIQG5r"}
{"question":"What is the thread?","answer":"A thread is a lightweight subprocess. It is a separate path of execution because each thread runs in a different stack frame. A process may contain multiple threads. Threads share the process resources, but still, they execute independently. ","date":1636476515805,"level":4,"_id":"tt51MDk4VfKKquaR"}
{"question":"What is the purpose of using javap?","answer":"The javap command displays information about the fields, constructors and methods present in a class file. The javap command (also known as the Java Disassembler) disassembles one or more class files.","date":1636657401234,"level":4,"_id":"tzZrzMSP4Dec6ccU"}
{"question":"@FunctionalInterface ","answer":"@FunctionalInterface annotation, introduced in Java SE 8, indicates that the type declaration is intended to be a functional interface, as defined by the Java Language Specification.","date":1635494311261,"level":0,"_id":"uBHFwALijj9CQofq"}
{"question":"Why ConcurrentHashMap is faster than Hashtable in Java?","answer":"ConcurrentHashMap uses multiple buckets to store data. This avoids read locks and greatly improves performance over a HashTable. Both are thread safe, but there are obvious performance wins with ConcurrentHashMap. When we read from a ConcurrentHashMap using get(), there are no locks, contrary to the HashTable for which all operations are simply synchronized. HashTable was released in old versions of Java whereas ConcurrentHashMap is added in java 1.5 version.","date":1636829355445,"level":0,"_id":"uCbG9NiqPWaSaeEl"}
{"question":"What is a method reference?","answer":"If the method existing in the class already does everything that is necessary, then you can use the method reference mechanism (method reference) to directly pass this method. The result will be exactly the same as in the case of defining a lambda expression that calls this method.\nMethod references are potentially more efficient than using lambda expressions. In addition, they provide the compiler with better information about the type, and if you can choose between using a reference to an existing method and using a lambda expression, you should always use a method reference.","date":1635758572627,"level":0,"_id":"uLMeSfxY8d12FBuw"}
{"question":"unbuffered I/O","answer":"This means each read or write request is handled directly by the underlying OS. This can make a program much less efficient, since each such request often triggers disk access, network activity, or some other operation that is relatively expensive.","date":1635494311265,"level":0,"_id":"uYVMccTERKISxeui"}
{"question":" What are the differences between vectors and arrays?","answer":"In Java, the main difference is that vectors are dynamically allocated. They contain dynamic lists of references to other objects and can hold data from many different data types. This means their size can easily change as needed. Arrays, on the other hand, are static. They group data with a fixed size and a fixed primitive type.","date":1635494311273,"level":0,"_id":"uZY1C0FrRo1K3mwb"}
{"question":"How are passed reference data type parameters?","answer":"by value. However, the values of the object's fields can be changed in the method, if they have the proper access level.’","date":1635494311260,"level":0,"_id":"uaJf3KeB1X8SVkJ8"}
{"question":"What is the purpose of the Synchronized block?","answer":"The Synchronized block can be used to perform synchronization on any specific resource of the method. Only one thread at a time can execute on a particular resource, and all other threads which attempt to enter the synchronized block are blocked.      Synchronized block is used to lock an object for any shared resource.     The scope of the synchronized block is limited to the block on which, it is applied. Its scope is smaller than a method. ","date":1636476515995,"level":4,"_id":"ucdATjcj1tXuGUdY"}
{"question":" How is the safety of a thread achieved?","answer":"If a method or class object can be used by multiple threads at a time without any race condition, then the class is thread-safe. Thread safety is used to make a program safe to use in multithreaded programming. It can be achieved by the following ways:      Synchronization;     Using Volatile keyword;     Using a lock based mechanism;     Use of atomic wrapper classes ","date":1635493804220,"level":0,"_id":"uhs6nMQjh5u80x5V"}
{"question":"Can you write a Java class that could be used both as an applet as well as an application?","answer":"Yes. Add a main() method to the applet.","date":1636476516565,"level":4,"_id":"v5X8wDkHj21h6lwk"}
{"question":"TreeSet","answer":"TreeSet, which stores its elements in a red-black tree, orders its elements based on their values; it is substantially slower than HashSet.","date":1635774320499,"level":1,"_id":"v7HbeQKEMsmJzTKA"}
{"question":" Describe the purpose and working of sleep() method.","answer":"The sleep() method in java is used to block a thread for a particular time, which means it pause the execution of a thread for a specific time. There are two methods of doing so. When we call the sleep() method, it pauses the execution of the current thread for the given time and gives priority to another thread(if available). Moreover, when the waiting time completed then again previous thread changes its state from waiting to runnable and comes in running state, and the whole process works so on till the execution doesn't complete. ","date":1636524323163,"level":4,"_id":"vTaCc2yPv8Qx7Jo9"}
{"question":"Abstraction","answer":"Abstraction is a process of hiding the implementation details and showing only functionality to the user. It displays just the essential things to the user and hides the internal information. Abstraction lets you focus on what the object does instead of how it does it.  In Java, there are two ways to achieve the abstraction: abstract class and interface.","date":1636185399559,"level":2,"_id":"vzXwnT10fVsjyOFV"}
{"question":"What is Filter pattern?\n  ","answer":"Filter pattern or Criteria pattern is a design pattern that enables developers to filter a set of objects using different criteria and chaining them in a decoupled way through logical operations. This type of design pattern comes under structural pattern as this pattern combines multiple criteria to obtain single criteria.\nFilter design pattern is useful where you want to add filters dynamically or you are implementing multiple functionalities and most of them require different filter criteria to filter something. In that case instead of hard coding the filters inside the functionalities, you can create filter criteria and re-use it wherever required.","date":1635494311291,"level":0,"_id":"w9fJQrp1rRq6K2A0"}
{"question":"Can we override the overloaded method?","answer":"Yes","date":1636217317155,"level":4,"_id":"w9uR41eUwpH2StJx"}
{"question":"@Repeatable","answer":"@Repeatable annotation, introduced in Java SE 8, indicates that the marked annotation can be applied more than once to the same declaration or type use. ","date":1635513389883,"level":0,"_id":"wE4UNa0VO8KAS2GS"}
{"question":"What are the JDBC API components?","answer":"DriverManager, Driver, Connection, Statement, ResultSet, SQLException","date":1635494311259,"level":0,"_id":"wXSFvzPRyyD1DvRv"}
{"question":"Does constructor return any value?","answer":"yes, The constructor implicitly returns the current instance of the class","date":1636476517350,"level":4,"_id":"waTGrvPh4fqnj5R5"}
{"question":"What is RMI?","answer":"The RMI (Remote Method Invocation) is an API that provides a mechanism to create the distributed application in java. The RMI allows an object to invoke methods on an object running in another JVM. The RMI provides remote communication between the applications using two objects stub and skeleton.","date":1636829844445,"level":0,"_id":"whlfmXiEznpyk2ka"}
{"question":"equals and hascode rule","answer":"By definition, if two objects are equal, their hash code must also be equal. If you override the equals() method, you change the way two objects are equated and Object's implementation of hashCode() is no longer valid. Therefore, if you override the equals() method, you must also override the hashCode() method as well.","date":1635757111263,"level":1,"_id":"wjdzBWgn6uab0Vtb"}
{"question":"daemon threads?","answer":"The daemon threads are the low priority threads that provide the background support and services to the user threads. Daemon thread gets automatically terminated by the JVM if the program remains with the daemon thread only, and all other user threads are ended/died. There are two methods for daemon thread available in the Thread class:      public void setDaemon(boolean status): It used to mark the thread daemon thread or a user thread.     public boolean isDaemon(): It checks the thread is daemon or not. ","date":1637166335901,"level":4,"_id":"wvCcuwD4ectxRFeB"}
{"question":"How many bits are used to represent Unicode, ASCII, UTF-16, and UTF-8 characters?","answer":"Unicode requires 16 bits and ASCII require 7 bits. Although the ASCII character set uses only 7 bits, it is usually represented as 8 bits. UTF-8 represents characters using 8, 16, and 18 bit patterns. UTF-16 uses 16-bit and larger bit patterns.","date":1635494448877,"level":0,"_id":"wxGoNggGQHG3wPPZ"}
{"question":"Difference between method arguments and parameters","answer":"Parameters refers to the list of variables in a method declaration. Arguments are the actual values that are passed in when the method is invoked.","date":1635756513884,"level":2,"_id":"wzx5lZD3c17VlUKY"}
{"question":"What is static synchronization?","answer":"If you make any static method as synchronized, the lock will be on the class not on the object. If we use the synchronized keyword before a method so it will lock the object (one thread can access an object at a time) but if we use static synchronized so it will lock a class (one thread can access a class at a time).","date":1637168004842,"level":4,"_id":"x4vXHYLwAqU5I6yN"}
{"question":"Generic type","answer":"A generic type is a generic class or interface that is parameterized over types.","date":1635494311263,"level":0,"_id":"x5C46E3MAYeBQQX5"}
{"question":"Which Swing methods are thread-safe?","answer":"There are only three thread-safe methods:\n    repaint,\n    revalidate,\n    invalidate.","date":1635494311278,"level":0,"_id":"xDomYOHxknjRFV51"}
{"question":"unbounded wildcards","answer":" The unbounded wildcard type is specified using the wildcard character (?), for example, List<?>. This is called a list of unknown type. There are two scenarios where an unbounded wildcard is a useful approach:     If you are writing a method that can be implemented using functionality provided in the Object class.     When the code is using methods in the generic class that don't depend on the type parameter. For example, List.size or List.clear. In fact, Class<?> is so often used because most of the methods in Class<T> do not depend on T.","date":1635494311264,"level":0,"_id":"xWFUAceWL1kDDJTV"}
{"question":"Method signature","answer":"the method's name and the parameter types. ","date":1635795760227,"level":2,"_id":"xifRorJTyDVrEEVt"}
{"question":" Can we use String in the switch case?","answer":"We can use String in switch case but it is just syntactic sugar. Internally string hash code is used for the switch. ","date":1636657401228,"level":4,"_id":"xnLKX0VS6cWaUtxU"}
{"question":"HashSet","answer":"stores its elements in a hash table, is the best-performing implementation (of Set interface); however it makes no guarantees concerning the order of iteration. ","date":1635514474253,"level":0,"_id":"yJk7mf2EohlPRvAH"}
{"question":"Raw type","answer":"A raw type is the name of a generic class or interface without any type arguments.","date":1635494311263,"level":0,"_id":"yY4GHGu5n5Cjoa1N"}
{"question":"protected modifier","answer":"the member can only be accessed within its own package (as with package-private) and, in addition, by a subclass of its class in another package.","date":1635758770331,"level":0,"_id":"ylFQnTMHnRu5p2gN"}
{"question":"How to instantiate an inner class?","answer":"To instantiate an inner class, you must first instantiate the outer class. Then, create the inner object within the outer object with this syntax:\nOuterClass outerObject = new OuterClass();\nOuterClass.InnerClass innerObject = outerObject.new InnerClass();","date":1636829772665,"level":0,"_id":"yllI0pnDGJt7sF48"}
{"question":"JIT compiler","answer":"Just-In-Time(JIT) compiler: It is used to improve the performance. JIT compiles parts of the bytecode that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here the term “compiler” refers to a translator from the instruction set of a Java virtual machine (JVM) to the instruction set of a specific CPU.","date":1635756528780,"level":2,"_id":"ymBpRXWHyDWoOgYw"}
{"question":"What are the functional interfaces Consumer<T>, DoubleConsumer, IntConsumerand LongConsumer?","answer":"Consumer<T>(consumer) - the interface through which a function is implemented that receives an instance of the class as an input T, performs some action with it, and returns nothing.     DoubleConsumer- the consumer receiving the input Double; IntConsumer- the consumer receiving the input Integer;     LongConsumer- the consumer receiving the input Long.","date":1635758500604,"level":0,"_id":"yquVsUf2bufsTwyL"}
{"question":"How can we create an immutable class in Java?","answer":"We can create an immutable class by defining a final class having all of its members as final.","date":1634138451855,"level":2,"_id":"yvtOlSaCzdlvuSLU"}
{"question":"Virtual functions","answer":"A virtual function or virtual method in an OOP language is a function or method used to override the behavior of the function in an inherited class with the same signature to achieve the polymorphism.","date":1636476522776,"level":4,"_id":"z6cFcr1y1LY32LmB"}
{"question":"Interrupts","answer":"An interrupt is an indication to a thread that it should stop what it is doing and do something else. It's up to the programmer to decide exactly how a thread responds to an interrupt, but it is very common for the thread to terminate. This is the usage emphasized in this lesson. A thread sends an interrupt by invoking interrupt on the Thread object for the thread to be interrupted. For the interrupt mechanism to work correctly, the interrupted thread must support its own interruption.","date":1635494311269,"level":0,"_id":"zZubpd7zM4vTNQ8N"}
{"question":"What is String Pool?","answer":"String pool is the space reserved in the heap memory that can be used to store the strings. The main advantage of using the String pool is whenever we create a string literal; the JVM checks the \"string constant pool\" first. If the string already exists in the pool, a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and placed in the pool. Therefore, it saves the memory by avoiding the duplicacy.","date":1636476523129,"level":4,"_id":"za9Og6yp7jEoSdWr"}
{"question":"What is an applet?","answer":"An applet is a small java program that runs inside the browser and generates dynamic content. It is embedded in the webpage and runs on the client side. It is secured and takes less response time. It can be executed by browsers running under many platforms, including Linux, Windows, Mac Os, etc. However, the plugins are required at the client browser to execute the applet. ","date":1636476523910,"level":4,"_id":"zf8zZMWSWLb0hSdK"}
{"question":"@SafeVarargs","answer":"@SafeVarargs annotation, when applied to a method or constructor, asserts that the code does not perform potentially unsafe operations on its varargs parameter. When this annotation type is used, unchecked warnings relating to varargs usage are suppressed.","date":1635494311261,"level":0,"_id":"zi0GZhMboZlRa1Xx"}
{"question":"What is a heavyweight component?","answer":"The portable elements provided by the operating system are called heavyweight components. AWT is limited to the graphical classes provided by the operating system and therefore, It implements only the minimal subset of screen elements supported by all platforms. The Operating system dependent UI discovery tools are called heavyweight components.","date":1636524603889,"level":4,"_id":"zs1KfgLXYOkkAy9x"}
{"question":"What are the steps involved to write RMI based programs?  ","answer":"There are 6 steps which are performed to write RMI based programs.      Create the remote interface.     Provide the implementation of the remote interface.     Compile the implementation class and create the stub and skeleton objects using the rmic tool.     Start the registry service by the rmiregistry tool.     Create and start the remote application.     Create and start the client application.  ","date":1635577195205,"level":1,"_id":"zyURdF3Qj5YWdLFM"}
{"$$deleted":true,"_id":"4T7X2pSmTdIRh4WU"}
{"question":" What is a JavaBean exactly?","answer":"Basically, a \"Bean\" follows the standard: is a serializable object; has \"properties\" whose getters and setters are just methods with certain names (like, say, getFoo() is the getter for the \"Foo\" property); has a public 0-arg constructor (so it can be created at will and configured by setting its properties). There is no syntactic difference between a JavaBean and another class - a class is a JavaBean if it follows the standards.","date":1640801758934,"level":3,"_id":"4T7X2pSmTdIRh4WU"}
{"$$deleted":true,"_id":"9TpWXXRkJwN5gSXy"}
{"question":"How to make a read-only class in Java? ","answer":"A class can be made read-only by making all of the fields private. The read-only class will have only getter methods which return the private property of the class to the main method. We cannot modify this property because there is no setter method available in the class.","date":1645127445506,"level":5,"_id":"9TpWXXRkJwN5gSXy"}
{"$$deleted":true,"_id":"0RpfMgtdgGv0ODuW"}
{"question":" Does Spring Bean provide thread safety?","answer":"The default scope of Spring bean is singleton, so there will be only one instance per context. That means that all the having a class level variable that any thread can update will lead to inconsistent data. Hence in default mode spring beans are not thread-safe.\nHowever, we can change spring bean scope to request, prototype or session to achieve thread-safety at the cost of performance. It’s a design decision and based on the project requirements.","date":1643468414356,"level":5,"_id":"0RpfMgtdgGv0ODuW"}
{"$$deleted":true,"_id":"CvkZcO9cmwLONyob"}
{"question":"interfaces used in Collection framework?","answer":"1. Collection interface, 2. List interface, 3. Set interface, 4. Queue interface, 5. Dequeue interface, 6. Map interface","date":1641292767757,"level":2,"_id":"CvkZcO9cmwLONyob"}
{"$$deleted":true,"_id":"GrnpLqDwqz7ebbaN"}
{"question":"What is Proxy pattern?","answer":"In proxy pattern, a class represents functionality of another class. This type of design pattern comes under structural pattern.\nIn proxy pattern, we create object having original object to interface its functionality to outer world.","date":1641292801149,"level":0,"_id":"GrnpLqDwqz7ebbaN"}
{"$$deleted":true,"_id":"3Dt07X5bWp83ZYPx"}
{"question":"What is lock interface in Concurrency API in Java?","answer":"The java.util.concurrent.locks.Lock interface is used as the synchronization mechanism. It works similar to the synchronized block. There are a few differences between the lock and synchronized block: 1) Lock interface provides the guarantee of sequence in which the waiting thread will be given the access, whereas the synchronized block doesn't guarantee it. 2) Lock interface provides the option of timeout if the lock is not granted whereas the synchronized block doesn't provide that. The methods of Lock interface, i.e., Lock() and Unlock() can be called in different methods whereas single synchronized block must be fully contained in a single method.","date":1641843940381,"level":2,"_id":"3Dt07X5bWp83ZYPx"}
{"$$deleted":true,"_id":"GCWOEG36a13ni0Bn"}
{"question":"How can you make a class serializable in Java?","answer":"A class can become serializable by implementing the Serializable interface.","date":1644683822092,"level":6,"_id":"GCWOEG36a13ni0Bn"}
{"$$deleted":true,"_id":"DijEIBblhvxRd8xU"}
{"question":"What is Optional?","answer":"An optional value Optionalis a container for an object that may or may not contain a value null. Such a wrapper is a convenient means of prevention NullPointerException, as has some higher-order functions, eliminating the need for repeating if null/notNullchecks","date":1640542027853,"level":3,"_id":"DijEIBblhvxRd8xU"}
{"$$deleted":true,"_id":"DoL28UFCfm8GWtDN"}
{"question":"4 buffered stream classes","answer":"There are four buffered stream classes used to wrap unbuffered streams: BufferedInputStream and BufferedOutputStream create buffered byte streams, while BufferedReader and BufferedWriter create buffered character streams.","date":1642097007197,"level":4,"_id":"DoL28UFCfm8GWtDN"}
{"$$deleted":true,"_id":"881VDMu7BCgZn71w"}
{"question":"@Target","answer":"@Target annotation marks another annotation to restrict what kind of Java elements the annotation can be applied to. A target annotation specifies one of the following element types as its value: ElementType.ANNOTATION_TYPE can be applied to an annotation type. ElementType.CONSTRUCTOR can be applied to a constructor. ElementType.FIELD can be applied to a field or property. ElementType.LOCAL_VARIABLE can be applied to a local variable. ElementType.METHOD can be applied to a method-level annotation. ElementType.PACKAGE can be applied to a package declaration. ElementType.PARAMETER can be applied to the parameters of a method. ElementType.TYPE can be applied to any element of a class. ","date":1643734703893,"level":5,"_id":"881VDMu7BCgZn71w"}
{"$$deleted":true,"_id":"4CvOUemmkqvA6Egq"}
{"question":"What are the main components of concurrency API?","answer":"Concurrency API can be developed using the class and interfaces of java.util.Concurrent package. There are the following classes and interfaces in java.util.Concurrent package: Executor, FarkJoinPool, ExecutorService, ScheduledExecutorService, Future, TimeUnit(Enum), CountDownLatch, CyclicBarrier     Semaphore     ThreadFactory     BlockingQueue     DelayQueue     Locks     Phaser ","date":1640541277357,"level":3,"_id":"4CvOUemmkqvA6Egq"}
{"$$deleted":true,"_id":"8ZFpzaoCC064YRyk"}
{"question":"What is the Executor interface in Concurrency API in Java?","answer":"The Executor Interface provided by the package java.util.concurrent is the simple interface used to execute the new task. The execute() method of Executor interface is used to execute some given command. The syntax of the execute() method is given below.  void execute(Runnable command)","date":1645898391769,"level":6,"_id":"8ZFpzaoCC064YRyk"}
{"$$deleted":true,"_id":"CeAP47c1Q2wo31qY"}
{"question":" buffered I/O streams","answer":"Buffered input streams read data from a memory area known as a buffer; the native input API is called only when the buffer is empty. Similarly, buffered output streams write data to a buffer, and the native output API is called only when the buffer is full.","date":1643273911265,"level":5,"_id":"CeAP47c1Q2wo31qY"}
{"$$deleted":true,"_id":"62F6e1oe6hMMwefV"}
{"question":"Which interface is responsible for transaction management in JDBC?","answer":"The Connection interface provides methods for transaction management such as commit(), rollback() etc.","date":1646145752919,"level":6,"_id":"62F6e1oe6hMMwefV"}
{"$$deleted":true,"_id":"ADjMrMht5nCfRKUe"}
{"question":"JRE","answer":"JRE stands for Java Runtime Environment. It is the implementation of JVM. The Java Runtime Environment is a set of software tools which are used for developing Java applications. It is used to provide the runtime environment. It is the implementation of JVM. It physically exists. It contains a set of libraries + other files that JVM uses at runtime. ","date":1641293017142,"level":3,"_id":"ADjMrMht5nCfRKUe"}
{"$$deleted":true,"_id":"GvWpdPvZvTRkQ1wU"}
{"question":"What is the use of sorted() method in streams?","answer":"The method sorted()is an intermediate operation, which allows you to sort the values ​​either in natural order or by setting Comparator. The order of the elements in the original collection remains untouched - sorted()it just creates its sorted representation.","date":1643273911250,"level":5,"_id":"GvWpdPvZvTRkQ1wU"}
{"$$deleted":true,"_id":"3ZkBVe788KNJF9tf"}
{"question":"What is a JSP Page?","answer":"A Java Server Page (JSP) is a text document that contains two types of text:\n    static data and  JSP elements. \nStatic data can be expressed in any text-based format, such as HTML or XML. JSP is a technology that mixes static content with dynamically-generated content.","date":1640541326433,"level":3,"_id":"3ZkBVe788KNJF9tf"}
{"$$deleted":true,"_id":"CiGroemUlveFDHFD"}
{"question":"[JDBC] Connection","answer":"This interface with all methods for contacting a database. The connection object represents communication context, i.e., all communication with database is through connection object only.","date":1643399311909,"level":4,"_id":"CiGroemUlveFDHFD"}
{"$$deleted":true,"_id":"7LeiLCG7sMFNYzIO"}
{"question":"What are FilterStreams? ","answer":"FilterStream classes are used to add additional functionalities to the other stream classes. FilterStream classes act like an interface which read the data from a stream, filters it, and pass the filtered data to the caller. The FilterStream classes provide extra functionalities like adding line numbers to the destination file, etc.","date":1641293104659,"level":4,"_id":"7LeiLCG7sMFNYzIO"}
{"$$deleted":true,"_id":"6BBZJ95hK5Yrn0LN"}
{"question":"Can we change the scope of the overridden method in the subclass?","answer":"Yes, we can change the scope of the overridden method in the subclass. However, we must notice that we cannot decrease the accessibility of the method. (for example: The protected can be changed to public or default.)","date":1645127759919,"level":5,"_id":"6BBZJ95hK5Yrn0LN"}
{"$$deleted":true,"_id":"E0D478MfSlabBSn5"}
{"question":"Pattern object","answer":"A Pattern object is a compiled representation of a regular expression. The Pattern class provides no public constructors. To create a pattern, you must first invoke one of its public static compile methods, which will then return a Pattern object. These methods accept a regular expression as the first argument;","date":1641293135265,"level":0,"_id":"E0D478MfSlabBSn5"}
{"$$deleted":true,"_id":"2VzD1XLgS5ZDvODD"}
{"question":"Advantages of exceptions","answer":"Separating error-handling code from „regular” code, propagating errors up the call stack, grouping and differentiating error types, ","date":1641293139815,"level":3,"_id":"2VzD1XLgS5ZDvODD"}
{"$$deleted":true,"_id":"6PxxNmvXe79jv66L"}
{"question":" How are the JSP requests handled?","answer":"On the arrival of a JSP request, the browser first requests a page with a .jsp extension. Then, the Web server reads the request and using the JSP compiler, the Web server converts the JSP page into a servlet class. Notice that the JSP file is compiled only on the first request of the page, or if the JSP file has changed.The generated servlet class is invoked, in order to handle the browser’s request. Once the execution of the request is over, the servlet sends a response back to the client. See how to get Request parameters in a JSP.","date":1642702494383,"level":4,"_id":"6PxxNmvXe79jv66L"}
{"$$deleted":true,"_id":"HOfh2AEtaPiOpy0L"}
{"question":"Threads","answer":"Threads are sometimes called lightweight processes. Both processes and threads provide an execution environment, but creating a new thread requires fewer resources than creating a new process. Threads exist within a process — every process has at least one. Threads share the process's resources, including memory and open files. This makes for efficient, but potentially problematic, communication.","date":1639945225942,"level":2,"_id":"HOfh2AEtaPiOpy0L"}
{"$$deleted":true,"_id":"5c0lu5lxQBoFe9mJ"}
{"question":"Explain Serialization and Deserialization.\n  ","answer":"Java provides a mechanism, called object serialization where an object can be represented as a sequence of bytes and includes the object’s data, as well as information about the object’s type, and the types of data stored in the object. Thus, serialization can be seen as a way of flattening objects, in order to be stored on disk, and later, read back and reconstituted. Deserialisation is the reverse process of converting an object from its flattened state to a live object.\n","date":1643273911308,"level":5,"_id":"5c0lu5lxQBoFe9mJ"}
{"$$deleted":true,"_id":"FZvovoxq0Fp8S9xe"}
{"question":"String ","answer":"immutable class; the String is slow and consumes more memory when you concat too many strings because every time it creates a new instance; it overrides the equals method of Object class","date":1644683688744,"level":6,"_id":"FZvovoxq0Fp8S9xe"}
{"$$deleted":true,"_id":"GKu6rzJ1hrJHSZ0Q"}
{"question":"What’s the difference between deep copy and shallow copy?","answer":"Shallow copy in java copies all values and attributes of an object to another object and both objects reference the same memory locations.\n\nDeep copy is the creation of an object with the same values and attributes of the object being copied but both objects reference different memory locations. ","date":1645731161868,"level":6,"_id":"GKu6rzJ1hrJHSZ0Q"}
{"$$deleted":true,"_id":"HZhgO5qdLeJJOG9n"}
{"question":"in Java, how fast is direct lookup in a hash map theoretically, and why is it often slower in reality?","answer":"Lookup in hash maps is supposed to be constant time, O(1), as each element is mapped to a key, which is computed using the key object’s hash code. However, if the hash function returns the same result for two or more inputs, collisions occur. In this case, each key is essentially mapped to a linked list of N objects belonging to it, reducing lookup speed to O(N).","date":1643273911309,"level":5,"_id":"HZhgO5qdLeJJOG9n"}
{"$$deleted":true,"_id":"Az8Mqb5WypxQxQFD"}
{"question":"What are anonymous inner classes?","answer":"Anonymous inner classes are the classes that are automatically declared and instantiated within an expression. We cannot apply different access modifiers to them. Anonymous class cannot be static, and cannot define any static fields, method, or class. In other words, we can say that it a class without the name and can have only one object that is created by its definition. ","date":1643474143591,"level":5,"_id":"Az8Mqb5WypxQxQFD"}
{"$$deleted":true,"_id":"5jJ5gaanqql8J1TJ"}
{"question":"What is the static block?","answer":"Static block is used to initialize the static data member. It is executed before the main method, at the time of classloading.","date":1645987181848,"level":6,"_id":"5jJ5gaanqql8J1TJ"}
{"$$deleted":true,"_id":"5ypJKyMqp6kzo1YG"}
{"question":"What is covariant return type?","answer":"It is possible to have different return type for a overriding method in child class, but child’s return type should be sub-type of parent’s return type. Overriding method becomes variant with respect to return type. The covariant return type specifies that the return type may vary in the same direction as the subclass.","date":1641293303553,"level":4,"_id":"5ypJKyMqp6kzo1YG"}
{"$$deleted":true,"_id":"6TPj1FHl6FQZtHZn"}
{"question":"What is the difference between Java Callable interface and Runnable interface?","answer":"The Callable interface and Runnable interface both are used by the classes which wanted to execute with multiple threads. However, there are two main differences between the both :      A Callable <V> interface can return a result, whereas the Runnable interface cannot return any result.     A Callable <V> interface can throw a checked exception, whereas the Runnable interface cannot throw checked exception.     A Callable <V> interface cannot be used before the Java 5 whereas the Runnable interface can be used. ","date":1643399347032,"level":4,"_id":"6TPj1FHl6FQZtHZn"}
{"$$deleted":true,"_id":"I1gGVjzBcXh8LNMY"}
{"question":"Can you have virtual functions in Java?","answer":"In Java, all non-static methods are by default virtual functions. Only methods marked with the keyword final, which cannot be overridden, along with private methods, which are not inherited, are non-virtual.","date":1643360077614,"level":5,"_id":"I1gGVjzBcXh8LNMY"}
{"$$deleted":true,"_id":"Bc34ofukGNLhkC2e"}
{"question":"Can you make a constructor final?","answer":"no","date":1643399315621,"level":4,"_id":"Bc34ofukGNLhkC2e"}
{"$$deleted":true,"_id":"Fp5mNVNEAVPE3ydu"}
{"question":" How Garbage collector algorithm works?","answer":"Garbage collection works on Mark and Sweep algorithm. In Mark phase it detects all the unreachable objects and Sweep phase it reclaim the heap space used by the garbage objects and make the space available again to the program.","date":1645731150435,"level":6,"_id":"Fp5mNVNEAVPE3ydu"}
{"$$deleted":true,"_id":"16fIFNuQFk4yBx63"}
{"question":"What is hash-collision in Hashtable and how it is handled in Java?","answer":"Two different keys with the same hash value are known as hash-collision. Two separate entries will be kept in a single hash bucket to avoid the collision. There are two ways to avoid hash-collision.\n\n    Separate Chaining\n    Open Addressing","date":1645821238945,"level":6,"_id":"16fIFNuQFk4yBx63"}
{"$$deleted":true,"_id":"H48ova1TduR5XnPO"}
{"question":"Why do streams use forEach()and forEachOrdered() methods?","answer":"    forEach() applies a function to each stream object; ordering in parallel execution is not guaranteed;\n    forEachOrdered() applies a function to each stream object while maintaining the order of the elements.","date":1641293382971,"level":3,"_id":"H48ova1TduR5XnPO"}
{"$$deleted":true,"_id":"F8bL0qvyWcEFueK3"}
{"question":"What do you understand by an IO stream?","answer":"The stream is a sequence of data that flows from source to destination. It is composed of bytes. In Java, three streams are created for us automatically.      System.out: standard output stream     System.in: standard input stream     System.err: standard error stream ","date":1645639896570,"level":6,"_id":"F8bL0qvyWcEFueK3"}
{"$$deleted":true,"_id":"Fkcj2BWQeZobyRJH"}
{"question":"Please explain the difference between String, String Builder, and String Buffer.","answer":"String variables are stored in a constant string pool. With the change in the string reference, it becomes impossible to delete the old value. For example, if a string has stored a value \"Old,\" then adding the new value \"New\" will not delete the old value. It will still be there, however, in a dormant state. In a String Buffer, values are stored in a stack. With the change in the string reference, the new value replaces the older value. The String Buffer is synchronized (and therefore, thread-safe) and offers slower performance than the String Builder, which is also a String Buffer but is not synchronized. Hence, performance is fast in String Builder than the String Buffer.","date":1642241018796,"level":4,"_id":"Fkcj2BWQeZobyRJH"}
{"$$deleted":true,"_id":"EvK8XaXIigAwb5Ps"}
{"question":"Can we have multiple public classes in a java source file?","answer":"A Java source file can have only one class declared as public, we cannot put two or more public classes together in a .java file. This is because of the restriction that the file name should be same as the name of the public class with .java extension.","date":1645729401233,"level":6,"_id":"EvK8XaXIigAwb5Ps"}
{"$$deleted":true,"_id":"6MdEHBHFNS7Vtxpv"}
{"question":"State Two Differences Between an Inner Class and a Subclass","answer":"While Inner classes are in the same file, subclasses can be in another file. With that in mind, while subclasses have the methods of their parent class, inner classes get the methods they want.","date":1645730594805,"level":6,"_id":"6MdEHBHFNS7Vtxpv"}
{"$$deleted":true,"_id":"3UegX7icYxhwjeE1"}
{"question":"Why is Java Platform Independent?","answer":"At the time of compilation, the java compiler converts the source code into a JVM interpretable set of intermediate form, which is termed as byte code. This is unlike the compiled code generated by other compilers and is non-executable. The java virtual machine interpreter processes the non-executable code and executes it on any specific machine. Hence the platform dependency is removed. ","date":1641293577582,"level":4,"_id":"3UegX7icYxhwjeE1"}
{"$$deleted":true,"_id":"HZawe1Iuieg06VtJ"}
{"question":"What Are the Functions of JVM and JRE?","answer":"JVM provides a runtime environment for Java Byte Codes to be executed. JRE includes sets of files required by JVM during runtime.","date":1641293594224,"level":2,"_id":"HZawe1Iuieg06VtJ"}
{"$$deleted":true,"_id":"Dh1diizXmlyHMmbs"}
{"question":"What is the final blank variable?","answer":"A final variable, not initialized at the time of declaration, is known as the final blank variable. We can't initialize the final blank variable directly. Instead, we have to initialize it by using the class constructor.","date":1645127113312,"level":5,"_id":"Dh1diizXmlyHMmbs"}
{"$$deleted":true,"_id":"15p51POSLEMb41ct"}
{"question":"Does it matter in what order catch statements for FileNotFoundException and IOException are written?","answer":"Yes, it does. The FileNoFoundException is inherited from the IOException. Exception's subclasses have to be caught first.","date":1643273911311,"level":5,"_id":"15p51POSLEMb41ct"}
{"$$deleted":true,"_id":"3Sxcb7rHMIpgsne0"}
{"question":"What is the difference between Collection and Stream?","answer":"Collections allow you to work with elements separately, while streams do not allow this, but instead provides the ability to perform functions on data as one.","date":1643468175059,"level":5,"_id":"3Sxcb7rHMIpgsne0"}
{"$$deleted":true,"_id":"FTyv3OkWN4I0mxLu"}
{"question":"JDK","answer":"JDK is an acronym for Java Development Kit. It is a software development environment which is used to develop Java applications and applets. It physically exists. It contains JRE + development tools.","date":1641293678048,"level":1,"_id":"FTyv3OkWN4I0mxLu"}
{"$$deleted":true,"_id":"HDVCzoW5x9BD9BOh"}
{"question":"What is Strategy pattern?","answer":"In Strategy pattern, a class behavior or its algorithm can be changed at run time. This type of design pattern comes under behavior pattern.\nIn Strategy pattern, we create objects which represent various strategies and a context object whose behavior varies as per its strategy object. The strategy object changes the executing algorithm of the context object.","date":1643534936813,"level":5,"_id":"HDVCzoW5x9BD9BOh"}
{"$$deleted":true,"_id":"5Jp5HNauvS9UEJ6e"}
{"question":"What is Downcasting?","answer":"It is the casting from a general to a more specific type, i.e. casting down the hierarchy.","date":1643468665596,"level":5,"_id":"5Jp5HNauvS9UEJ6e"}
{"$$deleted":true,"_id":"5oEGrhAccY1Nvvzd"}
{"question":"JVM","answer":"Java Virtual Machine is a virtual machine that enables the computer to run the Java program. JVM acts like a run-time engine which calls the main method present in the Java code. JVM is the specification which must be implemented in the computer system. The Java code is compiled by JVM to be a Bytecode which is machine independent and close to the native code.","date":1641721163682,"level":4,"_id":"5oEGrhAccY1Nvvzd"}
