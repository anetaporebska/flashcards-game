{"question":"3 kinds of variables","answer":"Fields – member variables in a class, local variables – variables in a method or block of code, parameters – variables in method declarations","date":1633446475145,"level":2,"_id":"09FIrNVXlyRc2jsh"}
{"question":"What is a JavaBean?","answer":"JavaBean is a reusable software component written in the Java programming language, designed to be manipulated visually by a software development environment, like JBuilder or VisualAge for Java. t. A JavaBean encapsulates many objects into one object so that we can access this object from multiple places. Moreover, it provides the easy maintenance. ","date":1633446476747,"level":2,"_id":"0Pxsp6gRc5K08gfN"}
{"question":"Is ++ operator is thread-safe in Java?","answer":"No, it’s not a thread-safe operator because it involves multiple instructions like reading a value, incriminating it and storing it back into memory which can be overlapped between multiple threads. ","date":1633025001228,"level":1,"_id":"0fbAJefkkChzpljB"}
{"question":"Statement","answer":"Statements are roughly equivalent to sentences in natural languages, but instead of ending with a period, a statement ends with a semicolon. Statements may be grouped into blocks. A block is a group of zero or more statements between balanced braces and can be used anywhere a single statement is allowed.","date":1633446525181,"level":3,"_id":"0jMgvzZRgLfDSXUA"}
{"question":"Parallel Garbage Collector","answer":"Parallel garbage collector is also called as throughput collector. It is the default garbage collector of the JVM. Unlike serial garbage collector, this uses multiple threads for garbage collection. Similar to serial garbage collector this also freezes all the application threads while performing garbage collection.","date":1633025144805,"level":1,"_id":"0pa6CkuwjHi8xxGW"}
{"question":"What is hash-collision in Hashtable and how it is handled in Java?","answer":"Two different keys with the same hash value are known as hash-collision. Two separate entries will be kept in a single hash bucket to avoid the collision. There are two ways to avoid hash-collision.\n\n    Separate Chaining\n    Open Addressing","date":1633116838945,"level":1,"_id":"16fIFNuQFk4yBx63"}
{"question":"What is lambda expression in java? ","answer":"A lambda expression (lambda) describes a block of code (an anonymous function) that can be passed to constructors or methods for subsequent execution. The constructor or method receives the lambda as an argument.","date":1633025222647,"level":1,"_id":"1Rs48l1CYxNORO06"}
{"question":"What do you understand by fail-fast?","answer":"The Iterator in java which immediately throws ConcurrentmodificationException, if any structural modification occurs in, is called as a Fail-fast iterator. Fail-fats iterator does not require any extra space in memory.\n","date":1633116867147,"level":1,"_id":"1iCA3y9U26LhdgLA"}
{"question":"What is the difference between Synchronous programming and Asynchronous programming regarding a thread?","answer":"Synchronous programming: In Synchronous programming model, a thread is assigned to complete a task and hence thread started working on it, and it is only available for other tasks once it will end the assigned task.\n\nAsynchronous Programming: In Asynchronous programming, one job can be completed by multiple threads and hence it provides maximum usability of the various threads.","date":1633116995520,"level":1,"_id":"1oKwoROJv9W0KsbZ"}
{"question":"Can we override the static methods?","answer":"no","date":1636474129780,"level":5,"_id":"1wilVc9wpkKlo5NF"}
{"question":"The difference between Serializable and Externalizable in Java?","answer":"Serializable interface is used to make Java classes serializable so that they can be transferred over a network or their state can be saved on disk, but it leverages default serialization built-in JVM, which is expensive, fragile and not secure. Externalizable allows you to fully control the Serialization process, specify a custom binary format and add more security measure.","date":1633116908656,"level":1,"_id":"2Pgje2xjY2ppRG0p"}
{"question":"Why is Java Secure?","answer":"Java does not allow pointers. Pointers give access to actual locations of variables in a system. Also, java programs are bytecode executables that can run only in a JVM. Hence java programs do not have access to the host systems on which they are executing, making it more secure. Java has its own memory management system, which adds to the security feature as well. ","date":1633025289672,"level":1,"_id":"2VXFvQb8iwqgXamj"}
{"question":"What is the nested interface? ","answer":"An Interface that is declared inside the interface or class is known as the nested interface. It is static by default. The nested interfaces are used to group related interfaces so that they can be easy to maintain. The external interface or class must refer to the nested interface. It can't be accessed directly. The nested interface must be public if it is declared inside the interface but it can have any access modifier if declared within the class.","date":1633025309265,"level":1,"_id":"2ogpW8fsHEKkMBNn"}
{"question":"What are the differences between Statement and PreparedStatement interface?","answer":"The Statement interface provides methods to execute queries with the database. The statement interface is a factory of ResultSet; i.e., it provides the factory method to get the object of ResultSet.The PreparedStatement interface is a subinterface of Statement. It is used to execute the parameterized query.In the case of Statement, the query is compiled each time we run the program. In the case of PreparedStatement, the query is compiled only once.The Statement is mainly used in the case when we need to run the static query at runtime.PreparedStatement is used when we need to provide input parameters to the query at runtime.","date":1633118531822,"level":1,"_id":"2v7mtZo2a0Gj5Yon"}
{"question":"What is lock interface in Concurrency API in Java?","answer":"The java.util.concurrent.locks.Lock interface is used as the synchronization mechanism. It works similar to the synchronized block. There are a few differences between the lock and synchronized block: 1) Lock interface provides the guarantee of sequence in which the waiting thread will be given the access, whereas the synchronized block doesn't guarantee it. 2) Lock interface provides the option of timeout if the lock is not granted whereas the synchronized block doesn't provide that. The methods of Lock interface, i.e., Lock() and Unlock() can be called in different methods whereas single synchronized block must be fully contained in a single method.","date":1633025355829,"level":1,"_id":"3Dt07X5bWp83ZYPx"}
{"question":"Why is Java Platform Independent?","answer":"At the time of compilation, the java compiler converts the source code into a JVM interpretable set of intermediate form, which is termed as byte code. This is unlike the compiled code generated by other compilers and is non-executable. The java virtual machine interpreter processes the non-executable code and executes it on any specific machine. Hence the platform dependency is removed. ","date":1633025001226,"level":1,"_id":"3UegX7icYxhwjeE1"}
{"question":"8 primitive data types","answer":"byte, short, int, long, float, double, boolean, char","date":1634743333656,"level":4,"_id":"3hfM0rrbJ3Rw6tvP"}
{"question":"What are the main components of concurrency API?","answer":"Concurrency API can be developed using the class and interfaces of java.util.Concurrent package. There are the following classes and interfaces in java.util.Concurrent package: Executor, FarkJoinPool, ExecutorService, ScheduledExecutorService, Future, TimeUnit(Enum), CountDownLatch, CyclicBarrier     Semaphore     ThreadFactory     BlockingQueue     DelayQueue     Locks     Phaser ","date":1633025387872,"level":1,"_id":"4CvOUemmkqvA6Egq"}
{"question":"Weak References","answer":"Weak Reference Objects are not the default type/class of Reference Object and they should be explicitly specified while using them.","date":1633117166225,"level":1,"_id":"4iNl7gEw8UN6ZpJa"}
{"question":"Constructor","answer":"The constructor can be defined as the special type of method that is used to initialize the state of an object. It is invoked when the class is instantiated, and the memory is allocated for the object. Every time, an object is created using the new keyword, the default constructor of the class is called. The name of the constructor must be similar to the class name. The constructor must not have an explicit return type.","date":1633447384744,"level":3,"_id":"4k2tBhx8ARv96Fxf"}
{"question":"What comes to mind when someone mentions a shallow copy in Java?","answer":"Object cloning. ","date":1633447391305,"level":3,"_id":"4wus53WvALZgrwiB"}
{"question":"Define FutureTask class in Java? ","answer":"Java FutureTask class provides a base implementation of the Future interface. The result can only be obtained if the execution of one task is completed, and if the computation is not achieved then get method will be blocked. If the execution is completed, then it cannot be re-started and can't be canceled.\nSyntax: public class FutureTask<V> extends Object implements RunnableFuture<V>","date":1633118594059,"level":1,"_id":"5HsyhZQMVMaIrE6h"}
{"question":"What is the static block?","answer":"Static block is used to initialize the static data member. It is executed before the main method, at the time of classloading.","date":1634743406706,"level":4,"_id":"5jJ5gaanqql8J1TJ"}
{"question":"JVM","answer":"Java Virtual Machine is a virtual machine that enables the computer to run the Java program. JVM acts like a run-time engine which calls the main method present in the Java code. JVM is the specification which must be implemented in the computer system. The Java code is compiled by JVM to be a Bytecode which is machine independent and close to the native code.","date":1633447433409,"level":3,"_id":"5oEGrhAccY1Nvvzd"}
{"question":"Strong References","answer":"This is the default type/class of Reference Object. Any object which has an active strong reference are not eligible for garbage collection. The object is garbage collected only when the variable which was strongly referenced points to null.","date":1633026104983,"level":1,"_id":"5ssfVNNzJEkcH4q3"}
{"question":"What is covariant return type?","answer":"It is possible to have different return type for a overriding method in child class, but child’s return type should be sub-type of parent’s return type. Overriding method becomes variant with respect to return type. The covariant return type specifies that the return type may vary in the same direction as the subclass.","date":1633117202335,"level":1,"_id":"5ypJKyMqp6kzo1YG"}
{"question":"Which interface is responsible for transaction management in JDBC?","answer":"The Connection interface provides methods for transaction management such as commit(), rollback() etc.","date":1633117212067,"level":1,"_id":"62F6e1oe6hMMwefV"}
{"question":"Can we change the scope of the overridden method in the subclass?","answer":"Yes, we can change the scope of the overridden method in the subclass. However, we must notice that we cannot decrease the accessibility of the method. (for example: The protected can be changed to public or default.)","date":1634743447105,"level":4,"_id":"6BBZJ95hK5Yrn0LN"}
{"question":"State Two Differences Between an Inner Class and a Subclass","answer":"While Inner classes are in the same file, subclasses can be in another file. With that in mind, while subclasses have the methods of their parent class, inner classes get the methods they want.","date":1633026194805,"level":1,"_id":"6MdEHBHFNS7Vtxpv"}
{"question":"What is the difference between Java Callable interface and Runnable interface?","answer":"The Callable interface and Runnable interface both are used by the classes which wanted to execute with multiple threads. However, there are two main differences between the both :      A Callable <V> interface can return a result, whereas the Runnable interface cannot return any result.     A Callable <V> interface can throw a checked exception, whereas the Runnable interface cannot throw checked exception.     A Callable <V> interface cannot be used before the Java 5 whereas the Runnable interface can be used. ","date":1632889907717,"level":1,"_id":"6TPj1FHl6FQZtHZn"}
{"question":"What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?","answer":"The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented. The ByteStream classes are used to perform input-output of 8-bit bytes whereas the CharacterStream classes are used to perform the input/output for the 16-bit Unicode system. ","date":1632890012049,"level":1,"_id":"6kZbgFgNL1LPZYcP"}
{"question":"Is JVM platform independent?","answer":"no, JVM is a platform; Java is platform independent; JVM depends on OS kernel","date":1633025001230,"level":1,"_id":"71HCNJcuKKLm4X35"}
{"question":"Can we declare an interface as final?","answer":"No, we cannot declare an interface as final because the interface must be implemented by some class to provide its definition. Therefore, there is no sense to make an interface final. However, if you try to do so, the compiler will show an error.","date":1634743519079,"level":4,"_id":"75KOaSRypRKsHoN7"}
{"question":"What are FilterStreams? ","answer":"FilterStream classes are used to add additional functionalities to the other stream classes. FilterStream classes act like an interface which read the data from a stream, filters it, and pass the filtered data to the caller. The FilterStream classes provide extra functionalities like adding line numbers to the destination file, etc.","date":1633117238918,"level":1,"_id":"7LeiLCG7sMFNYzIO"}
{"question":"Class variable","answer":"static field","date":1634743541837,"level":4,"_id":"7Qf39haRSBhv4I41"}
{"question":"Java platform ","answer":"The Java platform differs from most other platforms in that it's a software-only platform that runs on top of other hardware-based platforms. The Java platform has two components: JVM, The Java Application Programming Interface (API) ","date":1633117278224,"level":1,"_id":"7QrQgjFmvO1UPRtq"}
{"question":"What is JDBC Driver?","answer":"JDBC Driver is a software component that enables Java application to interact with the database. ","date":1633117289400,"level":1,"_id":"7l6Y1JDPEQv5euKs"}
{"question":"What is the Executor interface in Concurrency API in Java?","answer":"The Executor Interface provided by the package java.util.concurrent is the simple interface used to execute the new task. The execute() method of Executor interface is used to execute some given command. The syntax of the execute() method is given below.  void execute(Runnable command)","date":1633188376067,"level":2,"_id":"8ZFpzaoCC064YRyk"}
{"question":"Can an Interface have a class? ","answer":"Yes, they are static implicitly. ","date":1633447583805,"level":3,"_id":"94TDtSR4vG1rornw"}
{"question":"What is enumeration in Java?","answer":"Enumeration means a list of named constant. In Java, enumeration defines a class type. An Enumeration can have constructors, methods and instance variables. It is created using enum keyword. Each enumeration constant is public, static and final by default. Even though enumeration defines a class type and have constructors, you do not instantiate an enum using new. Enumeration variables are used and declared in much a same way as you do a primitive variable. ","date":1633025001224,"level":1,"_id":"9J7MDnnaYZdU0V0w"}
{"question":"How to make a read-only class in Java? ","answer":"A class can be made read-only by making all of the fields private. The read-only class will have only getter methods which return the private property of the class to the main method. We cannot modify this property because there is no setter method available in the class.","date":1633447626669,"level":3,"_id":"9TpWXXRkJwN5gSXy"}
{"question":"What is context switching?","answer":"In Context switching the state of the process (or thread) is stored so that it can be restored and execution can be resumed from the same point later. Context switching enables the multiple processes to share the same CPU.","date":1633117299845,"level":1,"_id":"9WWYV7vyQPlvDqjD"}
{"question":"Can we call the run() method instead of start()?","answer":"Yes, calling run() method directly is valid, but it will not work as a thread instead it will work as a normal object. There will not be context-switching between the threads. When we call the start() method, it internally calls the run() method, which creates a new stack for a thread while directly calling the run() will not create a new stack. ","date":1633188482377,"level":2,"_id":"9m6pwRGeUcW2Tqb9"}
{"question":"How is garbage collection controlled?","answer":"Garbage collection is managed by JVM. It is performed when there is not enough space in the memory and memory is running low. We can externally call the System.gc() for the garbage collection. However, it depends upon the JVM whether to perform it or not.","date":1633447695888,"level":3,"_id":"9yHDQ76zSfugwzlr"}
{"question":"What are the different types of JDBC Driver?","answer":"JDBC-ODBC bridge driver, Native-API driver, Network Protocol driver, Thin driver","date":1633117986184,"level":1,"_id":"AB4TOIrCMqeky8HG"}
{"question":"JRE","answer":"JRE stands for Java Runtime Environment. It is the implementation of JVM. The Java Runtime Environment is a set of software tools which are used for developing Java applications. It is used to provide the runtime environment. It is the implementation of JVM. It physically exists. It contains a set of libraries + other files that JVM uses at runtime. ","date":1632890139227,"level":1,"_id":"ADjMrMht5nCfRKUe"}
{"question":"Differentiate between process and thread? ","answer":"     A Program in the execution is called the process whereas; A thread is a subset of the process     Processes are independent whereas threads are the subset of process.     Process have different address space in memory, while threads contain a shared address space.     Context switching is faster between the threads as compared to processes.     Inter-process communication is slower and expensive than inter-thread communication.     Any change in Parent process doesn't affect the child process whereas changes in parent thread can affect the child thread. ","date":1633117319986,"level":1,"_id":"ADzb5RBJctncPJZO"}
{"question":" Can I store a double value in a long variable without casting?","answer":"No, you cannot store a double value into a long variable without casting because the range of double is more than long and we need to type cast. It’s not difficult to answer this question but many developer get it wrong due to confusion on which one is bigger between double and long in Java. ","date":1633025001227,"level":1,"_id":"AZsyT7zbYVzYdRAT"}
{"question":"What are anonymous inner classes?","answer":"Anonymous inner classes are the classes that are automatically declared and instantiated within an expression. We cannot apply different access modifiers to them. Anonymous class cannot be static, and cannot define any static fields, method, or class. In other words, we can say that it a class without the name and can have only one object that is created by its definition. ","date":1633188611218,"level":2,"_id":"Az8Mqb5WypxQxQFD"}
{"question":"What is the deadlock?","answer":"Deadlock is a situation in which every thread is waiting for a resource which is held by some other waiting thread. In this situation, Neither of the thread executes nor it gets the chance to be executed. Instead, there exists a universal waiting state among all the threads. Deadlock is a very complicated situation which can break our code at runtime.","date":1633447827858,"level":3,"_id":"B4et7TqCc1n96cv9"}
{"question":"The instanceof operator","answer":"compares an object to a specified type. You can use it to test if an object is an instance of a class, an instance of a subclass, or an instance of a class that implements a particular interface. When using the instanceof operator, keep in mind that null is not an instance of anything.","date":1634743848716,"level":4,"_id":"BLoylZiDDlUpIGOg"}
{"question":"Can you make a constructor final?","answer":"no","date":1633447861014,"level":3,"_id":"Bc34ofukGNLhkC2e"}
{"question":"Can you use abstract and final both with a method?","answer":"No","date":1634743865392,"level":4,"_id":"C5rrD1fwsfx3lCFg"}
{"question":"Java Heap Space","answer":"Java Heap space is used by java runtime to allocate memory to Objects and JRE classes. Whenever we create any object, it’s always created in the Heap space.\nGarbage Collection runs on the heap memory to free the memory used by objects that doesn’t have any reference. Any object created in the heap space has global access and can be referenced from anywhere of the application.","date":1633117439302,"level":1,"_id":"CBwrYpyGr6IELrjg"}
{"question":"What is an extension of compiled java source code?","answer":".class","date":1634743868318,"level":4,"_id":"CHoLD3W4zNLytk4E"}
{"question":"What is the purpose of the finalize() method?","answer":"The finalize() method is invoked just before the object is garbage collected. It is used to perform cleanup processing. The Garbage collector of JVM collects only those objects that are created by new keyword. So if you have created an object without new, you can use the finalize method to perform cleanup processing (destroying remaining objects).  we must note that neither finalization nor garbage collection is guaranteed.","date":1633188720665,"level":2,"_id":"CKBVLywuN806m2OI"}
{"question":"Does each thread have its stack in multithreaded programming?  ","answer":"Yes, in multithreaded programming every thread maintains its own or separate stack area in memory due to which every thread is independent of each other.","date":1633447928355,"level":3,"_id":"CRzDnlBqYggZyzx0"}
{"question":"How to detect a deadlock condition? How can it be avoided?","answer":"We can detect the deadlock condition by running the code on cmd and collecting the Thread Dump, and if any deadlock is present in the code, then a message will appear on cmd.  Ways to avoid the deadlock condition in Java:      Avoid Nested lock: Nested lock is the common reason for deadlock as deadlock occurs when we provide locks to various threads so we should give one lock to only one thread at some particular time.     Avoid unnecessary locks: we must avoid the locks which are not required.     Using thread join: Thread join helps to wait for a thread until another thread doesn't finish its execution so we can avoid deadlock by maximum use of join method. ","date":1633117469511,"level":1,"_id":"Cpuxzm72rYaMlNKq"}
{"question":"interfaces used in Collection framework?","answer":"1. Collection interface, 2. List interface, 3. Set interface, 4. Queue interface, 5. Dequeue interface, 6. Map interface","date":1633118602700,"level":1,"_id":"CvkZcO9cmwLONyob"}
{"question":"What is the difference between HashSet and TreeSet?","answer":"The HashSet and TreeSet, both classes, implement Set interface. The differences between the both are listed below.\n    HashSet maintains no order whereas TreeSet maintains ascending order.\n    HashSet impended by hash table whereas TreeSet implemented by a Tree structure.\n    HashSet performs faster than TreeSet.\n    HashSet is backed by HashMap whereas TreeSet is backed by TreeMap.","date":1633026556562,"level":1,"_id":"D4gDiKe6Q0anthoM"}
{"question":"What are the main differences between array and collection?","answer":"    Arrays are always of fixed size, i.e., a user can not increase or decrease the length of the array according to their requirement or at runtime, but In Collection, size can be changed dynamically as per need.\n    Arrays can only store homogeneous or similar type objects, but in Collection, heterogeneous objects can be stored.\n    Arrays cannot provide the ?ready-made? methods for user requirements as sorting, searching, etc. but Collection includes readymade methods to use.","date":1633118293463,"level":1,"_id":"DcsTYG2m14471pfB"}
{"question":"What is the final blank variable?","answer":"A final variable, not initialized at the time of declaration, is known as the final blank variable. We can't initialize the final blank variable directly. Instead, we have to initialize it by using the class constructor.","date":1634743991764,"level":4,"_id":"Dh1diizXmlyHMmbs"}
{"question":"Can we access the non-final local variable, inside the local inner class? ","answer":"No, the local variable must be constant if you want to access it in the local inner class.","date":1633448009854,"level":3,"_id":"EIxmnjQaZfThMo2S"}
{"question":"Types of inheritance in Java","answer":"Single-level inheritance; Multi-level inheritance; Multiple Inheritance; Hierarchical Inheritance; Hybrid Inheritance","date":1633448020783,"level":3,"_id":"ElKUdqv0jway8aq7"}
{"question":"Is it possible to instantiate the abstract class?","answer":"No","date":1634744023725,"level":4,"_id":"ElhnSfrrPpnwKACR"}
{"question":"Can you access non static variable in static context?","answer":"No, non-static variable cannot be referenced in a static context directly one needs to use object.","date":1633025001233,"level":1,"_id":"En0m9JUgZrweMN1j"}
{"question":"What is the difference between Collection and Collections?","answer":"    The Collection is an interface whereas Collections is a class.\n    The Collection interface provides the standard functionality of data structure to List, Set, and Queue. However, Collections class is to sort and synchronize the collection elements.\n    The Collection interface provides the methods that can be used for data structure whereas Collections class provides the static methods which can be used for various operation on a collection.","date":1633118332051,"level":1,"_id":"Enc9JMavtdxvqFGi"}
{"question":"Can we have multiple public classes in a java source file?","answer":"A Java source file can have only one class declared as public, we cannot put two or more public classes together in a .java file. This is because of the restriction that the file name should be same as the name of the public class with .java extension.","date":1633025001233,"level":1,"_id":"EvK8XaXIigAwb5Ps"}
{"question":"What do you understand by an IO stream?","answer":"The stream is a sequence of data that flows from source to destination. It is composed of bytes. In Java, three streams are created for us automatically.      System.out: standard output stream     System.in: standard input stream     System.err: standard error stream ","date":1633448043863,"level":3,"_id":"F8bL0qvyWcEFueK3"}
{"question":"Why CharArray() is preferred over String to store the password?","answer":"String stays in the string pool until the garbage is collected. If we store the password into a string, it stays in the memory for a longer period, and anyone having the memory-dump can extract the password as clear text. On the other hand, Using CharArray allows us to set it to blank whenever we are done with the password. It avoids the security threat with the string by enabling us to control the memory. ","date":1633448059313,"level":3,"_id":"FCg9JKa3ts3iAgil"}
{"question":"JDK","answer":"JDK is an acronym for Java Development Kit. It is a software development environment which is used to develop Java applications and applets. It physically exists. It contains JRE + development tools.","date":1633448075230,"level":3,"_id":"FTyv3OkWN4I0mxLu"}
{"question":"String ","answer":"immutable class; the String is slow and consumes more memory when you concat too many strings because every time it creates a new instance; it overrides the equals method of Object class","date":1633448088744,"level":3,"_id":"FZvovoxq0Fp8S9xe"}
{"question":"What is the difference between compile-time polymorphism and runtime polymorphism?","answer":"Static Polymorphism (compile-time polymorphism) → method overloading; Dynamic Polymorphism (runtime) – method overriding","date":1633026722163,"level":1,"_id":"FgZ04dgT1bkcYbN7"}
{"question":"What is the difference between Iterator and ListIterator?","answer":"Iterator traverses the elements in the forward direction only whereas ListIterator traverses the elements into forward and backward direction. The Iterator can be used in List, Set, and Queue. ListIterator can be used in List only. The Iterator can only perform remove operation while traversing the collection. ListIterator can perform add, remove, and set operation while traversing the collection.","date":1633026739396,"level":1,"_id":"Fk5GJIfAJFKHf9iw"}
{"question":" How Garbage collector algorithm works?","answer":"Garbage collection works on Mark and Sweep algorithm. In Mark phase it detects all the unreachable objects and Sweep phase it reclaim the heap space used by the garbage objects and make the space available again to the program.","date":1633026750435,"level":1,"_id":"Fp5mNVNEAVPE3ydu"}
{"question":"How many ways can we create the string object?","answer":"1) String Literal – using double quotes (String s = ”welcome”) – stored in string constant pool; 2) By new keyword (String s = new String(”welcome”)) – JVM will create a new string object in normal (non-pool) heap memory and the literal „welcome” will be placed in the constant string pool, the variable s will refer to the object in heap (non-pool).","date":1633448116402,"level":3,"_id":"G2V6TjXehRzlFqmr"}
{"question":"How can you make a class serializable in Java?","answer":"A class can become serializable by implementing the Serializable interface.","date":1633448222092,"level":3,"_id":"GCWOEG36a13ni0Bn"}
{"question":"What’s the difference between deep copy and shallow copy?","answer":"Shallow copy in java copies all values and attributes of an object to another object and both objects reference the same memory locations.\n\nDeep copy is the creation of an object with the same values and attributes of the object being copied but both objects reference different memory locations. ","date":1633026761868,"level":1,"_id":"GKu6rzJ1hrJHSZ0Q"}
{"question":"expressions","answer":"compute values, expressions are core components of statements.","date":1634744226343,"level":4,"_id":"GO3h7lTB9VAaX2jj"}
{"question":"What is Java String Pool?","answer":"String Pool in java is a pool of Strings stored in Java Heap Memory. String pool helps in saving a lot of space for Java Runtime although it takes more time to create the String. When we use double quotes to create a String, it first looks for String with the same value in the String pool, if found it just returns the reference else it creates a new String in the pool and then returns the reference. However using new operator, we force String class to create a new String object in heap space.","date":1633026801014,"level":1,"_id":"GgSAzHXatZuLRpK6"}
{"question":"What is a singleton class? ","answer":"Singleton class is the class which can not be instantiated more than once. To make a class singleton, we either make its constructor private or use the static getInstance method. ","date":1633448242714,"level":3,"_id":"Gp1w4XmeyYqM2mvA"}
{"question":"What is a native method? ","answer":"A native method is a method that is implemented in a language other than Java. Natives methods are sometimes also referred to as foreign methods.","date":1633448247610,"level":3,"_id":"HEhP109iGW7OtEc9"}
{"question":"What are the advantages of multithreading?","answer":"Multithreading programming has the following advantages:      Multithreading allows an application/program to be always reactive for input, even already running with some background tasks     Multithreading allows the faster execution of tasks, as threads execute independently.     Multithreading provides better utilization of cache memory as threads share the common memory resources.     Multithreading reduces the number of the required server as one server can execute multiple threads at a time. ","date":1633118707930,"level":1,"_id":"HFMAbGyg5fmzTOkb"}
{"question":"What Are the Functions of JVM and JRE?","answer":"JVM provides a runtime environment for Java Byte Codes to be executed. JRE includes sets of files required by JVM during runtime.","date":1633118478984,"level":1,"_id":"HZawe1Iuieg06VtJ"}
{"question":"What does JDBC setMaxRows method do?","answer":"The setMaxRows(int i) method limits the number of rows the database can return by using the query. This can also be done within the query as we can use the limit cause in MySQL.\n","date":1633118486871,"level":1,"_id":"HaxTLG4fQvRyl8yP"}
{"question":"Can you have virtual functions in Java?","answer":"In Java, all non-static methods are by default virtual functions. Only methods marked with the keyword final, which cannot be overridden, along with private methods, which are not inherited, are non-virtual.","date":1633026859569,"level":1,"_id":"I1gGVjzBcXh8LNMY"}
{"question":"What is JDBC?","answer":"JDBC is a Java API that is used to connect and execute the query to the database. JDBC API uses JDBC drivers to connect to the database. JDBC API can be used to access tabular data stored into any relational database.","date":1633026871746,"level":1,"_id":"IV0ilGK6dgkVSJcP"}
{"question":"When should we interrupt a thread?","answer":"We should interrupt a thread when we want to break out the sleep or wait state of a thread. We can interrupt a thread by calling the interrupt() throwing the InterruptedException.","date":1633189146460,"level":2,"_id":"J3UT5sQZs0qERm1n"}
{"question":"What will be the initial value of an object reference which is defined as an instance variable? ","answer":"null","date":1634744364110,"level":4,"_id":"JET9Iz5bH0wJ34n6"}
{"question":"What is Thread Scheduler in java?","answer":"In Java, when we create the threads, they are supervised with the help of a Thread Scheduler, which is the part of JVM. Thread scheduler is only responsible for deciding which thread should be executed. Thread scheduler uses two mechanisms for scheduling the threads: Preemptive and Time Slicing. Java thread scheduler also works for deciding the following for a thread:      It selects the priority of the thread.     It determines the waiting time for a thread     It checks the Nature of thread ","date":1633448385188,"level":3,"_id":"Jx0PfRooZI8roRVk"}
{"question":"What is a nested class? ","answer":"The nested class can be defined as the class which is defined inside another class or interface.  There are two types of nested classes, static nested class, and non-static nested class. The non-static nested class can also be called as inner-class","date":1633189195022,"level":2,"_id":"K5PKvu89wvAs5sOo"}
{"question":"What is the difference between static binding and dynamic binding?","answer":"In case of the static binding, the type of the object is determined at compile-time whereas, in the dynamic binding, the type of the object is determined at runtime.","date":1634744403059,"level":4,"_id":"KAJl2lpOLpWdZcyG"}
{"question":"What is the difference between abstraction and encapsulation?","answer":"Abstraction hides the implementation details whereas encapsulation wraps code and data into a single unit.","date":1633189219007,"level":2,"_id":"KLnIMkMConUaSMjZ"}
{"question":"What is the Collection framework in Java?","answer":"Collection Framework is a combination of classes and interface, which is used to store and manipulate the data in the form of objects. It provides various classes such as ArrayList, Vector, Stack, and HashSet, etc. and interfaces such as List, Queue, Set, etc. for this purpose.","date":1633118758783,"level":1,"_id":"KRVtCRuEOkA3oE5v"}
{"question":"How will you invoke any external process in Java?","answer":"We can invoke the external process in Java using exec() method of Runtime Class.","date":1633026885032,"level":1,"_id":"KRyv3W2ePYozPaJ8"}
{"question":"What is the transient keyword?","answer":"If you define any data member as transient, it will not be serialized. By determining transient keyword, the value of variable need not persist when it is restored. ","date":1633448424791,"level":3,"_id":"KkNAbkvwIW4wNkj3"}
{"question":"What is the purpose of using BufferedInputStream and BufferedOutputStream classes?","answer":"Java BufferedOutputStream class is used for buffering an output stream. It internally uses a buffer to store data. It adds more efficiency than to write data directly into a stream. So, it makes the performance fast. Whereas, Java BufferedInputStream class is used to read information from the stream. It internally uses the buffer mechanism to make the performance fast.","date":1633448453994,"level":2,"_id":"LEtbF9SsYjopFsZZ"}
{"question":"What is Exception Handling?","answer":"Exception Handling is a mechanism that is used to handle runtime errors. It is used primarily to handle checked exceptions. Exception handling maintains the normal flow of the program. ","date":1633448533828,"level":3,"_id":"LNrEG4AVkRmE8ox7"}
{"question":" How to synchronize ArrayList?","answer":"We can synchronize ArrayList in two ways.\n    Using Collections.synchronizedList() method\n    Using CopyOnWriteArrayList<T>\n","date":1633118795160,"level":1,"_id":"LOQYLtJy6z8HzkaF"}
{"question":"What is the difference between preemptive scheduling and time slicing? ","answer":"Under preemptive scheduling, the highest priority task executes until it enters the waiting or dead states or a higher priority task comes into existence. Under time slicing, a task executes for a predefined slice of time and then reenters the pool of ready tasks. The scheduler then determines which task should execute next, based on priority and other factors.","date":1633448549019,"level":3,"_id":"LSXhKrtaxm7ifXkL"}
{"question":"What are the steps to connect to the database in java?","answer":"Registering the driver class;  Creating connection; Creating the statement;  Executing the queries; Closing connection","date":1632860184721,"level":0,"_id":"LhIRgpPGmceizEKK"}
{"question":"What is the difference between aggregation and composition? ","answer":"Aggregation represents the weak relationship whereas composition represents the strong relationship. For example, the bike has an indicator (aggregation), but the bike has an engine (composition).","date":1633448573389,"level":3,"_id":"Lof7xZfUIaz52nT7"}
{"question":"which kind of relationship inheritance represents?","answer":"Inheritance represents the IS-A relationship which is also known as a parent-child relationship. ","date":1634744579365,"level":4,"_id":"LwIryl8LkjQNLlmf"}
{"question":"Can an unreferenced object be referenced again?","answer":"yes","date":1633448583277,"level":3,"_id":"MBHHwsr7SbtJwm3P"}
{"question":"What is api in java? ","answer":"Java application programming interface (API) is a list of all classes that are part of the Java development kit (JDK). It includes all Java packages, classes, and interfaces, along with their methods, fields, and constructors. These pre-written classes provide a tremendous amount of functionality to a programmer. ","date":1633118826022,"level":1,"_id":"MF01NJ6tb6HpgVsR"}
{"question":"What is the base class for Error and Exception? ","answer":"The Throwable class","date":1633448586561,"level":3,"_id":"MGQXKT36QSPQvLG7"}
{"question":" What is the default size of load factor in hashing based collection?","answer":"The default size of load factor is 0.75. The default capacity is computed as initial capacity * load factor. ","date":1633025001219,"level":1,"_id":"MPTlpZVEzKPUX2uq"}
{"question":"What are wrapper classes? ","answer":"Wrapper classes are classes that allow primitive types to be accessed as objects. In other words, we can say that wrapper classes are built-in java classes which allow the conversion of objects to primitives and primitives to objects. The process of converting primitives to objects is called autoboxing, and the process of converting objects to primitives is called unboxing. ","date":1633189412220,"level":2,"_id":"Mn6q3xKaMDTP0t29"}
{"question":"What is the major difference between java.util.Date and java.sql.Date data type?","answer":"The major difference between java.util.Date and java.sql.Date is that, java.sql.Date represents date without time information whereas, java.util.Date represents both date and time information.","date":1633118852270,"level":1,"_id":"Mq4l9ut3O46voWUY"}
{"question":"Instance Variables ","answer":"Non-Static Fields","date":1634744614540,"level":4,"_id":"N11LlW8pRO87RzQc"}
{"question":"How do static blocks get executed if there are multiple static blocks?","answer":"Multiple static blocks are executed in the sequence in which they are written in a top-down manner. The top block gets executed first, then the subsequent blocks are executed. ","date":1633025001228,"level":1,"_id":"NkkdIbkKFEjflbGg"}
{"question":"What is servlet in java?","answer":"A servlet is a Java programming language class that is used to extend the capabilities of servers that host applications accessed by means of a request-response programming model. Although servlets can respond to any type of request, they are commonly used to extend the applications hosted by web servers. For such applications, Java Servlet technology defines HTTP-specific servlet classes.","date":1632860216673,"level":0,"_id":"NnZJKP6okphNI0IN"}
{"question":"Aggregation","answer":"Aggregation can be defined as the relationship between two classes where the aggregate class contains a reference to the class it owns. Aggregation is best described as a has-a relationship. For example, The aggregate class Employee having various fields such as age, name, and salary also contains an object of Address class having various fields such as Address-Line 1, City, State, and pin-code. In other words, we can say that Employee (class) has an object of Address class.","date":1633189424629,"level":2,"_id":"NzlPyHdnhj0x9MiB"}
{"question":"What is difference between Heap and Stack Memory in java?","answer":"Stack is used in parts, one at a time during execution of a thread while the entire application uses Heap space during runtime; Stack stores only primitive variables and refenreces to objects that are created in Heap Space; all the newly created objects are stored in the Heap Space","date":1632859695146,"level":0,"_id":"ODD1Ikk4esrNgspL"}
{"question":"Can a class have an interface? ","answer":"Yes, an interface can be defined within the class. It is called a nested interface.","date":1633448643433,"level":3,"_id":"OTVwhSfh2DNEYXwv"}
{"question":"What are different scenarios causing \"Exception in thread main\"?","answer":"java.lang.UnsupportedClassVersionError, java.lang.NoClassDefFoundError, java.lang.NoSuchMethodError, java.lang.ArithmeticException","date":1632859705288,"level":0,"_id":"PhW9uKgk2KUyJ8Lz"}
{"question":"Why we override equals() method?","answer":"The equals method is used to check whether two objects are the same or not. It needs to be overridden if we want to check the objects based on the property.","date":1633025001219,"level":1,"_id":"PwFoMbsnOxUyCJ8U"}
{"question":"What kind of thread is the Garbage collector thread? ","answer":"Daemon thread.","date":1633448652375,"level":3,"_id":"QFoTKrMsRfV6nNq6"}
{"question":"What is the difference between ScheduledExecutorService and ExecutorService interface?","answer":"ExecutorServcie and ScheduledExecutorService both are the interfaces of java.util.Concurrent package but scheduledExecutorService provides some additional methods to execute the Runnable and Callable tasks with the delay or every fixed time period.","date":1632859729217,"level":0,"_id":"QI3STkUbGoK9svzI"}
{"question":"Can we modify the throws clause of the superclass method while overriding it in the subclass?","answer":"Yes, we can modify the throws clause of the superclass method while overriding it in the subclass. However, there are some rules which are to be followed while overriding in case of exception handling. 1. If the superclass method does not declare an exception, subclass overridden method cannot declare the checked exception, but it can declare the unchecked exception. 2. If the superclass method declares an exception, subclass overridden method can declare same, subclass exception or no exception but cannot declare parent exception.","date":1632631342366,"level":0,"_id":"ROSyCY4Vm6Pr8IN4"}
{"question":" What is spring in java? ","answer":"The Spring Framework is an application framework and inversion of control container for the Java platform. The framework’s core features can be used by any Java application, but there are extensions for building web applications on top of the Java EE (Enterprise Edition) platform.","date":1632765801227,"level":0,"_id":"S7hBQPpE3jy6gMh3"}
{"question":"What is exception propagation?","answer":"An exception is first thrown from the top of the stack and if it is not caught, it drops down the call stack to the previous method, If not caught there, the exception again drops down to the previous method, and so on until they are caught or until they reach the very bottom of the call stack. This procedure is called exception propagation. By default, checked exceptions are not propagated.","date":1633448687118,"level":3,"_id":"SIEdqaW7aOuIdPOF"}
{"question":"What is multithreading?","answer":" Multithreading is a process of executing multiple threads simultaneously. Multithreading is used to obtain the multitasking. It consumes less memory and gives the fast and efficient performance. Its main advantages are:      Threads share the same address space.     The thread is lightweight.     The cost of communication between the processes is low. ","date":1633189514120,"level":2,"_id":"SJftPMfTEsKiXxlN"}
{"question":"What is stream in java?","answer":"A Stream in Java can be defined as a sequence of elements from a source. Streams supports aggregate operations on the elements. The source of elements here refers to a Collection or Array that provides data to the Stream. Stream keeps the ordering of the elements the same as the ordering in the source. The aggregate operations are operations that allow us to express common manipulations on stream elements quickly and clearly. ","date":1632765801229,"level":0,"_id":"Sdi65gqtthEiwl1X"}
{"question":"What are the states in the lifecycle of a Thread?","answer":"A thread can have one of the following states during its lifetime:      New: In this state, a Thread class object is created using a new operator, but the thread is not alive. Thread doesn't start until we call the start() method.     Runnable: In this state, the thread is ready to run after calling the start() method. However, the thread is not yet selected by the thread scheduler.     Running: In this state, the thread scheduler picks the thread from the ready state, and the thread is running.     Waiting/Blocked: In this state, a thread is not running but still alive, or it is waiting for the other thread to finish.     Dead/Terminated: A thread is in terminated or dead state when the run() method exits. ","date":1632843943515,"level":1,"_id":"Swi2deEfTHI9yr2u"}
{"question":"Is it possible to start a thread twice?","answer":"No, we cannot restart the thread, as once a thread started and executed, it goes to the Dead state. Therefore, if we try to start a thread twice, it will give a runtimeException \"java.lang.IllegalThreadStateException\"","date":1633448750741,"level":3,"_id":"T0byhHLygoyfW0Qu"}
{"question":"What is the Atomic action in Concurrency in Java?","answer":"     The Atomic action is the operation which can be performed in a single unit of a task without any interference of the other operations.     The Atomic action cannot be stopped in between the task. Once started it fill stop after the completion of the task only.     An increment operation such as a++ does not allow an atomic action.     All reads and writes operation for the primitive variable (except long and double) are the atomic operation.     All reads and writes operation for the volatile variable (including long and double) are the atomic operation.     The Atomic methods are available in java.util.Concurrent package.","date":1633189582814,"level":2,"_id":"T2bpSnIkFmeZzZTj"}
{"question":"What is the purpose of the Runtime class and System class?","answer":"Runtime Class: The purpose of the Runtime class is to provide access to the Java runtime system. The runtime information like memory availability, invoking the garbage collector, etc. System Class: The purpose of the System class is to provide access to system resources. It contains accessibility to standard input, standart output, error output streams, current time in millis, terminating the application, etc.","date":1632765801233,"level":0,"_id":"TIwObolPwlhyrpvI"}
{"question":"Why is Java Robust? ","answer":"– Lack of pointers: Java does not have pointers which make it secure\n– Garbage Collection: Java automatically clears out unused objects from memory which are unused\n– Java has strong memory management.\n– Java supports dynamic linking.","date":1632765801226,"level":0,"_id":"TN91xRPiDmWCVVJj"}
{"question":"What is the difference between HashMap and Hashtable?","answer":"HashMap is not synchronized. Hashtable is synchronized. HashMap can contain one null key and multiple null values. Hashtable cannot contain any null key or null value. HashMap is not thread-safe, so it is useful for non-threaded applications. Hashtable is thread-safe, and it can be shared between various threads.","date":1632765801218,"level":0,"_id":"TXMbUR01eQl5A7wF"}
{"question":"Can you use this() and super() both in a constructor?","answer":"No, because this() and super() must be the first statement in the class constructor.","date":1634744785337,"level":4,"_id":"TfCvSsX2PkL792jr"}
{"question":"What is a Memory Leak? How can a memory leak appear in garbage collected language?","answer":"The standard definition of a memory leak is a scenario that occurs when objects are no longer being used by the application, but the Garbage Collector is unable to remove them from working memory – because they’re still being referenced. As a result, the application consumes more and more resources – which eventually leads to a fatal OutOfMemoryError.","date":1632765801234,"level":0,"_id":"U1uyJoFncTS1sRVr"}
{"question":"What are the benefits of PreparedStatement over Statement?","answer":"\n    The PreparedStatement performs faster as compare to Statement because the Statement needs to be compiled everytime we run the code whereas the PreparedStatement compiled once and then execute only on runtime.\n    PreparedStatement can execute Parameterized query whereas Statement can only run static queries.\n    The query used in PreparedStatement is appeared to be similar every time. Therefore, the database can reuse the previous access plan whereas, Statement inline the parameters into the String, therefore, the query doesn't appear to be same everytime which prevents cache reusage.\n","date":1632765801222,"level":0,"_id":"UTnrmYMXcREFX3tK"}
{"question":"How many types of memory areas are allocated by JVM?","answer":"6; Classloader, Class (Method) Area; Heap, Stack, Program Counter Register, Native Method Stack","date":1632765801232,"level":0,"_id":"Ue0ytWgKbt6zrb6k"}
{"question":"What is functional interface in java?","answer":"A functional interface in Java is an interface that contains only a single abstract (unimplemented) method. A functional interface can contain default and static methods which do have an implementation, in addition to the single unimplemented method.","date":1632765801226,"level":0,"_id":"V7z6HHbnxR51SQ5p"}
{"question":"Composition – 2","answer":"We use the term composition to refer to relationships whose objects don’t have an independent lifecycle, and if the parent object is deleted, all child objects will also be deleted.\nExample: Since Engine is-part-of Car, the relationship between them is Composition. ","date":1632765801229,"level":0,"_id":"VSoT4m7H2tuFUI5a"}
{"question":"What is object cloning?","answer":"The object cloning is used to create the exact copy of an object. The clone() method of the Object class is used to clone an object. The java.lang.Cloneable interface must be implemented by the class whose object clone we want to create. If we don't implement Cloneable interface, clone() method generates CloneNotSupportedException.","date":1633448832210,"level":3,"_id":"VZBorLFfJ8KtcLta"}
{"question":"How many types of exception can occur in a Java program?","answer":"3; Checked Exception: Checked exceptions are the one which are checked at compile-time. For example, SQLException, ClassNotFoundException, etc.;  Unchecked Exception: Unchecked exceptions are the one which are handled at runtime because they can not be checked at compile-time. For example, ArithmaticException, NullPointerException, ArrayIndexOutOfBoundsException, etc.,  Error: Error cause the program to exit since they are not recoverable. For Example, OutOfMemoryError, AssertionError, etc.","date":1633189644197,"level":2,"_id":"VkduhGInqHw9LuSm"}
{"question":"Is there any case when finally will not be executed?","answer":"Finally block will not be executed if program exits(either by calling System.exit() or by causing a fatal error that causes the process to abort). ","date":1633448850260,"level":3,"_id":"WAs9Ah0BaCAGX183"}
{"question":"What is gc()?","answer":"The gc() method is used to invoke the garbage collector for cleanup processing. This method is found in System and Runtime classes. This function explicitly makes the Java Virtual Machine free up the space occupied by the unused objects so that it can be utilized or reused. ","date":1633448859997,"level":3,"_id":"WKtBcpEC7PLPnfb2"}
{"question":"Why String is popular HashMap key in Java?","answer":"Since String is immutable, its hashcode is cached at the time of creation and it doesn’t need to be calculated again. This makes it a great candidate for key in a Map and its processing is fast than other HashMap key objects. This is why String is mostly used Object as HashMap keys.","date":1632765801234,"level":0,"_id":"WSxTe35sNxMKcSRp"}
{"question":"What if the static modifier is removed from the signature of the main method?","answer":"Program compiles. However, at runtime, It throws an error \"NoSuchMethodError.\"","date":1632844067152,"level":1,"_id":"X8G6st7Vk0312NHN"}
{"question":"In Java, How many ways you can take input from the console?","answer":"Using BufferedReader class; Using Scanner class; Using Console class","date":1632844073464,"level":1,"_id":"XN7HJnJdG5o5XfzL"}
{"question":"Aggregation – 2","answer":"We call aggregation those relationships whose objects have an independent lifecycle, but there is ownership, and child objects cannot belong to another parent object. \nExample: Since Organization has Person as employees, the relationship between them is Aggregation.","date":1632765801229,"level":0,"_id":"XP8OoUnYe4SMIVpv"}
{"question":"What is race-condition?","answer":"A Race condition is a problem which occurs in the multithreaded programming when various threads execute simultaneously accessing a shared resource at the same time. The proper use of synchronization can avoid the Race condition.","date":1633189685517,"level":2,"_id":"XPmp0onn7xyJhgM6"}
{"question":"Data encapsulation","answer":"Hiding internal data from the outside world, and accessing it only through publicly exposed methods","date":1633189690947,"level":2,"_id":"Y2wx7njaLnGoxlvs"}
{"question":"Serial Garbage Collector","answer":"Serial garbage collector works by holding all the application threads. It is designed for the single-threaded environments. It uses just a single thread for garbage collection. The way it works by freezing all the application threads while doing garbage collection may not be suitable for a server environment. It is best suited for simple command-line programs.  Turn on the -XX:+UseSerialGC JVM argument to use the serial garbage collector.","date":1632765801235,"level":0,"_id":"YPwL5dRBo8kqde0e"}
{"question":"What is a compile time constant in Java? What is the risk of using it?","answer":"If a primitive type or a string is defined as a constant and the value is known at compile time, the compiler replaces the constant name everywhere in the code with its value. This is called a compile-time constant. They are replaced with actual values at compile time because compiler know their value up-front and also knows that it cannot be changed during run-time.","date":1632765801236,"level":0,"_id":"YpPwtxW3DEinFm4O"}
{"question":"How can we achieve synchronization?","answer":"     by the synchronized method     by synchronized block     by static synchronization ","date":1632631561317,"level":0,"_id":"ZIaTr2tk0d2Pgmya"}
{"question":"Classloader","answer":"Classloader is a subsystem of JVM which is used to load class files. Whenever we run the java program, it is loaded first by the classloader. There are three built-in classloaders in Java: Bootstrap ClassLoader, Extension ClassLoader, System/Application ClassLoader","date":1632844103400,"level":1,"_id":"ZLCAYJ9DxHkciGuB"}
{"question":"Can we define private and protected modifiers for the members in interfaces?","answer":"No, they are implicitly public.","date":1633448905380,"level":3,"_id":"ZMFFBYck9M7wlFzZ"}
{"question":"Composition","answer":"Holding the reference of a class within some other class is known as composition. When an object contains the other object, if the contained object cannot exist without the existence of container object, then it is called composition. In other words, we can say that composition is the particular case of aggregation which represents a stronger relationship between two objects. Example: A class contains students. A student cannot exist without a class. There exists composition between class and students. ","date":1632844106010,"level":1,"_id":"ZickbJCYIsIuuaF5"}
{"question":"What is serialization?","answer":"Serialization in Java is a mechanism of writing the state of an object into a byte stream. It is used primarily in Hibernate, RMI, JPA, EJB and JMS technologies. It is mainly used to travel object's state on the network (which is known as marshaling). Serializable interface is used to perform serialization. It is helpful when you require to save the state of a program to storage such as the file. At a later point of time, the content of this file can be restored using deserialization. It is also required to implement RMI(Remote Method Invocation). With the help of RMI, it is possible to invoke the method of a Java object on one machine to another machine.","date":1632844106554,"level":1,"_id":"aLZHKwxnjrCTGZI6"}
{"question":"StringBuilder","answer":"StringBuilder is non-synchronized – two threads can call the methods of StringBuilder simultaneously; StringBuilder is more efficient than StringBuffer","date":1632844106952,"level":1,"_id":"aalkYbCZYdWysgGx"}
{"question":"Final keyword for variable, method and class","answer":"Stops value change, stops method overridding, stops inheritance","date":1633448908007,"level":3,"_id":"au9fhgUWkzrbdOxm"}
{"question":"Java Callable interface","answer":"In Java5 callable interface was provided by the package java.util.concurrent. It is similar to the Runnable interface but it can return a result, and it can throw an Exception. It also provides a run() method for execution of a thread. Java Callable can return any object as it uses Generic.","date":1632765801213,"level":0,"_id":"ay3Na8kFtOrtvYa0"}
{"question":"Differentiate between the Thread class and Runnable interface for creating a Thread?","answer":"The Thread can be created by using two ways.      By extending the Thread class     By implementing the Runnable interface  However, the primary differences between both the ways are given below:      By extending the Thread class, we cannot extend any other class, as Java does not allow multiple inheritances while implementing the Runnable interface; we can also extend other base class(if required).     By extending the Thread class, each of thread creates the unique object and associates with it while implementing the Runnable interface; multiple threads share the same object     Thread class provides various inbuilt methods such as getPriority(), isAlive and many more while the Runnable interface provides a single method, i.e., run(). ","date":1632631733530,"level":0,"_id":"b30AYbu7Qy3SlAJm"}
{"question":"What is BlockingQueue?","answer":"The java.util.concurrent.BlockingQueue is the subinterface of Queue that supports the operations such as waiting for the space availability before inserting a new value or waiting for the queue to become non-empty before retrieving an element from it.","date":1632844108619,"level":1,"_id":"bZKcuHsCpURIv8ns"}
{"question":"Can you access the private method from outside the class?","answer":"Yes, by changing the runtime behavior of a class if the class is not secured.","date":1632844108789,"level":1,"_id":"c37ow4NO8PNeH2Xo"}
{"question":"What is the purpose of using javap?","answer":"The javap command disassembles a class file. The javap command displays information about the fields, constructors and methods present in a class file.","date":1632844108959,"level":1,"_id":"cZEXwtrnj9c3IW3c"}
{"question":"Can there be an abstract method without an abstract class?","answer":"Yes. because methods in an interface are also abstract. so the interface can be use to declare abstract method.","date":1632765801232,"level":0,"_id":"d5Ylj8oqp4fm237k"}
{"question":"What is the purpose of the System class? ","answer":"The purpose of the System class is to provide access to system resources such as standard input and output. It cannot be instantiated. Facilities provided by System class are given below.      Standard input     Error output streams     Standard output     utility method to copy the portion of an array     utilities to load files and libraries  There are the three fields of Java System class, i.e., static printstream err, static inputstream in, and standard output stream.","date":1632631884099,"level":0,"_id":"dOtY5GDigr4nQSGT"}
{"question":"The difference between checked and unchecked exception in Java?","answer":"A checked exception is checked by the compiler at compile time. It’s mandatory for a method to either handle the checked exception or declare them in their throws clause. These are the ones which are a subclass of Exception but doesn’t descend from RuntimeException. The unchecked exception is the descendant of RuntimeException and not checked by the compiler at compile time. ","date":1632765801228,"level":0,"_id":"dZK6zDVzzrmFTBae"}
{"question":"What is Externalizable?","answer":"The Externalizable interface is used to write the state of an object into a byte stream in a compressed format. It is not a marker interface.","date":1632844109291,"level":1,"_id":"dmpQOi1ZtE40BzBJ"}
{"question":"What do you understand by inter-thread communication?","answer":"     The process of communication between synchronized threads is termed as inter-thread communication.     Inter-thread communication is used to avoid thread polling in Java.     The thread is paused running in its critical section, and another thread is allowed to enter (or lock) in the same critical section to be executed.     It can be obtained by wait(), notify(), and notifyAll() methods. ","date":1632844109465,"level":1,"_id":"eRoNwY9FN8LiVWjH"}
{"question":"What does join() method?","answer":"the join() method waits for a thread to die. In other words, it causes the currently running threads to stop executing until the thread it joins with completes its task. Join method is overloaded in Thread class in the following ways.      public void join()throws InterruptedException     public void join(long milliseconds)throws InterruptedException ","date":1632844109631,"level":1,"_id":"eeVHjOmjOCK3oVkb"}
{"question":"What do you understand by thread pool?","answer":"     Java Thread pool represents a group of worker threads, which are waiting for the task to be allocated.     Threads in the thread pool are supervised by the service provider which pulls one thread from the pool and assign a job to it.     After completion of the given task, thread again came to the thread pool.     The size of the thread pool depends on the total number of threads kept at reserve for execution.  The advantages of the thread pool are :      Using a thread pool, performance can be enhanced.     Using a thread pool, better system stability can occur. ","date":1632844109797,"level":1,"_id":"ephZrQ77ULtiTN0a"}
{"question":"Where GC is working?","answer":"Heap Space","date":1632765801230,"level":0,"_id":"fJNtrR1aUiYjkvvf"}
{"question":"What is marker interface in java?","answer":"An empty interface in Java is known as a marker interface i.e. it does not contain any methods or fields by implementing these interfaces a class will exhibit a special behaviour with respect to the interface implemented. ","date":1632765801229,"level":0,"_id":"fJVkp2EFQife2D43"}
{"question":"What is Socket? ","answer":"A socket is simply an endpoint for communications between the machines. It provides the connection mechanism to connect the two computers using TCP. The Socket class can be used to create a socket.","date":1632632049152,"level":0,"_id":"frmYW3UOWSQxzEnz"}
{"question":"Where is stored Java Compiler?","answer":"JDK","date":1632765801231,"level":0,"_id":"fwJUfSX7uZ3zKlcX"}
{"question":"What is difference between the Inner Class and Sub Class?","answer":"Nested Inner class can access any private instance variable of outer class. Like any other instance variable, we can have access modifier private, protected, public and default modifier. A subclass is class which inherits a method or methods from a superclass.","date":1632765801231,"level":0,"_id":"fxHn2NW6ksiYfX6e"}
{"question":"Methods overloading","answer":"ava can distinguish between methods with different method signatures. This means that methods within a class can have the same name if they have different parameter lists.","date":1633448910154,"level":3,"_id":"gASJINWkkbD4zG8o"}
{"question":"Stub","answer":"The stub is an object, acts as a gateway for the client side. All the outgoing requests are routed through it. It resides at the client side and represents the remote object. When the caller invokes the method on the stub object, it does the following tasks:      It initiates a connection with remote Virtual Machine (JVM).     It writes and transmits (marshals) the parameters to the remote Virtual Machine (JVM).     It waits for the result.     It reads (unmarshals) the return value or exception.     It finally, returns the value to the caller. ","date":1632632081799,"level":0,"_id":"gGcNwsAQbRK98VPe"}
{"question":"Why are the objects immutable in java?","answer":"Because Java uses the concept of the string literal. Suppose there are five reference variables, all refer to one object \"sachin\". If one reference variable changes the value of the object, it will be affected by all the reference variables.","date":1632844110719,"level":1,"_id":"giQx2KVdB7ZPKVEI"}
{"question":"6 bitwise operators","answer":"&, ^, |, ~, <<, >>","date":1632844110897,"level":1,"_id":"gz7ff7vROj440sQh"}
{"question":"How can you avoid serialization in child class if the base class is implementing the Serializable interface?","answer":"If superClass has implemented Serializable that means subclass is also Serializable (as subclass always inherits all features from its parent class), for avoiding Serialization in sub-class we can define writeObject() method and throw NotSerializableException() from there as done below.","date":1632765801233,"level":0,"_id":"h5n2ej0keVPeBf6x"}
{"question":"Can we import same package/class two times? Will the JVM load the package twice at runtime?","answer":"We can import the same package or same class multiple times. The JVM will internally load the class only once no matter how many times import the same class.","date":1632765801231,"level":0,"_id":"hG8zU4OUCFDqzi9P"}
{"question":"Phantom References","answer":"The objects which are being referenced by phantom references are eligible for garbage collection. But, before removing them from the memory, JVM puts them in a queue called ‘reference queue’ . They are put in a reference queue after calling finalize() method on them.To create such references java.lang.ref.PhantomReference class is used.\n\n","date":1632765801236,"level":0,"_id":"iIeghHwInjiRmRzj"}
{"question":"Can there be two main methods in a class?","answer":"Yes, there can be two main methods. This also means that the main method is overloaded. But at the time of execution, JVM only calls the original main method and not the overloaded main method. ","date":1632765801227,"level":0,"_id":"imn4eNcarayo1KIQ"}
{"question":"The difference between Inheritance and Composition?","answer":"Though both Inheritance and Composition provides code reusablility, main difference between Composition and Inheritance in Java is that Composition allows reuse of code without extending it but for Inheritance you must extend the class for any reuse of code or functionality. Inheritance is an \"is-a\" relationship. Composition is a \"has-a\".","date":1632765801234,"level":0,"_id":"ineDAtAhuTYfsBdh"}
{"question":"Soft References:","answer":"In Soft reference, even if the object is free for garbage collection then also its not garbage collected, until JVM is in need of memory badly.The objects gets cleared from the memory when JVM runs out of memory.To create such references java.lang.ref.SoftReference class is used.","date":1632765801235,"level":0,"_id":"jCpPSY7O6J5jyv48"}
{"question":"How many objects will be created in the following code?                       String s = new String(\"Welcome\");  ","answer":"Two objects, one in string constant pool and other in non-pool(heap). ","date":1633189711067,"level":2,"_id":"jEX8Z1IISQtbNvRC"}
{"question":"What is awt in java?","answer":"The Abstract Window Toolkit (AWT) is Java’s original platform-dependent windowing, graphics, and user-interface widget toolkit, preceding Swing. The AWT is part of the Java Foundation Classes (JFC) — the standard API for providing a graphical user interface (GUI) for a Java program. AWT is also the GUI toolkit for a number of Java ME profiles. For example, Connected Device Configuration profiles require Java runtimes on mobile telephones to support the Abstract Window Toolkit.","date":1632765801225,"level":0,"_id":"jFh3jidM4SZeOqjQ"}
{"question":"What is dao in java?","answer":"Dao is a simple java class which contains JDBC logic. The Java Data Access Object (Java DAO) is an important component in business applications. Business applications almost always need access to data from relational or object databases and the Java platform offers many techniques for accessing this data. ","date":1632765801225,"level":0,"_id":"jQr14DYhq6oFLuRM"}
{"question":"Is method overloading possible by changing only the return type?","answer":"No","date":1633448911249,"level":3,"_id":"jWgq7C0qiH63sjNE"}
{"question":" Can a Dead Thread Be Started Again?","answer":"No, a thread that is in the dead state can't be started again.","date":1632765801224,"level":0,"_id":"jdVfkD0FiUnWo8gb"}
{"question":"What is the reflection?","answer":"Reflection is the process of examining or modifying the runtime behavior of a class at runtime. The java.lang.Class class provides various methods that can be used to get metadata, examine and change the runtime behavior of a class. The java.lang and java.lang.reflect packages provide classes for java reflection. ","date":1632844111427,"level":1,"_id":"juSj9CDrtrWPUydT"}
{"question":"What is the purpose of the Runtime class? ","answer":"Java Runtime class is used to interact with a java runtime environment. Java Runtime class provides methods to execute a process, invoke GC, get total and free memory, etc. There is only one instance of java.lang.Runtime class is available for one java application. The Runtime.getRuntime() method returns the singleton instance of Runtime class. ","date":1632632204347,"level":0,"_id":"k5W8e52d1UIDlgYv"}
{"question":"What is the volatile keyword in java?","answer":"Volatile keyword is used in multithreaded programming to achieve the thread safety, as a change in one volatile variable is visible to all other threads so one variable can be used by one thread at a time. ","date":1632632216214,"level":0,"_id":"kRPxhu5chagGxmey"}
{"question":"What is the default value of the local variables?","answer":"There is no default value for local variables, so local variables should be declared and an initial value should be assigned before the first use.","date":1632765801233,"level":0,"_id":"klm54ydoNoF8r3LU"}
{"question":"What is classpath in java?","answer":"The CLASSPATH variable is one way to tell applications, including the JDK tools, where to look for user classes. (Classes that are part of the JRE, JDK platform, and extensions should be defined through other means, such as the bootstrap class path or the extensions directory.) ","date":1632765801226,"level":0,"_id":"l0xbcMULQknWF7MI"}
{"question":"What is the difference between notify() and notifyAll()? ","answer":"The notify() is used to unblock one waiting thread whereas notifyAll() method is used to unblock all the threads in waiting state. ","date":1633189711977,"level":2,"_id":"l1Uvmxh2aBzqjwam"}
{"question":"Can Java object be locked down for exclusive use by a given thread?  ","answer":"Yes. You can lock an object by putting it in a \"synchronized\" block. The locked object is inaccessible to any thread other than the one that explicitly claimed it.","date":1632844112155,"level":1,"_id":"laFguTtvznPO6mYt"}
{"question":"Are Arrays of Primitive Data Types?","answer":"No. In Java, Arrays are objects.","date":1632765801224,"level":0,"_id":"loNxKE82VXerR0au"}
{"question":"What is the static import?","answer":"By static import, we can access the static members of a class directly, and there is no to qualify it with the class name.","date":1633189712337,"level":2,"_id":"lwIvemWyHKvkC989"}
{"question":"What is the difference between factory and abstract factory pattern?","answer":"The Factory Method is usually categorised by a switch statement where each case returns a different class, using the same root interface so that the calling code never needs to make decisions about the implementation.  Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object. In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.","date":1632765801231,"level":0,"_id":"lydexf9xK1K5yfS4"}
{"question":"What are CLOB and BLOB data types in JDBC?","answer":"BLOB: Blob can be defined as the variable-length, binary large object which is used to hold the group of Binary data such as voice, images, and mixed media. It can hold up to 2GB data on MySQL database and 128 GB on Oracle database. BLOB is supported by many databases such as MySQL, Oracle, and DB2 to store the binary data (images, video, audio, and mixed media).\n\nCLOB: Clob can be defined as the variable-length, character-large object which is used to hold the character-based data such as files in many databases. It can hold up to 2 GB on MySQL database, and 128 GB on Oracle Database. A CLOB is considered as a character string.","date":1632765801222,"level":0,"_id":"m3EB8GICN5qWYOpc"}
{"question":"What do you understand by BlockingQueue?\n\n","answer":"BlockingQueue is an interface which extends the Queue interface. It provides concurrency in the operations like retrieval, insertion, deletion. While retrieval of any element, it waits for the queue to be non-empty. While storing the elements, it waits for the available space. BlockingQueue cannot contain null elements, and implementation of BlockingQueue is thread-safe.","date":1632765801219,"level":0,"_id":"mNivI4VnXD1Yaw6N"}
{"question":"What is JIT compiler in Java?","answer":"The Just-In-Time (JIT) compiler is a component of the runtime environment that improves the performance of Java applications by compiling bytecodes to native machine code at run time.","date":1632765801231,"level":0,"_id":"mZJpBsAfMfoZAvkT"}
{"question":"Why must wait() method be called from the synchronized block?","answer":"We must call the wait method otherwise it will throw java.lang.IllegalMonitorStateException exception. Moreover, we need wait() method for inter-thread communication with notify() and notifyAll(). Therefore It must be present in the synchronized block for the proper and correct communication. ","date":1632632277209,"level":0,"_id":"mdMX2t3iceXjOTLx"}
{"question":"What contains .class file?","answer":"Bytecode – the machine language of the JVM; the .class file does not contain code that is native to processor","date":1633448912685,"level":3,"_id":"mk7rAnhgZLHLVKia"}
{"question":"What is an I/O filter? ","answer":"An I/O filter is an object that reads from one stream and writes to another, usually altering the data in some way as it is passed from one stream to another. Many Filter classes that allow a user to make a chain using multiple input streams. It generates a combined effect on several filters.","date":1632632302150,"level":0,"_id":"mpPbwn68jV94NS9z"}
{"question":"Skeleton","answer":"The skeleton is an object, acts as a gateway for the server side object. All the incoming requests are routed through it. When the skeleton receives the incoming request, it does the following tasks:      It reads the parameter for the remote method.     It invokes the method on the actual remote object.     It writes and transmits (marshals) the result to the caller. ","date":1632632314484,"level":0,"_id":"mtMI3qExCao47Unm"}
{"question":"Can there be an abstract method without an abstract class?","answer":"No","date":1633448913295,"level":3,"_id":"mvoNJU8F7MFpADcL"}
{"question":"Types of Association","answer":"Aggregation (weak association);  Composition (strong association)","date":1632765801229,"level":0,"_id":"n1ng6RHr0ULzorgB"}
{"question":"What is shutdown hook?","answer":"The shutdown hook is a thread that is invoked implicitly before JVM shuts down. So we can use it to perform clean up the resource or save the state when JVM shuts down normally or abruptly. ","date":1632632350881,"level":0,"_id":"nGQYlKB1eG7eu9VA"}
{"question":"Distinguish between static loading and dynamic class loading?","answer":"Static Class Loading: Creating objects and instance using new keyword is known as static class loading. The retrieval of class definition and instantiation of the object is done at compile time. Dynamic Class Loading: Loading classes use Class.forName() method. Dynamic class loading is done when the name of the class is not known at compile time.","date":1632765801232,"level":0,"_id":"nLVr3hlaYemV5D30"}
{"question":"Can we make the user thread as daemon thread if the thread is started?","answer":"No, if you do so, it will throw IllegalThreadStateException. Therefore, we can only create a daemon thread before starting the thread.","date":1632844113678,"level":1,"_id":"nXpFJizJYbLoi2pu"}
{"question":"Why java uses the concept of the string literal?","answer":"To make Java more memory efficient (because no new objects are created if it exists already in the string constant pool). ","date":1632632375741,"level":0,"_id":"nY6bzKnmOyGifPff"}
{"question":"StringBuffer","answer":"mutable class; The StringBuffer is fast and consumes less memory when you concat strings; doesn’t override the equals() method of Object class, StringBuffer is synchronized (=thread safe); StringBuffer is less efficient than StringBuilder.","date":1632844114053,"level":1,"_id":"ncL74O9dj8hU5cKQ"}
{"question":"How can we maintain the integrity of a database by using JDBC?","answer":"To maintain the integrity of a database, we need to ensure the ACID properties. ACID properties mean Atomicity, Consistency, Isolation, and durability. In JDBC, Connection interface provides methods like setAutoCommit(), commit(), and rollback() which can be used to manage transaction. ","date":1632765801223,"level":0,"_id":"ndcbfT4M3Prw8zQ3"}
{"question":"What is the purpose of wait() method in Java?","answer":"The wait() method is provided by the Object class in Java. This method is used for inter-thread communication in Java. The java.lang.Object.wait() is used to pause the current thread, and wait until another thread does not call the notify() or notifyAll() method. Its syntax is given below.  public final void wait()","date":1632844114243,"level":1,"_id":"ooT7GrGxNV3SekMw"}
{"question":"Java Stack Memory","answer":"Stack in java is a section of memory which contains methods, local variables and reference variables. Local variables are created in the stack.\nStack memory is always referenced in LIFO (Last-In-First-Out) order. Whenever a method is invoked, a new block is created in the stack memory for the method to hold local primitive values and reference to other objects in the method.\nAs soon as method ends, the block becomes unused and become available for next method. Stack memory size is very less compared to Heap memory.","date":1632765801230,"level":0,"_id":"p6AtQwyrMil6AuaP"}
{"question":"When you compile a program written in the Java programming language, the compiler converts the human-readable source file into platform-independent code that a Java Virtual Machine can understand. What is this platform-independent code called?","answer":"bytecode","date":1633189714445,"level":2,"_id":"pE4RO4PerUfxWZYe"}
{"question":"What is the synchronization?","answer":"Synchronization is the capability to control the access of multiple threads to any shared resource. It is used:      To prevent thread interference.     To prevent consistency problem.  When the multiple threads try to do the same task, there is a possibility of an erroneous result, hence to remove this issue, Java uses the process of synchronization which allows only one thread to be executed at a time. ","date":1632844114635,"level":1,"_id":"r58jemNXAaVAgfLQ"}
{"question":"What is Garbage Collection?","answer":"Garbage collection is a process of reclaiming the unused runtime objects. It is performed for memory management. In other words, we can say that It is the process of removing unused objects from the memory to free up space and make this space available for Java Virtual Machine. ","date":1632844114830,"level":1,"_id":"r9QHxJpV7zVCAOwP"}
{"question":" What is a lightweight component?","answer":"Lightweight components are the one which does not go with the native call to obtain the graphical units. They share their parent component graphical units to render them. For example, Swing components, and JavaFX Components. ","date":1632632516778,"level":0,"_id":"rgucleK5cpJotImc"}
{"question":" What is microservices java?","answer":"Microservices are a form of service-oriented architecture style (one of the most important skills for Java developers) wherein applications are built as a collection of different smaller services rather than one whole app.","date":1632765801229,"level":0,"_id":"rvPnOXzRc2LD8yGd"}
{"question":"How can an object be unreferenced?","answer":"by nulling the reference, by assigning a reference to another, by anonymous object etc.","date":1632632547703,"level":0,"_id":"rxnTv4j5ZwriJgGi"}
{"question":"Explain the ExecutorService Interface.","answer":"The ExecutorService Interface is the subinterface of Executor interface and adds the features to manage the lifecycle.","date":1632765801212,"level":0,"_id":"rxyslSZQPxLZDaOs"}
{"question":"Java Future interface","answer":"Java Future interface gives the result of a concurrent process. The Callable interface returns the object of java.util.concurrent.Future.\nJava Future provides following methods for implementation.\n    cancel(boolean mayInterruptIfRunning): It is used to cancel the execution of the assigned task.\n    get(): It waits for the time if execution not completed and then retrieved the result.\n    isCancelled(): It returns the Boolean value as it returns true if the task was canceled before the completion.\n    isDone(): It returns true if the job is completed successfully else returns false.","date":1632765801214,"level":0,"_id":"s3ys2CTwYVdYI8LM"}
{"question":"How to make Java ArrayList Read-Only?","answer":"We can obtain java ArrayList Read-only by calling the Collections.unmodifiableCollection() method. When we define an ArrayList as Read-only then we cannot perform any modification in the collection through  add(), remove() or set() method.","date":1632765801220,"level":0,"_id":"sDJj0W2PBBnIWWcF"}
{"question":"Can a Serialized object be transferred via network?","answer":"Yes, we can transfer a serialized object via network because the serialized object is stored in the memory in the form of bytes and can be transmitted over the network. We can also write the serialized object to the disk or the database.","date":1632844115419,"level":1,"_id":"sFXrIpHOo7IVKiWb"}
{"question":"Can you have virtual functions in Java? ","answer":"Yes, all functions in Java are virtual by default. ","date":1633189715619,"level":2,"_id":"sHla1otth7mtPiNK"}
{"question":"What Is the Difference Between Static and Dynamic Loading?","answer":"Static class loading involves the creation of objects and instances using new keywords, and dynamic class loading is done when the name of the class is not known at compile time.","date":1632765801223,"level":0,"_id":"sPrYHewpEYqC18g2"}
{"question":"What is generics in java?","answer":"Generics enable types (classes and interfaces) to be parameters when defining classes, interfaces and methods. Much like the more familiar formal parameters used in method declarations, type parameters provide a way for you to re-use the same code with different inputs. The difference is that the inputs to formal parameters are values, while the inputs to type parameters are types. ","date":1632765801228,"level":0,"_id":"sXBcifweUnBuoWqG"}
{"question":" Can we make an array volatile in Java?","answer":"Yes, you can make an array volatile in Java but only the reference which is pointing to an array, not the whole array. What I mean, if one thread changes the reference variable to points to another array, that will provide a volatile guarantee, but if multiple threads are changing individual array elements they won’t be having happens before guarantee provided by the volatile modifier.","date":1632765801227,"level":0,"_id":"suDaffvHo1TXvFs7"}
{"question":"What is difference between ClassNotFoundException and NoClassDefFoundError?","answer":"ClassNotFoundException and NoClassDefFoundError occur when a particular class is not found at runtime. However, they occur at different scenarios. ClassNotFoundException is an exception that occurs when you try to load a class at run time using Class.forName() or loadClass() methods and mentioned classes are not found in the classpath. NoClassDefFoundError is an error that occurs when a particular class is present at compile time, but was missing at run time.","date":1632765801237,"level":0,"_id":"sxDOk4tuEhHAg5zN"}
{"question":"What is framework in java?","answer":"Frameworks are large bodies (usually many classes) of prewritten code to which you add your own code to solve a problem in a specific domain. Perhaps you could say that the framework uses your code because it is usually the framework that is in control. You make use of a framework by calling its methods, inheritance, and supplying “callbacks”, listeners, or other implementations of the Observer pattern.","date":1632765801225,"level":0,"_id":"tJeaon3FQxtIQG5r"}
{"question":"What is the thread?","answer":"A thread is a lightweight subprocess. It is a separate path of execution because each thread runs in a different stack frame. A process may contain multiple threads. Threads share the process resources, but still, they execute independently. ","date":1632844115805,"level":1,"_id":"tt51MDk4VfKKquaR"}
{"question":"What is the purpose of using javap?","answer":"The javap command displays information about the fields, constructors and methods present in a class file. The javap command (also known as the Java Disassembler) disassembles one or more class files.","date":1632765801234,"level":0,"_id":"tzZrzMSP4Dec6ccU"}
{"question":"What is the purpose of the Synchronized block?","answer":"The Synchronized block can be used to perform synchronization on any specific resource of the method. Only one thread at a time can execute on a particular resource, and all other threads which attempt to enter the synchronized block are blocked.      Synchronized block is used to lock an object for any shared resource.     The scope of the synchronized block is limited to the block on which, it is applied. Its scope is smaller than a method. ","date":1632844115995,"level":1,"_id":"ucdATjcj1tXuGUdY"}
{"question":" How is the safety of a thread achieved?","answer":"If a method or class object can be used by multiple threads at a time without any race condition, then the class is thread-safe. Thread safety is used to make a program safe to use in multithreaded programming. It can be achieved by the following ways:      Synchronization     Using Volatile keyword     Using a lock based mechanism     Use of atomic wrapper classes ","date":1632632692114,"level":0,"_id":"uhs6nMQjh5u80x5V"}
{"question":"Can you write a Java class that could be used both as an applet as well as an application?","answer":"Yes. Add a main() method to the applet.","date":1632844116565,"level":1,"_id":"v5X8wDkHj21h6lwk"}
{"question":" Describe the purpose and working of sleep() method.","answer":"The sleep() method in java is used to block a thread for a particular time, which means it pause the execution of a thread for a specific time. There are two methods of doing so. When we call the sleep() method, it pauses the execution of the current thread for the given time and gives priority to another thread(if available). Moreover, when the waiting time completed then again previous thread changes its state from waiting to runnable and comes in running state, and the whole process works so on till the execution doesn't complete. ","date":1632632723163,"level":0,"_id":"vTaCc2yPv8Qx7Jo9"}
{"question":"Abstraction","answer":"Abstraction is a process of hiding the implementation details and showing only functionality to the user. It displays just the essential things to the user and hides the internal information. Abstraction enables you to focus on what the object does instead of how it does it. Abstraction lets you focus on what the object does instead of how it does it.  In Java, there are two ways to achieve the abstraction: abstract class and interface.","date":1632632766722,"level":0,"_id":"vzXwnT10fVsjyOFV"}
{"question":"Can we override the overloaded method?","answer":"Yes","date":1633189717155,"level":2,"_id":"w9uR41eUwpH2StJx"}
{"question":"Does constructor return any value?","answer":"yes, The constructor implicitly returns the current instance of the class","date":1632844117350,"level":1,"_id":"waTGrvPh4fqnj5R5"}
{"question":"What is RMI?","answer":"The RMI (Remote Method Invocation) is an API that provides a mechanism to create the distributed application in java. The RMI allows an object to invoke methods on an object running in another JVM. The RMI provides remote communication between the applications using two objects stub and skeleton.","date":1632632800512,"level":0,"_id":"whlfmXiEznpyk2ka"}
{"question":"daemon threads?","answer":"The daemon threads are the low priority threads that provide the background support and services to the user threads. Daemon thread gets automatically terminated by the JVM if the program remains with the daemon thread only, and all other user threads are ended/died. There are two methods for daemon thread available in the Thread class:      public void setDaemon(boolean status): It used to mark the thread daemon thread or a user thread.     public boolean isDaemon(): It checks the thread is daemon or not. ","date":1632632820911,"level":0,"_id":"wvCcuwD4ectxRFeB"}
{"question":"Difference between method arguments and parameters","answer":"Parameters refers to the list of variables in a method declaration. Arguments are the actual values that are passed in when the method is invoked.","date":1632632863501,"level":0,"_id":"wzx5lZD3c17VlUKY"}
{"question":"What is static synchronization?","answer":"If you make any static method as synchronized, the lock will be on the class not on the object. If we use the synchronized keyword before a method so it will lock the object (one thread can access an object at a time) but if we use static synchronized so it will lock a class (one thread can access a class at a time).","date":1632632898057,"level":0,"_id":"x4vXHYLwAqU5I6yN"}
{"question":"Method signature","answer":"the method's name and the parameter types. ","date":1632844119073,"level":1,"_id":"xifRorJTyDVrEEVt"}
{"question":" Can we use String in the switch case?","answer":"We can use String in switch case but it is just syntactic sugar. Internally string hash code is used for the switch. ","date":1632765801228,"level":0,"_id":"xnLKX0VS6cWaUtxU"}
{"question":"JIT compiler","answer":"Just-In-Time(JIT) compiler: It is used to improve the performance. JIT compiles parts of the bytecode that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here the term “compiler” refers to a translator from the instruction set of a Java virtual machine (JVM) to the instruction set of a specific CPU.","date":1632632920566,"level":0,"_id":"ymBpRXWHyDWoOgYw"}
{"question":"How can we create an immutable class in Java?","answer":"We can create an immutable class by defining a final class having all of its members as final.","date":1632844122408,"level":1,"_id":"yvtOlSaCzdlvuSLU"}
{"question":"Virtual functions","answer":"A virtual function or virtual method in an OOP language is a function or method used to override the behavior of the function in an inherited class with the same signature to achieve the polymorphism.","date":1632844122776,"level":1,"_id":"z6cFcr1y1LY32LmB"}
{"question":"What is String Pool?","answer":"String pool is the space reserved in the heap memory that can be used to store the strings. The main advantage of using the String pool is whenever we create a string literal; the JVM checks the \"string constant pool\" first. If the string already exists in the pool, a reference to the pooled instance is returned. If the string doesn't exist in the pool, a new string instance is created and placed in the pool. Therefore, it saves the memory by avoiding the duplicacy.","date":1632844123129,"level":1,"_id":"za9Og6yp7jEoSdWr"}
{"question":"What is an applet?","answer":"An applet is a small java program that runs inside the browser and generates dynamic content. It is embedded in the webpage and runs on the client side. It is secured and takes less response time. It can be executed by browsers running under many platforms, including Linux, Windows, Mac Os, etc. However, the plugins are required at the client browser to execute the applet. ","date":1632844123910,"level":1,"_id":"zf8zZMWSWLb0hSdK"}
{"question":"What is a heavyweight component?","answer":"The portable elements provided by the operating system are called heavyweight components. AWT is limited to the graphical classes provided by the operating system and therefore, It implements only the minimal subset of screen elements supported by all platforms. The Operating system dependent UI discovery tools are called heavyweight components.","date":1632633003889,"level":0,"_id":"zs1KfgLXYOkkAy9x"}
{"question":"What are the steps involved to write RMI based programs?  ","answer":"There are 6 steps which are performed to write RMI based programs.      Create the remote interface.     Provide the implementation of the remote interface.     Compile the implementation class and create the stub and skeleton objects using the rmic tool.     Start the registry service by the rmiregistry tool.     Create and start the remote application.     Create and start the client application.  ","date":1632844124939,"level":1,"_id":"zyURdF3Qj5YWdLFM"}
{"$$deleted":true,"_id":"4CvOUemmkqvA6Egq"}
{"question":"What are the main components of concurrency API?","answer":"Concurrency API can be developed using the class and interfaces of java.util.Concurrent package. There are the following classes and interfaces in java.util.Concurrent package: Executor, FarkJoinPool, ExecutorService, ScheduledExecutorService, Future, TimeUnit(Enum), CountDownLatch, CyclicBarrier     Semaphore     ThreadFactory     BlockingQueue     DelayQueue     Locks     Phaser ","date":1633119484073,"level":0,"_id":"4CvOUemmkqvA6Egq"}
{"$$deleted":true,"_id":"4iNl7gEw8UN6ZpJa"}
{"question":"Weak References","answer":"Weak Reference Objects are not the default type/class of Reference Object and they should be explicitly specified while using them.","date":1633721966225,"level":2,"_id":"4iNl7gEw8UN6ZpJa"}
{"$$deleted":true,"_id":"0fbAJefkkChzpljB"}
{"question":"Is ++ operator is thread-safe in Java?","answer":"No, it’s not a thread-safe operator because it involves multiple instructions like reading a value, incriminating it and storing it back into memory which can be overlapped between multiple threads. ","date":1633119499218,"level":0,"_id":"0fbAJefkkChzpljB"}
{"$$deleted":true,"_id":"7QrQgjFmvO1UPRtq"}
{"question":"Java platform ","answer":"The Java platform differs from most other platforms in that it's a software-only platform that runs on top of other hardware-based platforms. The Java platform has two components: JVM, The Java Application Programming Interface (API) ","date":1633119511591,"level":0,"_id":"7QrQgjFmvO1UPRtq"}
{"$$deleted":true,"_id":"2VXFvQb8iwqgXamj"}
{"question":"Why is Java Secure?","answer":"Java does not allow pointers. Pointers give access to actual locations of variables in a system. Also, java programs are bytecode executables that can run only in a JVM. Hence java programs do not have access to the host systems on which they are executing, making it more secure. Java has its own memory management system, which adds to the security feature as well. ","date":1633630089672,"level":2,"_id":"2VXFvQb8iwqgXamj"}
{"$$deleted":true,"_id":"6kZbgFgNL1LPZYcP"}
{"question":"What is the difference between the Reader/Writer class hierarchy and the InputStream/OutputStream class hierarchy?","answer":"The Reader/Writer class hierarchy is character-oriented, and the InputStream/OutputStream class hierarchy is byte-oriented. The ByteStream classes are used to perform input-output of 8-bit bytes whereas the CharacterStream classes are used to perform the input/output for the 16-bit Unicode system. ","date":1633494812049,"level":2,"_id":"6kZbgFgNL1LPZYcP"}
{"$$deleted":true,"_id":"1Rs48l1CYxNORO06"}
{"question":"What is lambda expression in java? ","answer":"A lambda expression (lambda) describes a block of code (an anonymous function) that can be passed to constructors or methods for subsequent execution. The constructor or method receives the lambda as an argument.","date":1633119550485,"level":0,"_id":"1Rs48l1CYxNORO06"}
{"$$deleted":true,"_id":"7LeiLCG7sMFNYzIO"}
{"question":"What are FilterStreams? ","answer":"FilterStream classes are used to add additional functionalities to the other stream classes. FilterStream classes act like an interface which read the data from a stream, filters it, and pass the filtered data to the caller. The FilterStream classes provide extra functionalities like adding line numbers to the destination file, etc.","date":1633722038918,"level":2,"_id":"7LeiLCG7sMFNYzIO"}
{"$$deleted":true,"_id":"0pa6CkuwjHi8xxGW"}
{"question":"Parallel Garbage Collector","answer":"Parallel garbage collector is also called as throughput collector. It is the default garbage collector of the JVM. Unlike serial garbage collector, this uses multiple threads for garbage collection. Similar to serial garbage collector this also freezes all the application threads while performing garbage collection.","date":1633629944805,"level":2,"_id":"0pa6CkuwjHi8xxGW"}
{"$$deleted":true,"_id":"2v7mtZo2a0Gj5Yon"}
{"question":"What are the differences between Statement and PreparedStatement interface?","answer":"The Statement interface provides methods to execute queries with the database. The statement interface is a factory of ResultSet; i.e., it provides the factory method to get the object of ResultSet.The PreparedStatement interface is a subinterface of Statement. It is used to execute the parameterized query.In the case of Statement, the query is compiled each time we run the program. In the case of PreparedStatement, the query is compiled only once.The Statement is mainly used in the case when we need to run the static query at runtime.PreparedStatement is used when we need to provide input parameters to the query at runtime.","date":1633119609028,"level":0,"_id":"2v7mtZo2a0Gj5Yon"}
{"$$deleted":true,"_id":"5ssfVNNzJEkcH4q3"}
{"question":"Strong References","answer":"This is the default type/class of Reference Object. Any object which has an active strong reference are not eligible for garbage collection. The object is garbage collected only when the variable which was strongly referenced points to null.","date":1633630904983,"level":2,"_id":"5ssfVNNzJEkcH4q3"}
{"$$deleted":true,"_id":"7l6Y1JDPEQv5euKs"}
{"question":"What is JDBC Driver?","answer":"JDBC Driver is a software component that enables Java application to interact with the database. ","date":1633722089400,"level":2,"_id":"7l6Y1JDPEQv5euKs"}
{"$$deleted":true,"_id":"1oKwoROJv9W0KsbZ"}
{"question":"What is the difference between Synchronous programming and Asynchronous programming regarding a thread?","answer":"Synchronous programming: In Synchronous programming model, a thread is assigned to complete a task and hence thread started working on it, and it is only available for other tasks once it will end the assigned task.\n\nAsynchronous Programming: In Asynchronous programming, one job can be completed by multiple threads and hence it provides maximum usability of the various threads.","date":1633119636534,"level":0,"_id":"1oKwoROJv9W0KsbZ"}
{"$$deleted":true,"_id":"62F6e1oe6hMMwefV"}
{"question":"Which interface is responsible for transaction management in JDBC?","answer":"The Connection interface provides methods for transaction management such as commit(), rollback() etc.","date":1633119646063,"level":0,"_id":"62F6e1oe6hMMwefV"}
{"$$deleted":true,"_id":"6TPj1FHl6FQZtHZn"}
{"question":"What is the difference between Java Callable interface and Runnable interface?","answer":"The Callable interface and Runnable interface both are used by the classes which wanted to execute with multiple threads. However, there are two main differences between the both :      A Callable <V> interface can return a result, whereas the Runnable interface cannot return any result.     A Callable <V> interface can throw a checked exception, whereas the Runnable interface cannot throw checked exception.     A Callable <V> interface cannot be used before the Java 5 whereas the Runnable interface can be used. ","date":1633494707717,"level":2,"_id":"6TPj1FHl6FQZtHZn"}
{"$$deleted":true,"_id":"6MdEHBHFNS7Vtxpv"}
{"question":"State Two Differences Between an Inner Class and a Subclass","answer":"While Inner classes are in the same file, subclasses can be in another file. With that in mind, while subclasses have the methods of their parent class, inner classes get the methods they want.","date":1633630994805,"level":2,"_id":"6MdEHBHFNS7Vtxpv"}
{"$$deleted":true,"_id":"16fIFNuQFk4yBx63"}
{"question":"What is hash-collision in Hashtable and how it is handled in Java?","answer":"Two different keys with the same hash value are known as hash-collision. Two separate entries will be kept in a single hash bucket to avoid the collision. There are two ways to avoid hash-collision.\n\n    Separate Chaining\n    Open Addressing","date":1633721638945,"level":2,"_id":"16fIFNuQFk4yBx63"}
{"$$deleted":true,"_id":"1iCA3y9U26LhdgLA"}
{"question":"What do you understand by fail-fast?","answer":"The Iterator in java which immediately throws ConcurrentmodificationException, if any structural modification occurs in, is called as a Fail-fast iterator. Fail-fats iterator does not require any extra space in memory.\n","date":1633721667147,"level":2,"_id":"1iCA3y9U26LhdgLA"}
{"$$deleted":true,"_id":"2Pgje2xjY2ppRG0p"}
{"question":"The difference between Serializable and Externalizable in Java?","answer":"Serializable interface is used to make Java classes serializable so that they can be transferred over a network or their state can be saved on disk, but it leverages default serialization built-in JVM, which is expensive, fragile and not secure. Externalizable allows you to fully control the Serialization process, specify a custom binary format and add more security measure.","date":1633721708656,"level":2,"_id":"2Pgje2xjY2ppRG0p"}
{"$$deleted":true,"_id":"5HsyhZQMVMaIrE6h"}
{"question":"Define FutureTask class in Java? ","answer":"Java FutureTask class provides a base implementation of the Future interface. The result can only be obtained if the execution of one task is completed, and if the computation is not achieved then get method will be blocked. If the execution is completed, then it cannot be re-started and can't be canceled.\nSyntax: public class FutureTask<V> extends Object implements RunnableFuture<V>","date":1633119736495,"level":0,"_id":"5HsyhZQMVMaIrE6h"}
{"$$deleted":true,"_id":"3Dt07X5bWp83ZYPx"}
{"question":"What is lock interface in Concurrency API in Java?","answer":"The java.util.concurrent.locks.Lock interface is used as the synchronization mechanism. It works similar to the synchronized block. There are a few differences between the lock and synchronized block: 1) Lock interface provides the guarantee of sequence in which the waiting thread will be given the access, whereas the synchronized block doesn't guarantee it. 2) Lock interface provides the option of timeout if the lock is not granted whereas the synchronized block doesn't provide that. The methods of Lock interface, i.e., Lock() and Unlock() can be called in different methods whereas single synchronized block must be fully contained in a single method.","date":1633119745872,"level":0,"_id":"3Dt07X5bWp83ZYPx"}
{"$$deleted":true,"_id":"3UegX7icYxhwjeE1"}
{"question":"Why is Java Platform Independent?","answer":"At the time of compilation, the java compiler converts the source code into a JVM interpretable set of intermediate form, which is termed as byte code. This is unlike the compiled code generated by other compilers and is non-executable. The java virtual machine interpreter processes the non-executable code and executes it on any specific machine. Hence the platform dependency is removed. ","date":1633629801226,"level":2,"_id":"3UegX7icYxhwjeE1"}
{"$$deleted":true,"_id":"71HCNJcuKKLm4X35"}
{"question":"Is JVM platform independent?","answer":"no, JVM is a platform; Java is platform independent; JVM depends on OS kernel","date":1633629801230,"level":2,"_id":"71HCNJcuKKLm4X35"}
{"$$deleted":true,"_id":"2ogpW8fsHEKkMBNn"}
{"question":"What is the nested interface? ","answer":"An Interface that is declared inside the interface or class is known as the nested interface. It is static by default. The nested interfaces are used to group related interfaces so that they can be easy to maintain. The external interface or class must refer to the nested interface. It can't be accessed directly. The nested interface must be public if it is declared inside the interface but it can have any access modifier if declared within the class.","date":1633119774038,"level":0,"_id":"2ogpW8fsHEKkMBNn"}
{"$$deleted":true,"_id":"5ypJKyMqp6kzo1YG"}
{"question":"What is covariant return type?","answer":"It is possible to have different return type for a overriding method in child class, but child’s return type should be sub-type of parent’s return type. Overriding method becomes variant with respect to return type. The covariant return type specifies that the return type may vary in the same direction as the subclass.","date":1633722002335,"level":2,"_id":"5ypJKyMqp6kzo1YG"}
